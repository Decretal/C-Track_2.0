
C-Track.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001d6  00800100  000057a0  00005834  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000057a0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000461  008002d6  008002d6  00005a0a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00005a0a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005a68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000328  00000000  00000000  00005aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000054c9  00000000  00000000  00005dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001175  00000000  00000000  0000b299  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000030c9  00000000  00000000  0000c40e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000fe8  00000000  00000000  0000f4d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b79  00000000  00000000  000104c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000679e  00000000  00000000  00011039  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002c8  00000000  00000000  000177d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a0 00 	jmp	0x140	; 0x140 <__ctors_end>
       4:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
       8:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
       c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      10:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      14:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      18:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      1c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      20:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      24:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      28:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      2c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      30:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      34:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      38:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      3c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      40:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      44:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      48:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      4c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      50:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      54:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      58:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      5c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      60:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      64:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      68:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      6c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      70:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      74:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      78:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
      7c:	dc 00       	.word	0x00dc	; ????
      7e:	ed 00       	.word	0x00ed	; ????
      80:	14 01       	movw	r2, r8
      82:	1b 01       	movw	r2, r22
      84:	67 01       	movw	r12, r14
      86:	1b 01       	movw	r2, r22
      88:	77 01       	movw	r14, r14
      8a:	a6 01       	movw	r20, r12
      8c:	a6 01       	movw	r20, r12
      8e:	87 01       	movw	r16, r14
      90:	30 1f       	adc	r19, r16
      92:	84 1f       	adc	r24, r20
      94:	84 1f       	adc	r24, r20
      96:	84 1f       	adc	r24, r20
      98:	84 1f       	adc	r24, r20
      9a:	84 1f       	adc	r24, r20
      9c:	84 1f       	adc	r24, r20
      9e:	84 1f       	adc	r24, r20
      a0:	84 1f       	adc	r24, r20
      a2:	84 1f       	adc	r24, r20
      a4:	84 1f       	adc	r24, r20
      a6:	84 1f       	adc	r24, r20
      a8:	84 1f       	adc	r24, r20
      aa:	84 1f       	adc	r24, r20
      ac:	84 1f       	adc	r24, r20
      ae:	84 1f       	adc	r24, r20
      b0:	84 1f       	adc	r24, r20
      b2:	84 1f       	adc	r24, r20
      b4:	84 1f       	adc	r24, r20
      b6:	c9 1e       	adc	r12, r25
      b8:	84 1f       	adc	r24, r20
      ba:	84 1f       	adc	r24, r20
      bc:	84 1f       	adc	r24, r20
      be:	84 1f       	adc	r24, r20
      c0:	84 1f       	adc	r24, r20
      c2:	84 1f       	adc	r24, r20
      c4:	84 1f       	adc	r24, r20
      c6:	84 1f       	adc	r24, r20
      c8:	84 1f       	adc	r24, r20
      ca:	8a 1f       	adc	r24, r26
      cc:	ce 1e       	adc	r12, r30
      ce:	c3 1e       	adc	r12, r19
      d0:	30 1f       	adc	r19, r16
      d2:	30 1f       	adc	r19, r16
      d4:	84 1f       	adc	r24, r20
      d6:	84 1f       	adc	r24, r20
      d8:	84 1f       	adc	r24, r20
      da:	84 1f       	adc	r24, r20
      dc:	84 1f       	adc	r24, r20
      de:	84 1f       	adc	r24, r20
      e0:	84 1f       	adc	r24, r20
      e2:	84 1f       	adc	r24, r20
      e4:	8f 1f       	adc	r24, r31
      e6:	84 1f       	adc	r24, r20
      e8:	84 1f       	adc	r24, r20
      ea:	84 1f       	adc	r24, r20
      ec:	d9 1e       	adc	r13, r25
      ee:	84 1f       	adc	r24, r20
      f0:	c3 1e       	adc	r12, r19
      f2:	84 1f       	adc	r24, r20
      f4:	84 1f       	adc	r24, r20
      f6:	c9 1e       	adc	r12, r25

000000f8 <__trampolines_end>:
      f8:	63 64       	ori	r22, 0x43	; 67
      fa:	69 6e       	ori	r22, 0xE9	; 233
      fc:	6f 70       	andi	r22, 0x0F	; 15
      fe:	73 75       	andi	r23, 0x53	; 83
     100:	78 58       	subi	r23, 0x88	; 136
     102:	5b 00       	.word	0x005b	; ????

00000104 <pstr_nan>:
     104:	4e 41 4e                                            NAN

00000107 <pstr_inity>:
     107:	49 4e 49 54 59                                      INITY

0000010c <pstr_inf>:
     10c:	49 4e 46                                            INF

0000010f <pwr_m10>:
     10f:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     11f:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000127 <pwr_p10>:
     127:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     137:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000140 <__ctors_end>:
     140:	11 24       	eor	r1, r1
     142:	1f be       	out	0x3f, r1	; 63
     144:	cf ef       	ldi	r28, 0xFF	; 255
     146:	d0 e1       	ldi	r29, 0x10	; 16
     148:	de bf       	out	0x3e, r29	; 62
     14a:	cd bf       	out	0x3d, r28	; 61

0000014c <__do_copy_data>:
     14c:	12 e0       	ldi	r17, 0x02	; 2
     14e:	a0 e0       	ldi	r26, 0x00	; 0
     150:	b1 e0       	ldi	r27, 0x01	; 1
     152:	e0 ea       	ldi	r30, 0xA0	; 160
     154:	f7 e5       	ldi	r31, 0x57	; 87
     156:	02 c0       	rjmp	.+4      	; 0x15c <__do_copy_data+0x10>
     158:	05 90       	lpm	r0, Z+
     15a:	0d 92       	st	X+, r0
     15c:	a6 3d       	cpi	r26, 0xD6	; 214
     15e:	b1 07       	cpc	r27, r17
     160:	d9 f7       	brne	.-10     	; 0x158 <__do_copy_data+0xc>

00000162 <__do_clear_bss>:
     162:	27 e0       	ldi	r18, 0x07	; 7
     164:	a6 ed       	ldi	r26, 0xD6	; 214
     166:	b2 e0       	ldi	r27, 0x02	; 2
     168:	01 c0       	rjmp	.+2      	; 0x16c <.do_clear_bss_start>

0000016a <.do_clear_bss_loop>:
     16a:	1d 92       	st	X+, r1

0000016c <.do_clear_bss_start>:
     16c:	a7 33       	cpi	r26, 0x37	; 55
     16e:	b2 07       	cpc	r27, r18
     170:	e1 f7       	brne	.-8      	; 0x16a <.do_clear_bss_loop>
     172:	0e 94 3e 03 	call	0x67c	; 0x67c <main>
     176:	0c 94 ce 2b 	jmp	0x579c	; 0x579c <_exit>

0000017a <__bad_interrupt>:
     17a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000017e <parseRMC>:
/*
    function for parsing NMEA Sentences with RMC-format
    
    returns 0 if sentence is invalid; 1 if everything is ok
*/
int parseRMC(char *str, Point *p) {
     17e:	8f 92       	push	r8
     180:	9f 92       	push	r9
     182:	af 92       	push	r10
     184:	bf 92       	push	r11
     186:	cf 92       	push	r12
     188:	df 92       	push	r13
     18a:	ef 92       	push	r14
     18c:	ff 92       	push	r15
     18e:	0f 93       	push	r16
     190:	1f 93       	push	r17
     192:	cf 93       	push	r28
     194:	df 93       	push	r29
     196:	8b 01       	movw	r16, r22
    */
	
	double degrees, minutes, decimal;
    int i = 0;

    char* ptr = strtok(str, ",");
     198:	61 e0       	ldi	r22, 0x01	; 1
     19a:	71 e0       	ldi	r23, 0x01	; 1
     19c:	0e 94 d2 23 	call	0x47a4	; 0x47a4 <strtok>
        example for rmc string:
        $GNRMC,155401.000,A,4809.0000,N,01135.0002,E,0.00,0.00,251219„,A*79
    */
	
	double degrees, minutes, decimal;
    int i = 0;
     1a0:	c0 e0       	ldi	r28, 0x00	; 0
     1a2:	d0 e0       	ldi	r29, 0x00	; 0

    char* ptr = strtok(str, ",");

    while(ptr != NULL)
     1a4:	e6 c0       	rjmp	.+460    	; 0x372 <parseRMC+0x1f4>
    {
        switch(i) 
     1a6:	ca 30       	cpi	r28, 0x0A	; 10
     1a8:	d1 05       	cpc	r29, r1
     1aa:	08 f0       	brcs	.+2      	; 0x1ae <parseRMC+0x30>
     1ac:	cf c0       	rjmp	.+414    	; 0x34c <parseRMC+0x1ce>
     1ae:	fe 01       	movw	r30, r28
     1b0:	e2 5c       	subi	r30, 0xC2	; 194
     1b2:	ff 4f       	sbci	r31, 0xFF	; 255
     1b4:	0c 94 04 23 	jmp	0x4608	; 0x4608 <__tablejump2__>
        {
            case 0:
                // check the beginning of nmea sentece
                // should be $GNRMC...
                if (ptr[0] != '$') return 0;
     1b8:	fc 01       	movw	r30, r24
     1ba:	20 81       	ld	r18, Z
     1bc:	24 32       	cpi	r18, 0x24	; 36
     1be:	09 f0       	breq	.+2      	; 0x1c2 <parseRMC+0x44>
     1c0:	de c0       	rjmp	.+444    	; 0x37e <parseRMC+0x200>
                if (strncmp(ptr+3, "RMC",3) != 0) return 0;
     1c2:	43 e0       	ldi	r20, 0x03	; 3
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	63 e0       	ldi	r22, 0x03	; 3
     1c8:	71 e0       	ldi	r23, 0x01	; 1
     1ca:	03 96       	adiw	r24, 0x03	; 3
     1cc:	0e 94 ff 23 	call	0x47fe	; 0x47fe <strncmp>
     1d0:	89 2b       	or	r24, r25
     1d2:	09 f0       	breq	.+2      	; 0x1d6 <parseRMC+0x58>
     1d4:	d7 c0       	rjmp	.+430    	; 0x384 <parseRMC+0x206>
                i++;
     1d6:	21 96       	adiw	r28, 0x01	; 1
                break;
     1d8:	c6 c0       	rjmp	.+396    	; 0x366 <parseRMC+0x1e8>
            case 1:
                // first field with value is time 
                // ...RMC,155401.000,A...
                
                // if field is empty the next field is read
                if (*ptr == 'A' || *ptr == 'V') return 0;
     1da:	fc 01       	movw	r30, r24
     1dc:	20 81       	ld	r18, Z
     1de:	21 34       	cpi	r18, 0x41	; 65
     1e0:	09 f4       	brne	.+2      	; 0x1e4 <parseRMC+0x66>
     1e2:	d3 c0       	rjmp	.+422    	; 0x38a <parseRMC+0x20c>
     1e4:	26 35       	cpi	r18, 0x56	; 86
     1e6:	09 f4       	brne	.+2      	; 0x1ea <parseRMC+0x6c>
     1e8:	d3 c0       	rjmp	.+422    	; 0x390 <parseRMC+0x212>

                sscanf(ptr, "%2hu%2hu%2hu", &p->hour, &p->minutes, &p->seconds);
     1ea:	98 01       	movw	r18, r16
     1ec:	2e 5e       	subi	r18, 0xEE	; 238
     1ee:	3f 4f       	sbci	r19, 0xFF	; 255
     1f0:	3f 93       	push	r19
     1f2:	2f 93       	push	r18
     1f4:	22 50       	subi	r18, 0x02	; 2
     1f6:	31 09       	sbc	r19, r1
     1f8:	3f 93       	push	r19
     1fa:	2f 93       	push	r18
     1fc:	22 50       	subi	r18, 0x02	; 2
     1fe:	31 09       	sbc	r19, r1
     200:	3f 93       	push	r19
     202:	2f 93       	push	r18
     204:	27 e0       	ldi	r18, 0x07	; 7
     206:	31 e0       	ldi	r19, 0x01	; 1
     208:	3f 93       	push	r19
     20a:	2f 93       	push	r18
     20c:	9f 93       	push	r25
     20e:	8f 93       	push	r24
     210:	0e 94 6c 24 	call	0x48d8	; 0x48d8 <sscanf>
                i++;
     214:	21 96       	adiw	r28, 0x01	; 1
                break;
     216:	8d b7       	in	r24, 0x3d	; 61
     218:	9e b7       	in	r25, 0x3e	; 62
     21a:	0a 96       	adiw	r24, 0x0a	; 10
     21c:	0f b6       	in	r0, 0x3f	; 63
     21e:	f8 94       	cli
     220:	9e bf       	out	0x3e, r25	; 62
     222:	0f be       	out	0x3f, r0	; 63
     224:	8d bf       	out	0x3d, r24	; 61
     226:	9f c0       	rjmp	.+318    	; 0x366 <parseRMC+0x1e8>
            case 2:
                // field says if values are valid
                // ...,A,...

                // A -> valid; V -> invalid
                if (*ptr == 'V') return 0;
     228:	fc 01       	movw	r30, r24
     22a:	80 81       	ld	r24, Z
     22c:	86 35       	cpi	r24, 0x56	; 86
     22e:	09 f4       	brne	.+2      	; 0x232 <parseRMC+0xb4>
     230:	b2 c0       	rjmp	.+356    	; 0x396 <parseRMC+0x218>
                i++;
     232:	21 96       	adiw	r28, 0x01	; 1
                break;
     234:	98 c0       	rjmp	.+304    	; 0x366 <parseRMC+0x1e8>
                // ..,4809.0000,..

                // information is in ddmm.mmmm format

                // read the value
                degrees = atof(ptr);
     236:	0e 94 ce 23 	call	0x479c	; 0x479c <atof>
     23a:	6b 01       	movw	r12, r22
     23c:	7c 01       	movw	r14, r24

                // seperate minutes and degrees
                minutes = degrees - ((int)((int)degrees / 100) * 100);
     23e:	0e 94 6f 21 	call	0x42de	; 0x42de <__fixsfsi>
     242:	cb 01       	movw	r24, r22
     244:	64 e6       	ldi	r22, 0x64	; 100
     246:	70 e0       	ldi	r23, 0x00	; 0
     248:	0e 94 ce 22 	call	0x459c	; 0x459c <__divmodhi4>
     24c:	cb 01       	movw	r24, r22
     24e:	24 e6       	ldi	r18, 0x64	; 100
     250:	28 9f       	mul	r18, r24
     252:	b0 01       	movw	r22, r0
     254:	29 9f       	mul	r18, r25
     256:	70 0d       	add	r23, r0
     258:	11 24       	eor	r1, r1
     25a:	07 2e       	mov	r0, r23
     25c:	00 0c       	add	r0, r0
     25e:	88 0b       	sbc	r24, r24
     260:	99 0b       	sbc	r25, r25
     262:	0e 94 a7 21 	call	0x434e	; 0x434e <__floatsisf>
     266:	9b 01       	movw	r18, r22
     268:	ac 01       	movw	r20, r24
     26a:	c7 01       	movw	r24, r14
     26c:	b6 01       	movw	r22, r12
     26e:	0e 94 8b 20 	call	0x4116	; 0x4116 <__subsf3>
     272:	4b 01       	movw	r8, r22
     274:	5c 01       	movw	r10, r24
                degrees -= minutes;
     276:	9b 01       	movw	r18, r22
     278:	ac 01       	movw	r20, r24
     27a:	c7 01       	movw	r24, r14
     27c:	b6 01       	movw	r22, r12
     27e:	0e 94 8b 20 	call	0x4116	; 0x4116 <__subsf3>

                // convert into decimal degrees
                decimal = (degrees / 100) + (minutes / 60);
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	30 e0       	ldi	r19, 0x00	; 0
     286:	48 ec       	ldi	r20, 0xC8	; 200
     288:	52 e4       	ldi	r21, 0x42	; 66
     28a:	0e 94 fd 20 	call	0x41fa	; 0x41fa <__divsf3>
     28e:	6b 01       	movw	r12, r22
     290:	7c 01       	movw	r14, r24
     292:	20 e0       	ldi	r18, 0x00	; 0
     294:	30 e0       	ldi	r19, 0x00	; 0
     296:	40 e7       	ldi	r20, 0x70	; 112
     298:	52 e4       	ldi	r21, 0x42	; 66
     29a:	c5 01       	movw	r24, r10
     29c:	b4 01       	movw	r22, r8
     29e:	0e 94 fd 20 	call	0x41fa	; 0x41fa <__divsf3>
     2a2:	9b 01       	movw	r18, r22
     2a4:	ac 01       	movw	r20, r24
     2a6:	c7 01       	movw	r24, r14
     2a8:	b6 01       	movw	r22, r12
     2aa:	0e 94 8c 20 	call	0x4118	; 0x4118 <__addsf3>

                if (i == 3)
     2ae:	c3 30       	cpi	r28, 0x03	; 3
     2b0:	d1 05       	cpc	r29, r1
     2b2:	31 f4       	brne	.+12     	; 0x2c0 <parseRMC+0x142>
                    p->lat = decimal;
     2b4:	f8 01       	movw	r30, r16
     2b6:	60 83       	st	Z, r22
     2b8:	71 83       	std	Z+1, r23	; 0x01
     2ba:	82 83       	std	Z+2, r24	; 0x02
     2bc:	93 83       	std	Z+3, r25	; 0x03
     2be:	05 c0       	rjmp	.+10     	; 0x2ca <parseRMC+0x14c>
                else
                    p->lng = decimal;
     2c0:	f8 01       	movw	r30, r16
     2c2:	64 83       	std	Z+4, r22	; 0x04
     2c4:	75 83       	std	Z+5, r23	; 0x05
     2c6:	86 83       	std	Z+6, r24	; 0x06
     2c8:	97 83       	std	Z+7, r25	; 0x07

                i++;
     2ca:	21 96       	adiw	r28, 0x01	; 1
                break;
     2cc:	4c c0       	rjmp	.+152    	; 0x366 <parseRMC+0x1e8>
            
            case 4:
                if (*ptr == 'W') p->lat *= -1;
     2ce:	fc 01       	movw	r30, r24
     2d0:	80 81       	ld	r24, Z
     2d2:	87 35       	cpi	r24, 0x57	; 87
     2d4:	51 f4       	brne	.+20     	; 0x2ea <parseRMC+0x16c>
     2d6:	f8 01       	movw	r30, r16
     2d8:	80 81       	ld	r24, Z
     2da:	91 81       	ldd	r25, Z+1	; 0x01
     2dc:	a2 81       	ldd	r26, Z+2	; 0x02
     2de:	b3 81       	ldd	r27, Z+3	; 0x03
     2e0:	b0 58       	subi	r27, 0x80	; 128
     2e2:	80 83       	st	Z, r24
     2e4:	91 83       	std	Z+1, r25	; 0x01
     2e6:	a2 83       	std	Z+2, r26	; 0x02
     2e8:	b3 83       	std	Z+3, r27	; 0x03
                i++;
     2ea:	21 96       	adiw	r28, 0x01	; 1
                break;
     2ec:	3c c0       	rjmp	.+120    	; 0x366 <parseRMC+0x1e8>

            case 6:
                if (*ptr == 'S') p->lng *= -1;
     2ee:	fc 01       	movw	r30, r24
     2f0:	80 81       	ld	r24, Z
     2f2:	83 35       	cpi	r24, 0x53	; 83
     2f4:	51 f4       	brne	.+20     	; 0x30a <parseRMC+0x18c>
     2f6:	f8 01       	movw	r30, r16
     2f8:	84 81       	ldd	r24, Z+4	; 0x04
     2fa:	95 81       	ldd	r25, Z+5	; 0x05
     2fc:	a6 81       	ldd	r26, Z+6	; 0x06
     2fe:	b7 81       	ldd	r27, Z+7	; 0x07
     300:	b0 58       	subi	r27, 0x80	; 128
     302:	84 83       	std	Z+4, r24	; 0x04
     304:	95 83       	std	Z+5, r25	; 0x05
     306:	a6 83       	std	Z+6, r26	; 0x06
     308:	b7 83       	std	Z+7, r27	; 0x07
                i++;
     30a:	21 96       	adiw	r28, 0x01	; 1
                break;
     30c:	2c c0       	rjmp	.+88     	; 0x366 <parseRMC+0x1e8>
            
            case 9:
                sscanf(ptr, "%02hu%02hu%02hu", &p->day, &p->month, &p->year);
     30e:	98 01       	movw	r18, r16
     310:	24 5f       	subi	r18, 0xF4	; 244
     312:	3f 4f       	sbci	r19, 0xFF	; 255
     314:	3f 93       	push	r19
     316:	2f 93       	push	r18
     318:	22 50       	subi	r18, 0x02	; 2
     31a:	31 09       	sbc	r19, r1
     31c:	3f 93       	push	r19
     31e:	2f 93       	push	r18
     320:	22 50       	subi	r18, 0x02	; 2
     322:	31 09       	sbc	r19, r1
     324:	3f 93       	push	r19
     326:	2f 93       	push	r18
     328:	24 e1       	ldi	r18, 0x14	; 20
     32a:	31 e0       	ldi	r19, 0x01	; 1
     32c:	3f 93       	push	r19
     32e:	2f 93       	push	r18
     330:	9f 93       	push	r25
     332:	8f 93       	push	r24
     334:	0e 94 6c 24 	call	0x48d8	; 0x48d8 <sscanf>
                i++;
     338:	21 96       	adiw	r28, 0x01	; 1
                break;
     33a:	8d b7       	in	r24, 0x3d	; 61
     33c:	9e b7       	in	r25, 0x3e	; 62
     33e:	0a 96       	adiw	r24, 0x0a	; 10
     340:	0f b6       	in	r0, 0x3f	; 63
     342:	f8 94       	cli
     344:	9e bf       	out	0x3e, r25	; 62
     346:	0f be       	out	0x3f, r0	; 63
     348:	8d bf       	out	0x3d, r24	; 61
     34a:	0d c0       	rjmp	.+26     	; 0x366 <parseRMC+0x1e8>

            default:
                printf("::%s\n", ptr);
     34c:	9f 93       	push	r25
     34e:	8f 93       	push	r24
     350:	84 e2       	ldi	r24, 0x24	; 36
     352:	91 e0       	ldi	r25, 0x01	; 1
     354:	9f 93       	push	r25
     356:	8f 93       	push	r24
     358:	0e 94 34 24 	call	0x4868	; 0x4868 <printf>
                i++;
     35c:	21 96       	adiw	r28, 0x01	; 1
                break;
     35e:	0f 90       	pop	r0
     360:	0f 90       	pop	r0
     362:	0f 90       	pop	r0
     364:	0f 90       	pop	r0
        }

        ptr = strtok(NULL, ",");
     366:	61 e0       	ldi	r22, 0x01	; 1
     368:	71 e0       	ldi	r23, 0x01	; 1
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	0e 94 d2 23 	call	0x47a4	; 0x47a4 <strtok>
	double degrees, minutes, decimal;
    int i = 0;

    char* ptr = strtok(str, ",");

    while(ptr != NULL)
     372:	00 97       	sbiw	r24, 0x00	; 0
     374:	09 f0       	breq	.+2      	; 0x378 <parseRMC+0x1fa>
     376:	17 cf       	rjmp	.-466    	; 0x1a6 <parseRMC+0x28>
                break;
        }

        ptr = strtok(NULL, ",");
    }
    return 1;
     378:	81 e0       	ldi	r24, 0x01	; 1
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	0e c0       	rjmp	.+28     	; 0x39a <parseRMC+0x21c>
        switch(i) 
        {
            case 0:
                // check the beginning of nmea sentece
                // should be $GNRMC...
                if (ptr[0] != '$') return 0;
     37e:	80 e0       	ldi	r24, 0x00	; 0
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	0b c0       	rjmp	.+22     	; 0x39a <parseRMC+0x21c>
                if (strncmp(ptr+3, "RMC",3) != 0) return 0;
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	08 c0       	rjmp	.+16     	; 0x39a <parseRMC+0x21c>
            case 1:
                // first field with value is time 
                // ...RMC,155401.000,A...
                
                // if field is empty the next field is read
                if (*ptr == 'A' || *ptr == 'V') return 0;
     38a:	80 e0       	ldi	r24, 0x00	; 0
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	05 c0       	rjmp	.+10     	; 0x39a <parseRMC+0x21c>
     390:	80 e0       	ldi	r24, 0x00	; 0
     392:	90 e0       	ldi	r25, 0x00	; 0
     394:	02 c0       	rjmp	.+4      	; 0x39a <parseRMC+0x21c>
            case 2:
                // field says if values are valid
                // ...,A,...

                // A -> valid; V -> invalid
                if (*ptr == 'V') return 0;
     396:	80 e0       	ldi	r24, 0x00	; 0
     398:	90 e0       	ldi	r25, 0x00	; 0
        }

        ptr = strtok(NULL, ",");
    }
    return 1;
     39a:	df 91       	pop	r29
     39c:	cf 91       	pop	r28
     39e:	1f 91       	pop	r17
     3a0:	0f 91       	pop	r16
     3a2:	ff 90       	pop	r15
     3a4:	ef 90       	pop	r14
     3a6:	df 90       	pop	r13
     3a8:	cf 90       	pop	r12
     3aa:	bf 90       	pop	r11
     3ac:	af 90       	pop	r10
     3ae:	9f 90       	pop	r9
     3b0:	8f 90       	pop	r8
     3b2:	08 95       	ret

000003b4 <lora_exchange>:
{
	lora_exchange(addr | 0x80, val);
}

uint8_t lora_exchange(uint8_t addr, uint8_t val)
{
     3b4:	cf 93       	push	r28
     3b6:	c6 2f       	mov	r28, r22
	register uint8_t data;

	//Set chip select (slave select or NSS) pin to low to indicate spi data transmission
	PORTA &= ~(1 << PA6);
     3b8:	92 b1       	in	r25, 0x02	; 2
     3ba:	9f 7b       	andi	r25, 0xBF	; 191
     3bc:	92 b9       	out	0x02, r25	; 2
	//Send register address
	spi_tx(addr);
     3be:	0e 94 59 20 	call	0x40b2	; 0x40b2 <spi_tx>
	//Read or send register value from module
	data = spi_x(val);
     3c2:	8c 2f       	mov	r24, r28
     3c4:	0e 94 5e 20 	call	0x40bc	; 0x40bc <spi_x>
	//End transmission
	PORTA |= (1 << PA6);
     3c8:	92 b1       	in	r25, 0x02	; 2
     3ca:	90 64       	ori	r25, 0x40	; 64
     3cc:	92 b9       	out	0x02, r25	; 2

	return data;
}
     3ce:	cf 91       	pop	r28
     3d0:	08 95       	ret

000003d2 <lora_writeRegister>:



void lora_writeRegister(uint8_t addr, uint8_t val)
{
	lora_exchange(addr | 0x80, val);
     3d2:	80 68       	ori	r24, 0x80	; 128
     3d4:	0e 94 da 01 	call	0x3b4	; 0x3b4 <lora_exchange>
     3d8:	08 95       	ret

000003da <lora_setFrequency>:
	//6. Auto mode change to STAND-BY
}


void lora_setFrequency(long frequency)
{
     3da:	af 92       	push	r10
     3dc:	bf 92       	push	r11
     3de:	cf 92       	push	r12
     3e0:	df 92       	push	r13
     3e2:	ef 92       	push	r14
     3e4:	ff 92       	push	r15
     3e6:	0f 93       	push	r16
     3e8:	1f 93       	push	r17
     3ea:	cf 93       	push	r28
     3ec:	df 93       	push	r29
	uint64_t frf = ((uint64_t)frequency << 19) / 32000000;
     3ee:	6b 01       	movw	r12, r22
     3f0:	7c 01       	movw	r14, r24
     3f2:	ff 0c       	add	r15, r15
     3f4:	cc 08       	sbc	r12, r12
     3f6:	dc 2c       	mov	r13, r12
     3f8:	76 01       	movw	r14, r12
     3fa:	26 2f       	mov	r18, r22
     3fc:	37 2f       	mov	r19, r23
     3fe:	48 2f       	mov	r20, r24
     400:	59 2f       	mov	r21, r25
     402:	6c 2d       	mov	r22, r12
     404:	7c 2d       	mov	r23, r12
     406:	8c 2d       	mov	r24, r12
     408:	9c 2d       	mov	r25, r12
     40a:	03 e1       	ldi	r16, 0x13	; 19
     40c:	0e 94 74 23 	call	0x46e8	; 0x46e8 <__ashldi3>
     410:	a1 2c       	mov	r10, r1
     412:	0f 2e       	mov	r0, r31
     414:	f8 e4       	ldi	r31, 0x48	; 72
     416:	bf 2e       	mov	r11, r31
     418:	f0 2d       	mov	r31, r0
     41a:	0f 2e       	mov	r0, r31
     41c:	f8 ee       	ldi	r31, 0xE8	; 232
     41e:	cf 2e       	mov	r12, r31
     420:	f0 2d       	mov	r31, r0
     422:	dd 24       	eor	r13, r13
     424:	d3 94       	inc	r13
     426:	e1 2c       	mov	r14, r1
     428:	f1 2c       	mov	r15, r1
     42a:	00 e0       	ldi	r16, 0x00	; 0
     42c:	10 e0       	ldi	r17, 0x00	; 0
     42e:	0e 94 17 23 	call	0x462e	; 0x462e <__udivdi3>
     432:	f2 2e       	mov	r15, r18
     434:	b3 2e       	mov	r11, r19
     436:	14 2f       	mov	r17, r20
     438:	d5 2f       	mov	r29, r21
     43a:	c6 2f       	mov	r28, r22
     43c:	c7 2e       	mov	r12, r23
     43e:	d8 2e       	mov	r13, r24
     440:	e9 2e       	mov	r14, r25

	lora_writeRegister(REG_FRF_MSB, (uint8_t)(frf >> 16));
     442:	00 e1       	ldi	r16, 0x10	; 16
     444:	0e 94 8f 23 	call	0x471e	; 0x471e <__lshrdi3>
     448:	62 2f       	mov	r22, r18
     44a:	86 e0       	ldi	r24, 0x06	; 6
     44c:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
	lora_writeRegister(REG_FRF_MID, (uint8_t)(frf >> 8));
     450:	2f 2d       	mov	r18, r15
     452:	3b 2d       	mov	r19, r11
     454:	41 2f       	mov	r20, r17
     456:	5d 2f       	mov	r21, r29
     458:	6c 2f       	mov	r22, r28
     45a:	7c 2d       	mov	r23, r12
     45c:	8d 2d       	mov	r24, r13
     45e:	9e 2d       	mov	r25, r14
     460:	08 e0       	ldi	r16, 0x08	; 8
     462:	0e 94 8f 23 	call	0x471e	; 0x471e <__lshrdi3>
     466:	62 2f       	mov	r22, r18
     468:	87 e0       	ldi	r24, 0x07	; 7
     46a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
	lora_writeRegister(REG_FRF_LSB, (uint8_t)(frf >> 0));
     46e:	6f 2d       	mov	r22, r15
     470:	88 e0       	ldi	r24, 0x08	; 8
     472:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
}
     476:	df 91       	pop	r29
     478:	cf 91       	pop	r28
     47a:	1f 91       	pop	r17
     47c:	0f 91       	pop	r16
     47e:	ff 90       	pop	r15
     480:	ef 90       	pop	r14
     482:	df 90       	pop	r13
     484:	cf 90       	pop	r12
     486:	bf 90       	pop	r11
     488:	af 90       	pop	r10
     48a:	08 95       	ret

0000048c <lora_setOCP>:
// Over Current Protection
void lora_setOCP( uint8_t mA)
{
	uint8_t ocpTrim = 27;

	if (mA <= 120) {
     48c:	89 37       	cpi	r24, 0x79	; 121
     48e:	38 f4       	brcc	.+14     	; 0x49e <lora_setOCP+0x12>
		ocpTrim = (mA - 45) / 5;
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	8d 97       	sbiw	r24, 0x2d	; 45
     494:	65 e0       	ldi	r22, 0x05	; 5
     496:	70 e0       	ldi	r23, 0x00	; 0
     498:	0e 94 ce 22 	call	0x459c	; 0x459c <__divmodhi4>
     49c:	0a c0       	rjmp	.+20     	; 0x4b2 <lora_setOCP+0x26>
		} else if (mA <=240) {
     49e:	81 3f       	cpi	r24, 0xF1	; 241
     4a0:	38 f4       	brcc	.+14     	; 0x4b0 <lora_setOCP+0x24>
		ocpTrim = (mA + 30) / 10;
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	4e 96       	adiw	r24, 0x1e	; 30
     4a6:	6a e0       	ldi	r22, 0x0A	; 10
     4a8:	70 e0       	ldi	r23, 0x00	; 0
     4aa:	0e 94 ce 22 	call	0x459c	; 0x459c <__divmodhi4>
     4ae:	01 c0       	rjmp	.+2      	; 0x4b2 <lora_setOCP+0x26>
}

// Over Current Protection
void lora_setOCP( uint8_t mA)
{
	uint8_t ocpTrim = 27;
     4b0:	6b e1       	ldi	r22, 0x1B	; 27
		ocpTrim = (mA - 45) / 5;
		} else if (mA <=240) {
		ocpTrim = (mA + 30) / 10;
	}

	lora_writeRegister(REG_OCP, 0x20 | (0x1F & ocpTrim));
     4b2:	6f 71       	andi	r22, 0x1F	; 31
     4b4:	60 62       	ori	r22, 0x20	; 32
     4b6:	8b e0       	ldi	r24, 0x0B	; 11
     4b8:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
     4bc:	08 95       	ret

000004be <lora_setTxPwr>:

	lora_writeRegister(REG_PA_CONFIG, PA_BOOST | (level - 2));
}*/

void lora_setTxPwr(int level)
{
     4be:	cf 93       	push	r28
     4c0:	df 93       	push	r29
     4c2:	ec 01       	movw	r28, r24
	// PA BOOST
	if (level > 17) {
     4c4:	82 31       	cpi	r24, 0x12	; 18
     4c6:	91 05       	cpc	r25, r1
     4c8:	6c f0       	brlt	.+26     	; 0x4e4 <lora_setTxPwr+0x26>
		if (level > 20) {
     4ca:	45 97       	sbiw	r24, 0x15	; 21
     4cc:	14 f0       	brlt	.+4      	; 0x4d2 <lora_setTxPwr+0x14>
			level = 20;
     4ce:	c4 e1       	ldi	r28, 0x14	; 20
     4d0:	d0 e0       	ldi	r29, 0x00	; 0
		}

		// subtract 3 from level, so 18 - 20 maps to 15 - 17
		level -= 3;
     4d2:	23 97       	sbiw	r28, 0x03	; 3

		// High Power +20 dBm Operation (Semtech SX1276/77/78/79 5.4.3.)
		lora_writeRegister(REG_PA_DAC, 0x87);
     4d4:	67 e8       	ldi	r22, 0x87	; 135
     4d6:	8d e4       	ldi	r24, 0x4D	; 77
     4d8:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
		lora_setOCP(140);
     4dc:	8c e8       	ldi	r24, 0x8C	; 140
     4de:	0e 94 46 02 	call	0x48c	; 0x48c <lora_setOCP>
     4e2:	0b c0       	rjmp	.+22     	; 0x4fa <lora_setTxPwr+0x3c>
		} else {
		if (level < 2) {
     4e4:	02 97       	sbiw	r24, 0x02	; 2
     4e6:	14 f4       	brge	.+4      	; 0x4ec <lora_setTxPwr+0x2e>
			level = 2;
     4e8:	c2 e0       	ldi	r28, 0x02	; 2
     4ea:	d0 e0       	ldi	r29, 0x00	; 0
		}
		//Default value PA_HF/LF or +17dBm
		lora_writeRegister(REG_PA_DAC, 0x84);
     4ec:	64 e8       	ldi	r22, 0x84	; 132
     4ee:	8d e4       	ldi	r24, 0x4D	; 77
     4f0:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
		lora_setOCP(100);
     4f4:	84 e6       	ldi	r24, 0x64	; 100
     4f6:	0e 94 46 02 	call	0x48c	; 0x48c <lora_setOCP>
	}

	lora_writeRegister(REG_PA_CONFIG, PA_BOOST | (level - 2));
     4fa:	6c 2f       	mov	r22, r28
     4fc:	62 50       	subi	r22, 0x02	; 2
     4fe:	60 68       	ori	r22, 0x80	; 128
     500:	89 e0       	ldi	r24, 0x09	; 9
     502:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
}
     506:	df 91       	pop	r29
     508:	cf 91       	pop	r28
     50a:	08 95       	ret

0000050c <lora_sleep>:


void lora_sleep()
{
	lora_writeRegister(REG_OP_MODE, MODE_LONG_RANGE_MODE | MODE_SLEEP);
     50c:	60 e8       	ldi	r22, 0x80	; 128
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
     514:	08 95       	ret

00000516 <lora_idle>:
}

void lora_idle()
{
	lora_writeRegister(REG_OP_MODE, MODE_LONG_RANGE_MODE | MODE_STDBY);
     516:	61 e8       	ldi	r22, 0x81	; 129
     518:	81 e0       	ldi	r24, 0x01	; 1
     51a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
     51e:	08 95       	ret

00000520 <lora_readRegister>:
}

uint8_t lora_readRegister(uint8_t reg)
{
	//To read register, 8th bit has to be set to 0, which is achieved with masking with 0x7f
	return lora_exchange( reg & 0x7f, 0x00 );
     520:	60 e0       	ldi	r22, 0x00	; 0
     522:	8f 77       	andi	r24, 0x7F	; 127
     524:	0e 94 da 01 	call	0x3b4	; 0x3b4 <lora_exchange>
     528:	08 95       	ret

0000052a <lora_init>:
#include <stdbool.h>

bool lora_init()
{
	// SPI is already done in spi_init
	uint8_t v = lora_readRegister(REG_VERSION);
     52a:	82 e4       	ldi	r24, 0x42	; 66
     52c:	0e 94 90 02 	call	0x520	; 0x520 <lora_readRegister>
	if (v != 0x12) return false;
     530:	82 31       	cpi	r24, 0x12	; 18
     532:	21 f5       	brne	.+72     	; 0x57c <lora_init+0x52>
	
	lora_sleep();
     534:	0e 94 86 02 	call	0x50c	; 0x50c <lora_sleep>
	
	lora_setFrequency(868.3e6);
     538:	60 e0       	ldi	r22, 0x00	; 0
     53a:	75 e3       	ldi	r23, 0x35	; 53
     53c:	81 ec       	ldi	r24, 0xC1	; 193
     53e:	93 e3       	ldi	r25, 0x33	; 51
     540:	0e 94 ed 01 	call	0x3da	; 0x3da <lora_setFrequency>
	
	lora_writeRegister(REG_FIFO_TX_BASE_ADDR, 0);
     544:	60 e0       	ldi	r22, 0x00	; 0
     546:	8e e0       	ldi	r24, 0x0E	; 14
     548:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
	lora_writeRegister(REG_FIFO_RX_BASE_ADDR, 0);
     54c:	60 e0       	ldi	r22, 0x00	; 0
     54e:	8f e0       	ldi	r24, 0x0F	; 15
     550:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
	
	
	// set LNA boost
	lora_writeRegister(REG_LNA, lora_readRegister(REG_LNA) | 0x03);
     554:	8c e0       	ldi	r24, 0x0C	; 12
     556:	0e 94 90 02 	call	0x520	; 0x520 <lora_readRegister>
     55a:	68 2f       	mov	r22, r24
     55c:	63 60       	ori	r22, 0x03	; 3
     55e:	8c e0       	ldi	r24, 0x0C	; 12
     560:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
	// set auto AGC
	lora_writeRegister(REG_MODEM_CONFIG_3, 0x04);
     564:	64 e0       	ldi	r22, 0x04	; 4
     566:	86 e2       	ldi	r24, 0x26	; 38
     568:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
	
	// set output power
	// max 12.75 dBm
	lora_setTxPwr(12);
     56c:	8c e0       	ldi	r24, 0x0C	; 12
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	0e 94 5f 02 	call	0x4be	; 0x4be <lora_setTxPwr>
	
	lora_idle();
     574:	0e 94 8b 02 	call	0x516	; 0x516 <lora_idle>
	
	return true;
     578:	81 e0       	ldi	r24, 0x01	; 1
     57a:	08 95       	ret

bool lora_init()
{
	// SPI is already done in spi_init
	uint8_t v = lora_readRegister(REG_VERSION);
	if (v != 0x12) return false;
     57c:	80 e0       	ldi	r24, 0x00	; 0
	lora_setTxPwr(12);
	
	lora_idle();
	
	return true;
}
     57e:	08 95       	ret

00000580 <lora_set_bandwidth>:

void lora_set_bandwidth( uint8_t mode ) {
     580:	cf 93       	push	r28
     582:	c8 2f       	mov	r28, r24
	//Datasheet page 112

	lora_writeRegister( REG_MODEM_CONFIG_1, ( lora_readRegister(REG_MODEM_CONFIG_1) & 0b00001111 ) | (mode << 4) );
     584:	8d e1       	ldi	r24, 0x1D	; 29
     586:	0e 94 90 02 	call	0x520	; 0x520 <lora_readRegister>
     58a:	90 e1       	ldi	r25, 0x10	; 16
     58c:	c9 9f       	mul	r28, r25
     58e:	90 01       	movw	r18, r0
     590:	11 24       	eor	r1, r1
     592:	8f 70       	andi	r24, 0x0F	; 15
     594:	68 2f       	mov	r22, r24
     596:	62 2b       	or	r22, r18
     598:	8d e1       	ldi	r24, 0x1D	; 29
     59a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
}
     59e:	cf 91       	pop	r28
     5a0:	08 95       	ret

000005a2 <lora_setSpreadingFactor>:

void lora_setSpreadingFactor(int sf)
{
     5a2:	cf 93       	push	r28
     5a4:	df 93       	push	r29
     5a6:	ec 01       	movw	r28, r24
	if (sf < 6)
     5a8:	86 30       	cpi	r24, 0x06	; 6
     5aa:	91 05       	cpc	r25, r1
     5ac:	1c f0       	brlt	.+6      	; 0x5b4 <lora_setSpreadingFactor+0x12>
	{
		sf = 6;
	}
	else if (sf > 12)
     5ae:	0d 97       	sbiw	r24, 0x0d	; 13
     5b0:	24 f4       	brge	.+8      	; 0x5ba <lora_setSpreadingFactor+0x18>
     5b2:	05 c0       	rjmp	.+10     	; 0x5be <lora_setSpreadingFactor+0x1c>

void lora_setSpreadingFactor(int sf)
{
	if (sf < 6)
	{
		sf = 6;
     5b4:	c6 e0       	ldi	r28, 0x06	; 6
     5b6:	d0 e0       	ldi	r29, 0x00	; 0
     5b8:	02 c0       	rjmp	.+4      	; 0x5be <lora_setSpreadingFactor+0x1c>
	}
	else if (sf > 12)
	{
		sf = 12;
     5ba:	cc e0       	ldi	r28, 0x0C	; 12
     5bc:	d0 e0       	ldi	r29, 0x00	; 0
	}
	
	if (sf == 6)
     5be:	c6 30       	cpi	r28, 0x06	; 6
     5c0:	d1 05       	cpc	r29, r1
     5c2:	49 f4       	brne	.+18     	; 0x5d6 <lora_setSpreadingFactor+0x34>
	{
		lora_writeRegister(REG_DETECTION_OPTIMIZE, 0xc5);
     5c4:	65 ec       	ldi	r22, 0xC5	; 197
     5c6:	81 e3       	ldi	r24, 0x31	; 49
     5c8:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
		lora_writeRegister(REG_DETECTION_THRESHOLD, 0x0c);
     5cc:	6c e0       	ldi	r22, 0x0C	; 12
     5ce:	87 e3       	ldi	r24, 0x37	; 55
     5d0:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
     5d4:	08 c0       	rjmp	.+16     	; 0x5e6 <lora_setSpreadingFactor+0x44>
	}
	else
	{
		lora_writeRegister(REG_DETECTION_OPTIMIZE, 0xc3);
     5d6:	63 ec       	ldi	r22, 0xC3	; 195
     5d8:	81 e3       	ldi	r24, 0x31	; 49
     5da:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
		lora_writeRegister(REG_DETECTION_THRESHOLD, 0x0a);
     5de:	6a e0       	ldi	r22, 0x0A	; 10
     5e0:	87 e3       	ldi	r24, 0x37	; 55
     5e2:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
	}
	
	lora_writeRegister(REG_MODEM_CONFIG_2, (lora_readRegister(REG_MODEM_CONFIG_2) & 0x0f) | ((sf << 4) & 0xf0));
     5e6:	8e e1       	ldi	r24, 0x1E	; 30
     5e8:	0e 94 90 02 	call	0x520	; 0x520 <lora_readRegister>
     5ec:	c2 95       	swap	r28
     5ee:	d2 95       	swap	r29
     5f0:	d0 7f       	andi	r29, 0xF0	; 240
     5f2:	dc 27       	eor	r29, r28
     5f4:	c0 7f       	andi	r28, 0xF0	; 240
     5f6:	dc 27       	eor	r29, r28
     5f8:	8f 70       	andi	r24, 0x0F	; 15
     5fa:	6c 2f       	mov	r22, r28
     5fc:	68 2b       	or	r22, r24
     5fe:	8e e1       	ldi	r24, 0x1E	; 30
     600:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
}
     604:	df 91       	pop	r29
     606:	cf 91       	pop	r28
     608:	08 95       	ret

0000060a <lora_putd>:

void lora_putd(char* buf, uint8_t len )
{
     60a:	0f 93       	push	r16
     60c:	1f 93       	push	r17
     60e:	cf 93       	push	r28
     610:	df 93       	push	r29
	if( len == 0 ) return;
     612:	66 23       	and	r22, r22
     614:	71 f1       	breq	.+92     	; 0x672 <lora_putd+0x68>
     616:	d6 2f       	mov	r29, r22
     618:	8c 01       	movw	r16, r24
	
	//Datasheet page 38
	
	//The LoRaTM FIFO can only be filled in Standby mode.
	//1. Mode request STAND-BY
	lora_idle();
     61a:	0e 94 8b 02 	call	0x516	; 0x516 <lora_idle>
	
	//2. TX inits
	lora_writeRegister(REG_MODEM_CONFIG_1, lora_readRegister(REG_MODEM_CONFIG_1) & 0xfe);
     61e:	8d e1       	ldi	r24, 0x1D	; 29
     620:	0e 94 90 02 	call	0x520	; 0x520 <lora_readRegister>
     624:	68 2f       	mov	r22, r24
     626:	6e 7f       	andi	r22, 0xFE	; 254
     628:	8d e1       	ldi	r24, 0x1D	; 29
     62a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>

	//3. Write data to FIFO
	lora_writeRegister( REG_FIFO_ADDR_PTR, 0 );
     62e:	60 e0       	ldi	r22, 0x00	; 0
     630:	8d e0       	ldi	r24, 0x0D	; 13
     632:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
	
	for( uint8_t i = 0; i < len; i++ ) lora_writeRegister( REG_FIFO, buf[i] );
     636:	c0 e0       	ldi	r28, 0x00	; 0
     638:	08 c0       	rjmp	.+16     	; 0x64a <lora_putd+0x40>
     63a:	f8 01       	movw	r30, r16
     63c:	ec 0f       	add	r30, r28
     63e:	f1 1d       	adc	r31, r1
     640:	60 81       	ld	r22, Z
     642:	80 e0       	ldi	r24, 0x00	; 0
     644:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
     648:	cf 5f       	subi	r28, 0xFF	; 255
     64a:	cd 17       	cp	r28, r29
     64c:	b0 f3       	brcs	.-20     	; 0x63a <lora_putd+0x30>
	lora_writeRegister( REG_PAYLOAD_LENGTH, len );
     64e:	6d 2f       	mov	r22, r29
     650:	82 e2       	ldi	r24, 0x22	; 34
     652:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>

	//4. Mode request TX	
	lora_writeRegister( REG_OP_MODE, MODE_LONG_RANGE_MODE | MODE_TX );
     656:	63 e8       	ldi	r22, 0x83	; 131
     658:	81 e0       	ldi	r24, 0x01	; 1
     65a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>

	//5. Wait for IRQ TxDone
	uint8_t irq;
	while( (irq = lora_readRegister(REG_IRQ_FLAGS) & IRQ_TX_DONE_MASK) == 0 );
     65e:	82 e1       	ldi	r24, 0x12	; 18
     660:	0e 94 90 02 	call	0x520	; 0x520 <lora_readRegister>
     664:	68 2f       	mov	r22, r24
     666:	68 70       	andi	r22, 0x08	; 8
     668:	83 ff       	sbrs	r24, 3
     66a:	f9 cf       	rjmp	.-14     	; 0x65e <lora_putd+0x54>
	lora_writeRegister( REG_IRQ_FLAGS, irq );
     66c:	82 e1       	ldi	r24, 0x12	; 18
     66e:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lora_writeRegister>
	
	//6. Auto mode change to STAND-BY
}
     672:	df 91       	pop	r29
     674:	cf 91       	pop	r28
     676:	1f 91       	pop	r17
     678:	0f 91       	pop	r16
     67a:	08 95       	ret

0000067c <main>:
FIL Fil;			/* File object needed for each open file */



int main (void)
{
     67c:	cf 93       	push	r28
     67e:	df 93       	push	r29
     680:	cd b7       	in	r28, 0x3d	; 61
     682:	de b7       	in	r29, 0x3e	; 62
     684:	c6 56       	subi	r28, 0x66	; 102
     686:	d1 09       	sbc	r29, r1
     688:	0f b6       	in	r0, 0x3f	; 63
     68a:	f8 94       	cli
     68c:	de bf       	out	0x3e, r29	; 62
     68e:	0f be       	out	0x3f, r0	; 63
     690:	cd bf       	out	0x3d, r28	; 61
	Point p;
	int i;
	
	bool lora;
	
	DDRD |= (1 << PIND4); // ON_OFF Pin From GPS Module
     692:	8a b1       	in	r24, 0x0a	; 10
     694:	80 61       	ori	r24, 0x10	; 16
     696:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1 << PD4); // set ON_OFF LOW
     698:	8b b1       	in	r24, 0x0b	; 11
     69a:	8f 7e       	andi	r24, 0xEF	; 239
     69c:	8b b9       	out	0x0b, r24	; 11


	// Initialize Serial communication
	uart_init();
     69e:	0e 94 64 20 	call	0x40c8	; 0x40c8 <uart_init>
	spi_init();
     6a2:	0e 94 4c 20 	call	0x4098	; 0x4098 <spi_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6a6:	2f e3       	ldi	r18, 0x3F	; 63
     6a8:	8d e0       	ldi	r24, 0x0D	; 13
     6aa:	93 e0       	ldi	r25, 0x03	; 3
     6ac:	21 50       	subi	r18, 0x01	; 1
     6ae:	80 40       	sbci	r24, 0x00	; 0
     6b0:	90 40       	sbci	r25, 0x00	; 0
     6b2:	e1 f7       	brne	.-8      	; 0x6ac <main+0x30>
     6b4:	00 c0       	rjmp	.+0      	; 0x6b6 <main+0x3a>
     6b6:	00 00       	nop
	
	/*
		The GPS Module is default in hibernate mode
		wake up with pulse on PD4
	*/
	PORTD |= (1 << PD4);
     6b8:	8b b1       	in	r24, 0x0b	; 11
     6ba:	80 61       	ori	r24, 0x10	; 16
     6bc:	8b b9       	out	0x0b, r24	; 11
     6be:	87 ea       	ldi	r24, 0xA7	; 167
     6c0:	91 e6       	ldi	r25, 0x61	; 97
     6c2:	01 97       	sbiw	r24, 0x01	; 1
     6c4:	f1 f7       	brne	.-4      	; 0x6c2 <main+0x46>
     6c6:	00 c0       	rjmp	.+0      	; 0x6c8 <main+0x4c>
     6c8:	00 00       	nop
	_delay_ms(100);
	PORTD &= ~(1 << PD4);
     6ca:	8b b1       	in	r24, 0x0b	; 11
     6cc:	8f 7e       	andi	r24, 0xEF	; 239
     6ce:	8b b9       	out	0x0b, r24	; 11
	
	/*
		SD-Cards in default mode are not a SPI-Device
		To avoid conflicts the SD-Card has to be the first device initialized
	*/
	f_mount(&FatFs, "", 0);
     6d0:	40 e0       	ldi	r20, 0x00	; 0
     6d2:	6c eb       	ldi	r22, 0xBC	; 188
     6d4:	71 e0       	ldi	r23, 0x01	; 1
     6d6:	8d ed       	ldi	r24, 0xDD	; 221
     6d8:	92 e0       	ldi	r25, 0x02	; 2
     6da:	0e 94 c1 18 	call	0x3182	; 0x3182 <f_mount>
	
	
	lora = lora_init(); // LoRa init
     6de:	0e 94 95 02 	call	0x52a	; 0x52a <lora_init>
     6e2:	f8 2e       	mov	r15, r24
	
	lora_setSpreadingFactor(7);
     6e4:	87 e0       	ldi	r24, 0x07	; 7
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lora_setSpreadingFactor>
	//lora_setCodingRate4(8);
	lora_set_bandwidth(0b0111); // 125 kHz
     6ec:	87 e0       	ldi	r24, 0x07	; 7
     6ee:	0e 94 c0 02 	call	0x580	; 0x580 <lora_set_bandwidth>
	lora_putd("01 06 53 40 11 04 24 4782124 1349760", 36);
     6f2:	64 e2       	ldi	r22, 0x24	; 36
     6f4:	8a e2       	ldi	r24, 0x2A	; 42
     6f6:	91 e0       	ldi	r25, 0x01	; 1
     6f8:	0e 94 05 03 	call	0x60a	; 0x60a <lora_putd>
	
	
	// Init GPS Module
	// disable all except RMC
	
	uart_sendStr("$PSRF103,0,0,0,1*24\r\n");
     6fc:	8f e4       	ldi	r24, 0x4F	; 79
     6fe:	91 e0       	ldi	r25, 0x01	; 1
     700:	0e 94 7e 20 	call	0x40fc	; 0x40fc <uart_sendStr>
	uart_sendStr("$PSRF103,1,0,0,1*25\r\n");
     704:	85 e6       	ldi	r24, 0x65	; 101
     706:	91 e0       	ldi	r25, 0x01	; 1
     708:	0e 94 7e 20 	call	0x40fc	; 0x40fc <uart_sendStr>
	uart_sendStr("$PSRF103,2,0,0,1*26\r\n");
     70c:	8b e7       	ldi	r24, 0x7B	; 123
     70e:	91 e0       	ldi	r25, 0x01	; 1
     710:	0e 94 7e 20 	call	0x40fc	; 0x40fc <uart_sendStr>
	uart_sendStr("$PSRF103,3,0,0,1*27\r\n");
     714:	81 e9       	ldi	r24, 0x91	; 145
     716:	91 e0       	ldi	r25, 0x01	; 1
     718:	0e 94 7e 20 	call	0x40fc	; 0x40fc <uart_sendStr>
	uart_sendStr("$PSRF103,5,0,0,1*21\r\n");
     71c:	87 ea       	ldi	r24, 0xA7	; 167
     71e:	91 e0       	ldi	r25, 0x01	; 1
     720:	0e 94 7e 20 	call	0x40fc	; 0x40fc <uart_sendStr>
	uart_sendStr("$PSRF103,6,0,0,1*22\r\n");
     724:	8d eb       	ldi	r24, 0xBD	; 189
     726:	91 e0       	ldi	r25, 0x01	; 1
     728:	0e 94 7e 20 	call	0x40fc	; 0x40fc <uart_sendStr>
	uart_sendStr("$PSRF103,7,0,0,1*23\r\n");
     72c:	83 ed       	ldi	r24, 0xD3	; 211
     72e:	91 e0       	ldi	r25, 0x01	; 1
     730:	0e 94 7e 20 	call	0x40fc	; 0x40fc <uart_sendStr>
	uart_sendStr("$PSRF103,8,0,0,1*2C\r\n");
     734:	89 ee       	ldi	r24, 0xE9	; 233
     736:	91 e0       	ldi	r25, 0x01	; 1
     738:	0e 94 7e 20 	call	0x40fc	; 0x40fc <uart_sendStr>
	uart_sendStr("$PSRF103,9,0,0,1*2D\r\n");
     73c:	8f ef       	ldi	r24, 0xFF	; 255
     73e:	91 e0       	ldi	r25, 0x01	; 1
     740:	0e 94 7e 20 	call	0x40fc	; 0x40fc <uart_sendStr>
		
	uart_sendStr("$PSRF103,4,0,20,1*12\r\n");
     744:	85 e1       	ldi	r24, 0x15	; 21
     746:	92 e0       	ldi	r25, 0x02	; 2
     748:	0e 94 7e 20 	call	0x40fc	; 0x40fc <uart_sendStr>
	


	fr = f_open(&Fil, "pos.txt", FA_WRITE | FA_CREATE_ALWAYS);	// Create a file
     74c:	4a e0       	ldi	r20, 0x0A	; 10
     74e:	6c e2       	ldi	r22, 0x2C	; 44
     750:	72 e0       	ldi	r23, 0x02	; 2
     752:	8d e0       	ldi	r24, 0x0D	; 13
     754:	95 e0       	ldi	r25, 0x05	; 5
     756:	0e 94 10 19 	call	0x3220	; 0x3220 <f_open>
	
	if (fr == FR_OK)
     75a:	81 11       	cpse	r24, r1
     75c:	12 c0       	rjmp	.+36     	; 0x782 <main+0x106>
	{
		f_printf(&Fil, "YY/MM/DD HH:MM:SS;LL.LLLLL;BB.BBBBB\r\n");
     75e:	84 e3       	ldi	r24, 0x34	; 52
     760:	92 e0       	ldi	r25, 0x02	; 2
     762:	9f 93       	push	r25
     764:	8f 93       	push	r24
     766:	8d e0       	ldi	r24, 0x0D	; 13
     768:	95 e0       	ldi	r25, 0x05	; 5
     76a:	9f 93       	push	r25
     76c:	8f 93       	push	r24
     76e:	0e 94 d4 1d 	call	0x3ba8	; 0x3ba8 <f_printf>
		fr = f_close(&Fil);
     772:	8d e0       	ldi	r24, 0x0D	; 13
     774:	95 e0       	ldi	r25, 0x05	; 5
     776:	0e 94 b6 1d 	call	0x3b6c	; 0x3b6c <f_close>
     77a:	0f 90       	pop	r0
     77c:	0f 90       	pop	r0
     77e:	0f 90       	pop	r0
     780:	0f 90       	pop	r0
FIL Fil;			/* File object needed for each open file */



int main (void)
{
     782:	0f ef       	ldi	r16, 0xFF	; 255
     784:	1f ef       	ldi	r17, 0xFF	; 255
	
	int j = 0;
	
	while (1)
	{
		while ((buff[++i] = uart_receive()) != '\n');
     786:	0f 5f       	subi	r16, 0xFF	; 255
     788:	1f 4f       	sbci	r17, 0xFF	; 255
     78a:	0e 94 70 20 	call	0x40e0	; 0x40e0 <uart_receive>
     78e:	e1 e0       	ldi	r30, 0x01	; 1
     790:	f0 e0       	ldi	r31, 0x00	; 0
     792:	ec 0f       	add	r30, r28
     794:	fd 1f       	adc	r31, r29
     796:	e0 0f       	add	r30, r16
     798:	f1 1f       	adc	r31, r17
     79a:	80 83       	st	Z, r24
     79c:	8a 30       	cpi	r24, 0x0A	; 10
     79e:	99 f7       	brne	.-26     	; 0x786 <main+0x10a>
		buff[i] = '\0';
     7a0:	e1 e0       	ldi	r30, 0x01	; 1
     7a2:	f0 e0       	ldi	r31, 0x00	; 0
     7a4:	ec 0f       	add	r30, r28
     7a6:	fd 1f       	adc	r31, r29
     7a8:	e0 0f       	add	r30, r16
     7aa:	f1 1f       	adc	r31, r17
     7ac:	10 82       	st	Z, r1
		//j++;
		
		//if (j != 5) continue;
		//j = 0;
		
		if (parseRMC(buff, &p))
     7ae:	be 01       	movw	r22, r28
     7b0:	6d 5a       	subi	r22, 0xAD	; 173
     7b2:	7f 4f       	sbci	r23, 0xFF	; 255
     7b4:	ce 01       	movw	r24, r28
     7b6:	01 96       	adiw	r24, 0x01	; 1
     7b8:	0e 94 bf 00 	call	0x17e	; 0x17e <parseRMC>
     7bc:	89 2b       	or	r24, r25
     7be:	09 f3       	breq	.-62     	; 0x782 <main+0x106>
		{
			fr = f_open(&Fil, "pos.txt", FA_OPEN_APPEND | FA_WRITE);
     7c0:	42 e3       	ldi	r20, 0x32	; 50
     7c2:	6c e2       	ldi	r22, 0x2C	; 44
     7c4:	72 e0       	ldi	r23, 0x02	; 2
     7c6:	8d e0       	ldi	r24, 0x0D	; 13
     7c8:	95 e0       	ldi	r25, 0x05	; 5
     7ca:	0e 94 10 19 	call	0x3220	; 0x3220 <f_open>
			
			if (fr == FR_OK)
     7ce:	81 11       	cpse	r24, r1
     7d0:	63 c0       	rjmp	.+198    	; 0x898 <__EEPROM_REGION_LENGTH__+0x98>
			{
				f_printf(&Fil, "%02d/%02d/%02d %02d:%02d:%02d;%f;%f\r\n", p.day, p.month, p.year,  p.hour, p.minutes, p.seconds, p.lat, p.lng);
     7d2:	a6 96       	adiw	r28, 0x26	; 38
     7d4:	af ad       	ldd	r26, Y+63	; 0x3f
     7d6:	a6 97       	sbiw	r28, 0x26	; 38
     7d8:	a7 96       	adiw	r28, 0x27	; 39
     7da:	bf ad       	ldd	r27, Y+63	; 0x3f
     7dc:	a7 97       	sbiw	r28, 0x27	; 39
     7de:	a4 96       	adiw	r28, 0x24	; 36
     7e0:	ef ad       	ldd	r30, Y+63	; 0x3f
     7e2:	a4 97       	sbiw	r28, 0x24	; 36
     7e4:	a5 96       	adiw	r28, 0x25	; 37
     7e6:	ff ad       	ldd	r31, Y+63	; 0x3f
     7e8:	a5 97       	sbiw	r28, 0x25	; 37
     7ea:	a2 96       	adiw	r28, 0x22	; 34
     7ec:	6f ad       	ldd	r22, Y+63	; 0x3f
     7ee:	a2 97       	sbiw	r28, 0x22	; 34
     7f0:	a3 96       	adiw	r28, 0x23	; 35
     7f2:	7f ad       	ldd	r23, Y+63	; 0x3f
     7f4:	a3 97       	sbiw	r28, 0x23	; 35
     7f6:	a0 96       	adiw	r28, 0x20	; 32
     7f8:	4f ad       	ldd	r20, Y+63	; 0x3f
     7fa:	a0 97       	sbiw	r28, 0x20	; 32
     7fc:	a1 96       	adiw	r28, 0x21	; 33
     7fe:	5f ad       	ldd	r21, Y+63	; 0x3f
     800:	a1 97       	sbiw	r28, 0x21	; 33
     802:	6e 96       	adiw	r28, 0x1e	; 30
     804:	2f ad       	ldd	r18, Y+63	; 0x3f
     806:	6e 97       	sbiw	r28, 0x1e	; 30
     808:	6f 96       	adiw	r28, 0x1f	; 31
     80a:	3f ad       	ldd	r19, Y+63	; 0x3f
     80c:	6f 97       	sbiw	r28, 0x1f	; 31
     80e:	6c 96       	adiw	r28, 0x1c	; 28
     810:	8f ad       	ldd	r24, Y+63	; 0x3f
     812:	6c 97       	sbiw	r28, 0x1c	; 28
     814:	6d 96       	adiw	r28, 0x1d	; 29
     816:	9f ad       	ldd	r25, Y+63	; 0x3f
     818:	6d 97       	sbiw	r28, 0x1d	; 29
     81a:	6b 96       	adiw	r28, 0x1b	; 27
     81c:	1f ad       	ldd	r17, Y+63	; 0x3f
     81e:	6b 97       	sbiw	r28, 0x1b	; 27
     820:	1f 93       	push	r17
     822:	6a 96       	adiw	r28, 0x1a	; 26
     824:	1f ad       	ldd	r17, Y+63	; 0x3f
     826:	6a 97       	sbiw	r28, 0x1a	; 26
     828:	1f 93       	push	r17
     82a:	69 96       	adiw	r28, 0x19	; 25
     82c:	1f ad       	ldd	r17, Y+63	; 0x3f
     82e:	69 97       	sbiw	r28, 0x19	; 25
     830:	1f 93       	push	r17
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	1f ad       	ldd	r17, Y+63	; 0x3f
     836:	68 97       	sbiw	r28, 0x18	; 24
     838:	1f 93       	push	r17
     83a:	67 96       	adiw	r28, 0x17	; 23
     83c:	1f ad       	ldd	r17, Y+63	; 0x3f
     83e:	67 97       	sbiw	r28, 0x17	; 23
     840:	1f 93       	push	r17
     842:	66 96       	adiw	r28, 0x16	; 22
     844:	1f ad       	ldd	r17, Y+63	; 0x3f
     846:	66 97       	sbiw	r28, 0x16	; 22
     848:	1f 93       	push	r17
     84a:	65 96       	adiw	r28, 0x15	; 21
     84c:	1f ad       	ldd	r17, Y+63	; 0x3f
     84e:	65 97       	sbiw	r28, 0x15	; 21
     850:	1f 93       	push	r17
     852:	64 96       	adiw	r28, 0x14	; 20
     854:	1f ad       	ldd	r17, Y+63	; 0x3f
     856:	64 97       	sbiw	r28, 0x14	; 20
     858:	1f 93       	push	r17
     85a:	bf 93       	push	r27
     85c:	af 93       	push	r26
     85e:	ff 93       	push	r31
     860:	ef 93       	push	r30
     862:	7f 93       	push	r23
     864:	6f 93       	push	r22
     866:	5f 93       	push	r21
     868:	4f 93       	push	r20
     86a:	3f 93       	push	r19
     86c:	2f 93       	push	r18
     86e:	9f 93       	push	r25
     870:	8f 93       	push	r24
     872:	8a e5       	ldi	r24, 0x5A	; 90
     874:	92 e0       	ldi	r25, 0x02	; 2
     876:	9f 93       	push	r25
     878:	8f 93       	push	r24
     87a:	8d e0       	ldi	r24, 0x0D	; 13
     87c:	95 e0       	ldi	r25, 0x05	; 5
     87e:	9f 93       	push	r25
     880:	8f 93       	push	r24
     882:	0e 94 d4 1d 	call	0x3ba8	; 0x3ba8 <f_printf>
				fr = f_close(&Fil);
     886:	8d e0       	ldi	r24, 0x0D	; 13
     888:	95 e0       	ldi	r25, 0x05	; 5
     88a:	0e 94 b6 1d 	call	0x3b6c	; 0x3b6c <f_close>
     88e:	0f b6       	in	r0, 0x3f	; 63
     890:	f8 94       	cli
     892:	de bf       	out	0x3e, r29	; 62
     894:	0f be       	out	0x3f, r0	; 63
     896:	cd bf       	out	0x3d, r28	; 61
			}
			
			#ifdef T_ID
			
			if (lora)
     898:	ff 20       	and	r15, r15
     89a:	09 f4       	brne	.+2      	; 0x89e <__EEPROM_REGION_LENGTH__+0x9e>
     89c:	72 cf       	rjmp	.-284    	; 0x782 <main+0x106>
					p.seconds,
					p.day,
					p.month,
					p.year,
					(int32_t)(100000* p.lat),
					(int32_t)(100000* p.lng));
     89e:	6b 96       	adiw	r28, 0x1b	; 27
     8a0:	6c ad       	ldd	r22, Y+60	; 0x3c
     8a2:	7d ad       	ldd	r23, Y+61	; 0x3d
     8a4:	8e ad       	ldd	r24, Y+62	; 0x3e
     8a6:	9f ad       	ldd	r25, Y+63	; 0x3f
     8a8:	6b 97       	sbiw	r28, 0x1b	; 27
     8aa:	20 e0       	ldi	r18, 0x00	; 0
     8ac:	30 e5       	ldi	r19, 0x50	; 80
     8ae:	43 ec       	ldi	r20, 0xC3	; 195
     8b0:	57 e4       	ldi	r21, 0x47	; 71
     8b2:	0e 94 5c 22 	call	0x44b8	; 0x44b8 <__mulsf3>
			
			#ifdef T_ID
			
			if (lora)
			{
				int len = sprintf(buff, "%02hu %02hu %02hu %02hu %02hu %02hu %02hu %" PRId32 " %" PRId32 "",
     8b6:	0e 94 6f 21 	call	0x42de	; 0x42de <__fixsfsi>
     8ba:	d6 2e       	mov	r13, r22
     8bc:	c7 2e       	mov	r12, r23
     8be:	b8 2e       	mov	r11, r24
     8c0:	a9 2e       	mov	r10, r25
					p.minutes,
					p.seconds,
					p.day,
					p.month,
					p.year,
					(int32_t)(100000* p.lat),
     8c2:	67 96       	adiw	r28, 0x17	; 23
     8c4:	6c ad       	ldd	r22, Y+60	; 0x3c
     8c6:	7d ad       	ldd	r23, Y+61	; 0x3d
     8c8:	8e ad       	ldd	r24, Y+62	; 0x3e
     8ca:	9f ad       	ldd	r25, Y+63	; 0x3f
     8cc:	67 97       	sbiw	r28, 0x17	; 23
     8ce:	20 e0       	ldi	r18, 0x00	; 0
     8d0:	30 e5       	ldi	r19, 0x50	; 80
     8d2:	43 ec       	ldi	r20, 0xC3	; 195
     8d4:	57 e4       	ldi	r21, 0x47	; 71
     8d6:	0e 94 5c 22 	call	0x44b8	; 0x44b8 <__mulsf3>
			
			#ifdef T_ID
			
			if (lora)
			{
				int len = sprintf(buff, "%02hu %02hu %02hu %02hu %02hu %02hu %02hu %" PRId32 " %" PRId32 "",
     8da:	0e 94 6f 21 	call	0x42de	; 0x42de <__fixsfsi>
					p.hour,
					p.minutes,
					p.seconds,
					p.day,
					p.month,
					p.year,
     8de:	a0 96       	adiw	r28, 0x20	; 32
     8e0:	ef ac       	ldd	r14, Y+63	; 0x3f
     8e2:	a0 97       	sbiw	r28, 0x20	; 32
     8e4:	a1 96       	adiw	r28, 0x21	; 33
     8e6:	9f ac       	ldd	r9, Y+63	; 0x3f
     8e8:	a1 97       	sbiw	r28, 0x21	; 33
					T_ID,
					p.hour,
					p.minutes,
					p.seconds,
					p.day,
					p.month,
     8ea:	6e 96       	adiw	r28, 0x1e	; 30
     8ec:	1f ad       	ldd	r17, Y+63	; 0x3f
     8ee:	6e 97       	sbiw	r28, 0x1e	; 30
     8f0:	6f 96       	adiw	r28, 0x1f	; 31
     8f2:	0f ad       	ldd	r16, Y+63	; 0x3f
     8f4:	6f 97       	sbiw	r28, 0x1f	; 31
				int len = sprintf(buff, "%02hu %02hu %02hu %02hu %02hu %02hu %02hu %" PRId32 " %" PRId32 "",
					T_ID,
					p.hour,
					p.minutes,
					p.seconds,
					p.day,
     8f6:	6c 96       	adiw	r28, 0x1c	; 28
     8f8:	af ad       	ldd	r26, Y+63	; 0x3f
     8fa:	6c 97       	sbiw	r28, 0x1c	; 28
     8fc:	6d 96       	adiw	r28, 0x1d	; 29
     8fe:	bf ad       	ldd	r27, Y+63	; 0x3f
     900:	6d 97       	sbiw	r28, 0x1d	; 29
			{
				int len = sprintf(buff, "%02hu %02hu %02hu %02hu %02hu %02hu %02hu %" PRId32 " %" PRId32 "",
					T_ID,
					p.hour,
					p.minutes,
					p.seconds,
     902:	a6 96       	adiw	r28, 0x26	; 38
     904:	ef ad       	ldd	r30, Y+63	; 0x3f
     906:	a6 97       	sbiw	r28, 0x26	; 38
     908:	a7 96       	adiw	r28, 0x27	; 39
     90a:	ff ad       	ldd	r31, Y+63	; 0x3f
     90c:	a7 97       	sbiw	r28, 0x27	; 39
			if (lora)
			{
				int len = sprintf(buff, "%02hu %02hu %02hu %02hu %02hu %02hu %02hu %" PRId32 " %" PRId32 "",
					T_ID,
					p.hour,
					p.minutes,
     90e:	a4 96       	adiw	r28, 0x24	; 36
     910:	4f ad       	ldd	r20, Y+63	; 0x3f
     912:	a4 97       	sbiw	r28, 0x24	; 36
     914:	a5 96       	adiw	r28, 0x25	; 37
     916:	5f ad       	ldd	r21, Y+63	; 0x3f
     918:	a5 97       	sbiw	r28, 0x25	; 37
			
			if (lora)
			{
				int len = sprintf(buff, "%02hu %02hu %02hu %02hu %02hu %02hu %02hu %" PRId32 " %" PRId32 "",
					T_ID,
					p.hour,
     91a:	a2 96       	adiw	r28, 0x22	; 34
     91c:	2f ad       	ldd	r18, Y+63	; 0x3f
     91e:	a2 97       	sbiw	r28, 0x22	; 34
     920:	a3 96       	adiw	r28, 0x23	; 35
     922:	3f ad       	ldd	r19, Y+63	; 0x3f
     924:	a3 97       	sbiw	r28, 0x23	; 35
			
			#ifdef T_ID
			
			if (lora)
			{
				int len = sprintf(buff, "%02hu %02hu %02hu %02hu %02hu %02hu %02hu %" PRId32 " %" PRId32 "",
     926:	af 92       	push	r10
     928:	bf 92       	push	r11
     92a:	cf 92       	push	r12
     92c:	df 92       	push	r13
     92e:	9f 93       	push	r25
     930:	8f 93       	push	r24
     932:	7f 93       	push	r23
     934:	6f 93       	push	r22
     936:	9f 92       	push	r9
     938:	ef 92       	push	r14
     93a:	0f 93       	push	r16
     93c:	1f 93       	push	r17
     93e:	bf 93       	push	r27
     940:	af 93       	push	r26
     942:	ff 93       	push	r31
     944:	ef 93       	push	r30
     946:	5f 93       	push	r21
     948:	4f 93       	push	r20
     94a:	3f 93       	push	r19
     94c:	2f 93       	push	r18
     94e:	1f 92       	push	r1
     950:	81 e0       	ldi	r24, 0x01	; 1
     952:	8f 93       	push	r24
     954:	80 e8       	ldi	r24, 0x80	; 128
     956:	92 e0       	ldi	r25, 0x02	; 2
     958:	9f 93       	push	r25
     95a:	8f 93       	push	r24
     95c:	8e 01       	movw	r16, r28
     95e:	0f 5f       	subi	r16, 0xFF	; 255
     960:	1f 4f       	sbci	r17, 0xFF	; 255
     962:	1f 93       	push	r17
     964:	0f 93       	push	r16
     966:	0e 94 4a 24 	call	0x4894	; 0x4894 <sprintf>
					p.month,
					p.year,
					(int32_t)(100000* p.lat),
					(int32_t)(100000* p.lng));
	
				lora_putd(buff, len);
     96a:	68 2f       	mov	r22, r24
     96c:	c8 01       	movw	r24, r16
     96e:	0e 94 05 03 	call	0x60a	; 0x60a <lora_putd>
     972:	0f b6       	in	r0, 0x3f	; 63
     974:	f8 94       	cli
     976:	de bf       	out	0x3e, r29	; 62
     978:	0f be       	out	0x3f, r0	; 63
     97a:	cd bf       	out	0x3d, r28	; 61
     97c:	02 cf       	rjmp	.-508    	; 0x782 <main+0x106>

0000097e <spi_xmit>:
static int select();

// SPI transmit
static
void spi_xmit(BYTE dat) {
	SPDR = dat;
     97e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));	
     980:	0d b4       	in	r0, 0x2d	; 45
     982:	07 fe       	sbrs	r0, 7
     984:	fd cf       	rjmp	.-6      	; 0x980 <spi_xmit+0x2>
}
     986:	08 95       	ret

00000988 <spi_rcvr>:

// SPI receive
static
BYTE spi_rcvr() {
	SPDR = 0xFF;
     988:	8f ef       	ldi	r24, 0xFF	; 255
     98a:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
     98c:	0d b4       	in	r0, 0x2d	; 45
     98e:	07 fe       	sbrs	r0, 7
     990:	fd cf       	rjmp	.-6      	; 0x98c <spi_rcvr+0x4>
	return SPDR;
     992:	8e b5       	in	r24, 0x2e	; 46
}
     994:	08 95       	ret

00000996 <deselect>:
}

// SPI deselect card
static
void deselect() {
	CS_H();
     996:	85 b1       	in	r24, 0x05	; 5
     998:	80 61       	ori	r24, 0x10	; 16
     99a:	85 b9       	out	0x05, r24	; 5
	spi_rcvr();  // Dummy clock (force DO hi-z for multiple slave SPI)
     99c:	0e 94 c4 04 	call	0x988	; 0x988 <spi_rcvr>
     9a0:	08 95       	ret

000009a2 <xmit_mmc>:
}

// SPI transmit block of data
static
void xmit_mmc(const BYTE* buff, UINT bc) {
     9a2:	0f 93       	push	r16
     9a4:	1f 93       	push	r17
     9a6:	cf 93       	push	r28
     9a8:	df 93       	push	r29
     9aa:	fc 01       	movw	r30, r24
     9ac:	eb 01       	movw	r28, r22
	do {
		spi_xmit(*buff++);
     9ae:	8f 01       	movw	r16, r30
     9b0:	0f 5f       	subi	r16, 0xFF	; 255
     9b2:	1f 4f       	sbci	r17, 0xFF	; 255
     9b4:	80 81       	ld	r24, Z
     9b6:	0e 94 bf 04 	call	0x97e	; 0x97e <spi_xmit>
	} while (--bc);
     9ba:	21 97       	sbiw	r28, 0x01	; 1

// SPI transmit block of data
static
void xmit_mmc(const BYTE* buff, UINT bc) {
	do {
		spi_xmit(*buff++);
     9bc:	f8 01       	movw	r30, r16
	} while (--bc);
     9be:	b9 f7       	brne	.-18     	; 0x9ae <xmit_mmc+0xc>
}
     9c0:	df 91       	pop	r29
     9c2:	cf 91       	pop	r28
     9c4:	1f 91       	pop	r17
     9c6:	0f 91       	pop	r16
     9c8:	08 95       	ret

000009ca <rcvr_mmc>:

// SPI receive block of data
static
void rcvr_mmc(BYTE *buff, UINT bc) {
     9ca:	ef 92       	push	r14
     9cc:	ff 92       	push	r15
     9ce:	0f 93       	push	r16
     9d0:	1f 93       	push	r17
     9d2:	cf 93       	push	r28
     9d4:	df 93       	push	r29
     9d6:	8c 01       	movw	r16, r24
     9d8:	eb 01       	movw	r28, r22
	do {
		*buff++ = spi_rcvr();
     9da:	78 01       	movw	r14, r16
     9dc:	8f ef       	ldi	r24, 0xFF	; 255
     9de:	e8 1a       	sub	r14, r24
     9e0:	f8 0a       	sbc	r15, r24
     9e2:	0e 94 c4 04 	call	0x988	; 0x988 <spi_rcvr>
     9e6:	f8 01       	movw	r30, r16
     9e8:	80 83       	st	Z, r24
	} while (--bc);
     9ea:	21 97       	sbiw	r28, 0x01	; 1

// SPI receive block of data
static
void rcvr_mmc(BYTE *buff, UINT bc) {
	do {
		*buff++ = spi_rcvr();
     9ec:	87 01       	movw	r16, r14
	} while (--bc);
     9ee:	a9 f7       	brne	.-22     	; 0x9da <rcvr_mmc+0x10>
}
     9f0:	df 91       	pop	r29
     9f2:	cf 91       	pop	r28
     9f4:	1f 91       	pop	r17
     9f6:	0f 91       	pop	r16
     9f8:	ff 90       	pop	r15
     9fa:	ef 90       	pop	r14
     9fc:	08 95       	ret

000009fe <wait_ready>:
	return SPDR;
}

// Wait for card ready
static
int wait_ready() {
     9fe:	cf 93       	push	r28
     a00:	df 93       	push	r29
	BYTE d;
	UINT tmr;

	for (tmr = 5000; tmr; tmr--) {  // Wait for ready in timeout of 500ms
     a02:	c8 e8       	ldi	r28, 0x88	; 136
     a04:	d3 e1       	ldi	r29, 0x13	; 19
     a06:	09 c0       	rjmp	.+18     	; 0xa1a <wait_ready+0x1c>
		d = spi_rcvr();
     a08:	0e 94 c4 04 	call	0x988	; 0x988 <spi_rcvr>
		if (d == 0xFF) break;
     a0c:	8f 3f       	cpi	r24, 0xFF	; 255
     a0e:	39 f0       	breq	.+14     	; 0xa1e <wait_ready+0x20>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a10:	81 e2       	ldi	r24, 0x21	; 33
     a12:	8a 95       	dec	r24
     a14:	f1 f7       	brne	.-4      	; 0xa12 <wait_ready+0x14>
     a16:	00 00       	nop
static
int wait_ready() {
	BYTE d;
	UINT tmr;

	for (tmr = 5000; tmr; tmr--) {  // Wait for ready in timeout of 500ms
     a18:	21 97       	sbiw	r28, 0x01	; 1
     a1a:	20 97       	sbiw	r28, 0x00	; 0
     a1c:	a9 f7       	brne	.-22     	; 0xa08 <wait_ready+0xa>
		d = spi_rcvr();
		if (d == 0xFF) break;
		_delay_us(100);
	}

	return tmr ? 1 : 0;
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	cd 2b       	or	r28, r29
     a22:	09 f4       	brne	.+2      	; 0xa26 <wait_ready+0x28>
     a24:	80 e0       	ldi	r24, 0x00	; 0
}
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	df 91       	pop	r29
     a2a:	cf 91       	pop	r28
     a2c:	08 95       	ret

00000a2e <select>:

// SPI select card
static
int select() {
     a2e:	cf 93       	push	r28
     a30:	df 93       	push	r29
	CS_L();
     a32:	85 b1       	in	r24, 0x05	; 5
     a34:	8f 7e       	andi	r24, 0xEF	; 239
     a36:	85 b9       	out	0x05, r24	; 5
	spi_rcvr();  // Dummy clock
     a38:	0e 94 c4 04 	call	0x988	; 0x988 <spi_rcvr>
	if (wait_ready()) return 1;  // Wait for card ready
     a3c:	0e 94 ff 04 	call	0x9fe	; 0x9fe <wait_ready>
     a40:	ec 01       	movw	r28, r24
     a42:	89 2b       	or	r24, r25
     a44:	19 f4       	brne	.+6      	; 0xa4c <select+0x1e>

	deselect();
     a46:	0e 94 cb 04 	call	0x996	; 0x996 <deselect>
	return 0;  // Failed
     a4a:	02 c0       	rjmp	.+4      	; 0xa50 <select+0x22>
// SPI select card
static
int select() {
	CS_L();
	spi_rcvr();  // Dummy clock
	if (wait_ready()) return 1;  // Wait for card ready
     a4c:	c1 e0       	ldi	r28, 0x01	; 1
     a4e:	d0 e0       	ldi	r29, 0x00	; 0

	deselect();
	return 0;  // Failed
}
     a50:	ce 01       	movw	r24, r28
     a52:	df 91       	pop	r29
     a54:	cf 91       	pop	r28
     a56:	08 95       	ret

00000a58 <send_cmd>:
static
BYTE send_cmd (		/* Returns command response (bit7==1:Send failed)*/
	BYTE cmd,		/* Command byte */
	DWORD arg		/* Argument */
)
{
     a58:	df 92       	push	r13
     a5a:	ef 92       	push	r14
     a5c:	ff 92       	push	r15
     a5e:	0f 93       	push	r16
     a60:	1f 93       	push	r17
     a62:	cf 93       	push	r28
     a64:	df 93       	push	r29
     a66:	cd b7       	in	r28, 0x3d	; 61
     a68:	de b7       	in	r29, 0x3e	; 62
     a6a:	27 97       	sbiw	r28, 0x07	; 7
     a6c:	0f b6       	in	r0, 0x3f	; 63
     a6e:	f8 94       	cli
     a70:	de bf       	out	0x3e, r29	; 62
     a72:	0f be       	out	0x3f, r0	; 63
     a74:	cd bf       	out	0x3d, r28	; 61
     a76:	18 2f       	mov	r17, r24
     a78:	04 2f       	mov	r16, r20
     a7a:	f5 2e       	mov	r15, r21
     a7c:	e6 2e       	mov	r14, r22
     a7e:	d7 2e       	mov	r13, r23
	BYTE n, d, buf[6];


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
     a80:	88 23       	and	r24, r24
     a82:	4c f4       	brge	.+18     	; 0xa96 <send_cmd+0x3e>
		cmd &= 0x7F;
     a84:	1f 77       	andi	r17, 0x7F	; 127
		n = send_cmd(CMD55, 0);
     a86:	40 e0       	ldi	r20, 0x00	; 0
     a88:	50 e0       	ldi	r21, 0x00	; 0
     a8a:	ba 01       	movw	r22, r20
     a8c:	87 e3       	ldi	r24, 0x37	; 55
     a8e:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
		if (n > 1) return n;
     a92:	82 30       	cpi	r24, 0x02	; 2
     a94:	a0 f5       	brcc	.+104    	; 0xafe <send_cmd+0xa6>
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
     a96:	1c 30       	cpi	r17, 0x0C	; 12
     a98:	31 f0       	breq	.+12     	; 0xaa6 <send_cmd+0x4e>
		deselect();
     a9a:	0e 94 cb 04 	call	0x996	; 0x996 <deselect>
		if (!select()) return 0xFF;
     a9e:	0e 94 17 05 	call	0xa2e	; 0xa2e <select>
     aa2:	89 2b       	or	r24, r25
     aa4:	59 f1       	breq	.+86     	; 0xafc <send_cmd+0xa4>
	}

	/* Send a command packet */
	buf[0] = 0x40 | cmd;			/* Start + Command index */
     aa6:	81 2f       	mov	r24, r17
     aa8:	80 64       	ori	r24, 0x40	; 64
     aaa:	8a 83       	std	Y+2, r24	; 0x02
	buf[1] = (BYTE)(arg >> 24);		/* Argument[31..24] */
     aac:	db 82       	std	Y+3, r13	; 0x03
	buf[2] = (BYTE)(arg >> 16);		/* Argument[23..16] */
     aae:	ec 82       	std	Y+4, r14	; 0x04
	buf[3] = (BYTE)(arg >> 8);		/* Argument[15..8] */
     ab0:	fd 82       	std	Y+5, r15	; 0x05
	buf[4] = (BYTE)arg;				/* Argument[7..0] */
     ab2:	0e 83       	std	Y+6, r16	; 0x06
	n = 0x01;						/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;		/* (valid CRC for CMD0(0)) */
     ab4:	11 23       	and	r17, r17
     ab6:	11 f0       	breq	.+4      	; 0xabc <send_cmd+0x64>
	buf[0] = 0x40 | cmd;			/* Start + Command index */
	buf[1] = (BYTE)(arg >> 24);		/* Argument[31..24] */
	buf[2] = (BYTE)(arg >> 16);		/* Argument[23..16] */
	buf[3] = (BYTE)(arg >> 8);		/* Argument[15..8] */
	buf[4] = (BYTE)arg;				/* Argument[7..0] */
	n = 0x01;						/* Dummy CRC + Stop */
     ab8:	81 e0       	ldi	r24, 0x01	; 1
     aba:	01 c0       	rjmp	.+2      	; 0xabe <send_cmd+0x66>
	if (cmd == CMD0) n = 0x95;		/* (valid CRC for CMD0(0)) */
     abc:	85 e9       	ldi	r24, 0x95	; 149
	if (cmd == CMD8) n = 0x87;		/* (valid CRC for CMD8(0x1AA)) */
     abe:	18 30       	cpi	r17, 0x08	; 8
     ac0:	09 f4       	brne	.+2      	; 0xac4 <send_cmd+0x6c>
     ac2:	87 e8       	ldi	r24, 0x87	; 135
	buf[5] = n;
     ac4:	8f 83       	std	Y+7, r24	; 0x07
	xmit_mmc(buf, 6);
     ac6:	66 e0       	ldi	r22, 0x06	; 6
     ac8:	70 e0       	ldi	r23, 0x00	; 0
     aca:	ce 01       	movw	r24, r28
     acc:	02 96       	adiw	r24, 0x02	; 2
     ace:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <xmit_mmc>

	/* Receive command response */
	if (cmd == CMD12) rcvr_mmc(&d, 1);	/* Skip a stuff byte when stop reading */
     ad2:	1c 30       	cpi	r17, 0x0C	; 12
     ad4:	31 f4       	brne	.+12     	; 0xae2 <send_cmd+0x8a>
     ad6:	61 e0       	ldi	r22, 0x01	; 1
     ad8:	70 e0       	ldi	r23, 0x00	; 0
     ada:	ce 01       	movw	r24, r28
     adc:	01 96       	adiw	r24, 0x01	; 1
     ade:	0e 94 e5 04 	call	0x9ca	; 0x9ca <rcvr_mmc>
	buf[2] = (BYTE)(arg >> 16);		/* Argument[23..16] */
	buf[3] = (BYTE)(arg >> 8);		/* Argument[15..8] */
	buf[4] = (BYTE)arg;				/* Argument[7..0] */
	n = 0x01;						/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;		/* (valid CRC for CMD0(0)) */
	if (cmd == CMD8) n = 0x87;		/* (valid CRC for CMD8(0x1AA)) */
     ae2:	1a e0       	ldi	r17, 0x0A	; 10

	/* Receive command response */
	if (cmd == CMD12) rcvr_mmc(&d, 1);	/* Skip a stuff byte when stop reading */
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
		rcvr_mmc(&d, 1);
     ae4:	61 e0       	ldi	r22, 0x01	; 1
     ae6:	70 e0       	ldi	r23, 0x00	; 0
     ae8:	ce 01       	movw	r24, r28
     aea:	01 96       	adiw	r24, 0x01	; 1
     aec:	0e 94 e5 04 	call	0x9ca	; 0x9ca <rcvr_mmc>
	while ((d & 0x80) && --n);
     af0:	89 81       	ldd	r24, Y+1	; 0x01
     af2:	88 23       	and	r24, r24
     af4:	24 f4       	brge	.+8      	; 0xafe <send_cmd+0xa6>
     af6:	11 50       	subi	r17, 0x01	; 1
     af8:	a9 f7       	brne	.-22     	; 0xae4 <send_cmd+0x8c>
     afa:	01 c0       	rjmp	.+2      	; 0xafe <send_cmd+0xa6>
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
		deselect();
		if (!select()) return 0xFF;
     afc:	8f ef       	ldi	r24, 0xFF	; 255
	do
		rcvr_mmc(&d, 1);
	while ((d & 0x80) && --n);

	return d;			/* Return with the response value */
}
     afe:	27 96       	adiw	r28, 0x07	; 7
     b00:	0f b6       	in	r0, 0x3f	; 63
     b02:	f8 94       	cli
     b04:	de bf       	out	0x3e, r29	; 62
     b06:	0f be       	out	0x3f, r0	; 63
     b08:	cd bf       	out	0x3d, r28	; 61
     b0a:	df 91       	pop	r29
     b0c:	cf 91       	pop	r28
     b0e:	1f 91       	pop	r17
     b10:	0f 91       	pop	r16
     b12:	ff 90       	pop	r15
     b14:	ef 90       	pop	r14
     b16:	df 90       	pop	r13
     b18:	08 95       	ret

00000b1a <xmit_datablock>:
static
int xmit_datablock (	/* 1:OK, 0:Failed */
	const BYTE *buff,	/* 512 byte data block to be transmitted */
	BYTE token			/* Data/Stop token */
)
{
     b1a:	ef 92       	push	r14
     b1c:	ff 92       	push	r15
     b1e:	1f 93       	push	r17
     b20:	cf 93       	push	r28
     b22:	df 93       	push	r29
     b24:	00 d0       	rcall	.+0      	; 0xb26 <xmit_datablock+0xc>
     b26:	cd b7       	in	r28, 0x3d	; 61
     b28:	de b7       	in	r29, 0x3e	; 62
     b2a:	7c 01       	movw	r14, r24
     b2c:	16 2f       	mov	r17, r22
	BYTE d[2];


	if (!wait_ready()) return 0;
     b2e:	0e 94 ff 04 	call	0x9fe	; 0x9fe <wait_ready>
     b32:	00 97       	sbiw	r24, 0x00	; 0
     b34:	31 f1       	breq	.+76     	; 0xb82 <xmit_datablock+0x68>

	d[0] = token;
     b36:	19 83       	std	Y+1, r17	; 0x01
	xmit_mmc(d, 1);				/* Xmit a token */
     b38:	61 e0       	ldi	r22, 0x01	; 1
     b3a:	70 e0       	ldi	r23, 0x00	; 0
     b3c:	ce 01       	movw	r24, r28
     b3e:	01 96       	adiw	r24, 0x01	; 1
     b40:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <xmit_mmc>
	if (token != 0xFD) {		/* Is it data token? */
     b44:	1d 3f       	cpi	r17, 0xFD	; 253
     b46:	c1 f0       	breq	.+48     	; 0xb78 <xmit_datablock+0x5e>
		xmit_mmc(buff, 512);	/* Xmit the 512 byte data block to MMC */
     b48:	60 e0       	ldi	r22, 0x00	; 0
     b4a:	72 e0       	ldi	r23, 0x02	; 2
     b4c:	c7 01       	movw	r24, r14
     b4e:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <xmit_mmc>
		rcvr_mmc(d, 2);			/* Xmit dummy CRC (0xFF,0xFF) */
     b52:	62 e0       	ldi	r22, 0x02	; 2
     b54:	70 e0       	ldi	r23, 0x00	; 0
     b56:	ce 01       	movw	r24, r28
     b58:	01 96       	adiw	r24, 0x01	; 1
     b5a:	0e 94 e5 04 	call	0x9ca	; 0x9ca <rcvr_mmc>
		rcvr_mmc(d, 1);			/* Receive data response */
     b5e:	61 e0       	ldi	r22, 0x01	; 1
     b60:	70 e0       	ldi	r23, 0x00	; 0
     b62:	ce 01       	movw	r24, r28
     b64:	01 96       	adiw	r24, 0x01	; 1
     b66:	0e 94 e5 04 	call	0x9ca	; 0x9ca <rcvr_mmc>
		if ((d[0] & 0x1F) != 0x05)	/* If not accepted, return with error */
     b6a:	89 81       	ldd	r24, Y+1	; 0x01
     b6c:	8f 71       	andi	r24, 0x1F	; 31
     b6e:	85 30       	cpi	r24, 0x05	; 5
     b70:	31 f0       	breq	.+12     	; 0xb7e <xmit_datablock+0x64>
			return 0;
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	05 c0       	rjmp	.+10     	; 0xb82 <xmit_datablock+0x68>
	}

	return 1;
     b78:	81 e0       	ldi	r24, 0x01	; 1
     b7a:	90 e0       	ldi	r25, 0x00	; 0
     b7c:	02 c0       	rjmp	.+4      	; 0xb82 <xmit_datablock+0x68>
     b7e:	81 e0       	ldi	r24, 0x01	; 1
     b80:	90 e0       	ldi	r25, 0x00	; 0
}
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	df 91       	pop	r29
     b88:	cf 91       	pop	r28
     b8a:	1f 91       	pop	r17
     b8c:	ff 90       	pop	r15
     b8e:	ef 90       	pop	r14
     b90:	08 95       	ret

00000b92 <rcvr_datablock>:
static
int rcvr_datablock (	/* 1:OK, 0:Failed */
	BYTE *buff,			/* Data buffer to store received data */
	UINT btr			/* Byte count */
)
{
     b92:	cf 92       	push	r12
     b94:	df 92       	push	r13
     b96:	ef 92       	push	r14
     b98:	ff 92       	push	r15
     b9a:	0f 93       	push	r16
     b9c:	1f 93       	push	r17
     b9e:	cf 93       	push	r28
     ba0:	df 93       	push	r29
     ba2:	00 d0       	rcall	.+0      	; 0xba4 <rcvr_datablock+0x12>
     ba4:	cd b7       	in	r28, 0x3d	; 61
     ba6:	de b7       	in	r29, 0x3e	; 62
     ba8:	7c 01       	movw	r14, r24
     baa:	6b 01       	movw	r12, r22
	BYTE d[2];
	UINT tmr;


	for (tmr = 1000; tmr; tmr--) {	/* Wait for data packet in timeout of 100ms */
     bac:	08 ee       	ldi	r16, 0xE8	; 232
     bae:	13 e0       	ldi	r17, 0x03	; 3
     bb0:	0f c0       	rjmp	.+30     	; 0xbd0 <rcvr_datablock+0x3e>
		rcvr_mmc(d, 1);
     bb2:	61 e0       	ldi	r22, 0x01	; 1
     bb4:	70 e0       	ldi	r23, 0x00	; 0
     bb6:	ce 01       	movw	r24, r28
     bb8:	01 96       	adiw	r24, 0x01	; 1
     bba:	0e 94 e5 04 	call	0x9ca	; 0x9ca <rcvr_mmc>
		if (d[0] != 0xFF) break;
     bbe:	89 81       	ldd	r24, Y+1	; 0x01
     bc0:	8f 3f       	cpi	r24, 0xFF	; 255
     bc2:	49 f4       	brne	.+18     	; 0xbd6 <rcvr_datablock+0x44>
     bc4:	81 e2       	ldi	r24, 0x21	; 33
     bc6:	8a 95       	dec	r24
     bc8:	f1 f7       	brne	.-4      	; 0xbc6 <rcvr_datablock+0x34>
     bca:	00 00       	nop
{
	BYTE d[2];
	UINT tmr;


	for (tmr = 1000; tmr; tmr--) {	/* Wait for data packet in timeout of 100ms */
     bcc:	01 50       	subi	r16, 0x01	; 1
     bce:	11 09       	sbc	r17, r1
     bd0:	01 15       	cp	r16, r1
     bd2:	11 05       	cpc	r17, r1
     bd4:	71 f7       	brne	.-36     	; 0xbb2 <rcvr_datablock+0x20>
		rcvr_mmc(d, 1);
		if (d[0] != 0xFF) break;
		_delay_us(100);
	}
	if (d[0] != 0xFE) return 0;		/* If not valid data token, return with error */
     bd6:	89 81       	ldd	r24, Y+1	; 0x01
     bd8:	8e 3f       	cpi	r24, 0xFE	; 254
     bda:	69 f4       	brne	.+26     	; 0xbf6 <rcvr_datablock+0x64>

	rcvr_mmc(buff, btr);			/* Receive the data block into buffer */
     bdc:	b6 01       	movw	r22, r12
     bde:	c7 01       	movw	r24, r14
     be0:	0e 94 e5 04 	call	0x9ca	; 0x9ca <rcvr_mmc>
	rcvr_mmc(d, 2);					/* Discard CRC */
     be4:	62 e0       	ldi	r22, 0x02	; 2
     be6:	70 e0       	ldi	r23, 0x00	; 0
     be8:	ce 01       	movw	r24, r28
     bea:	01 96       	adiw	r24, 0x01	; 1
     bec:	0e 94 e5 04 	call	0x9ca	; 0x9ca <rcvr_mmc>

	return 1;						/* Return with success */
     bf0:	81 e0       	ldi	r24, 0x01	; 1
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	02 c0       	rjmp	.+4      	; 0xbfa <rcvr_datablock+0x68>
	for (tmr = 1000; tmr; tmr--) {	/* Wait for data packet in timeout of 100ms */
		rcvr_mmc(d, 1);
		if (d[0] != 0xFF) break;
		_delay_us(100);
	}
	if (d[0] != 0xFE) return 0;		/* If not valid data token, return with error */
     bf6:	80 e0       	ldi	r24, 0x00	; 0
     bf8:	90 e0       	ldi	r25, 0x00	; 0

	rcvr_mmc(buff, btr);			/* Receive the data block into buffer */
	rcvr_mmc(d, 2);					/* Discard CRC */

	return 1;						/* Return with success */
}
     bfa:	0f 90       	pop	r0
     bfc:	0f 90       	pop	r0
     bfe:	df 91       	pop	r29
     c00:	cf 91       	pop	r28
     c02:	1f 91       	pop	r17
     c04:	0f 91       	pop	r16
     c06:	ff 90       	pop	r15
     c08:	ef 90       	pop	r14
     c0a:	df 90       	pop	r13
     c0c:	cf 90       	pop	r12
     c0e:	08 95       	ret

00000c10 <disk_status>:

DSTATUS disk_status (
	BYTE drv			/* Drive number (always 0) */
)
{
	if (drv) return STA_NOINIT;
     c10:	81 11       	cpse	r24, r1
     c12:	03 c0       	rjmp	.+6      	; 0xc1a <disk_status+0xa>

	return Stat;
     c14:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     c18:	08 95       	ret

DSTATUS disk_status (
	BYTE drv			/* Drive number (always 0) */
)
{
	if (drv) return STA_NOINIT;
     c1a:	81 e0       	ldi	r24, 0x01	; 1

	return Stat;
}
     c1c:	08 95       	ret

00000c1e <disk_initialize>:
/*-----------------------------------------------------------------------*/

DSTATUS disk_initialize (
	BYTE drv		/* Physical drive nmuber (0) */
)
{
     c1e:	ef 92       	push	r14
     c20:	ff 92       	push	r15
     c22:	0f 93       	push	r16
     c24:	1f 93       	push	r17
     c26:	cf 93       	push	r28
     c28:	df 93       	push	r29
     c2a:	00 d0       	rcall	.+0      	; 0xc2c <disk_initialize+0xe>
     c2c:	00 d0       	rcall	.+0      	; 0xc2e <disk_initialize+0x10>
     c2e:	cd b7       	in	r28, 0x3d	; 61
     c30:	de b7       	in	r29, 0x3e	; 62
	BYTE n, ty, cmd, buf[4];
	UINT tmr;
	DSTATUS s;


	if (drv) return RES_NOTRDY;
     c32:	81 11       	cpse	r24, r1
     c34:	c2 c0       	rjmp	.+388    	; 0xdba <disk_initialize+0x19c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c36:	83 ec       	ldi	r24, 0xC3	; 195
     c38:	99 e0       	ldi	r25, 0x09	; 9
     c3a:	01 97       	sbiw	r24, 0x01	; 1
     c3c:	f1 f7       	brne	.-4      	; 0xc3a <disk_initialize+0x1c>
     c3e:	00 c0       	rjmp	.+0      	; 0xc40 <disk_initialize+0x22>
     c40:	00 00       	nop

	_delay_ms(10);			/* 10ms */
	CS_INIT(); CS_H();		/* Initialize port pin tied to CS */
     c42:	84 b1       	in	r24, 0x04	; 4
     c44:	80 61       	ori	r24, 0x10	; 16
     c46:	84 b9       	out	0x04, r24	; 4
     c48:	85 b1       	in	r24, 0x05	; 5
     c4a:	80 61       	ori	r24, 0x10	; 16
     c4c:	85 b9       	out	0x05, r24	; 5
	CK_INIT(); CK_L();		/* Initialize port pin tied to SCLK */
     c4e:	84 b1       	in	r24, 0x04	; 4
     c50:	80 68       	ori	r24, 0x80	; 128
     c52:	84 b9       	out	0x04, r24	; 4
     c54:	85 b1       	in	r24, 0x05	; 5
     c56:	8f 77       	andi	r24, 0x7F	; 127
     c58:	85 b9       	out	0x05, r24	; 5
	DI_INIT();				/* Initialize port pin tied to DI */
     c5a:	84 b1       	in	r24, 0x04	; 4
     c5c:	80 62       	ori	r24, 0x20	; 32
     c5e:	84 b9       	out	0x04, r24	; 4
	DO_INIT();				/* Initialize port pin tied to DO */

	for (n = 10; n; n--) rcvr_mmc(buf, 1);	/* Apply 80 dummy clocks and the card gets ready to receive command */
     c60:	1a e0       	ldi	r17, 0x0A	; 10
     c62:	07 c0       	rjmp	.+14     	; 0xc72 <disk_initialize+0x54>
     c64:	61 e0       	ldi	r22, 0x01	; 1
     c66:	70 e0       	ldi	r23, 0x00	; 0
     c68:	ce 01       	movw	r24, r28
     c6a:	01 96       	adiw	r24, 0x01	; 1
     c6c:	0e 94 e5 04 	call	0x9ca	; 0x9ca <rcvr_mmc>
     c70:	11 50       	subi	r17, 0x01	; 1
     c72:	11 11       	cpse	r17, r1
     c74:	f7 cf       	rjmp	.-18     	; 0xc64 <disk_initialize+0x46>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
     c76:	40 e0       	ldi	r20, 0x00	; 0
     c78:	50 e0       	ldi	r21, 0x00	; 0
     c7a:	ba 01       	movw	r22, r20
     c7c:	80 e0       	ldi	r24, 0x00	; 0
     c7e:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
     c82:	81 30       	cpi	r24, 0x01	; 1
     c84:	09 f0       	breq	.+2      	; 0xc88 <disk_initialize+0x6a>
     c86:	7f c0       	rjmp	.+254    	; 0xd86 <disk_initialize+0x168>
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
     c88:	4a ea       	ldi	r20, 0xAA	; 170
     c8a:	51 e0       	ldi	r21, 0x01	; 1
     c8c:	60 e0       	ldi	r22, 0x00	; 0
     c8e:	70 e0       	ldi	r23, 0x00	; 0
     c90:	88 e0       	ldi	r24, 0x08	; 8
     c92:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
     c96:	81 30       	cpi	r24, 0x01	; 1
     c98:	09 f0       	breq	.+2      	; 0xc9c <disk_initialize+0x7e>
     c9a:	3f c0       	rjmp	.+126    	; 0xd1a <disk_initialize+0xfc>
			rcvr_mmc(buf, 4);							/* Get trailing return value of R7 resp */
     c9c:	64 e0       	ldi	r22, 0x04	; 4
     c9e:	70 e0       	ldi	r23, 0x00	; 0
     ca0:	ce 01       	movw	r24, r28
     ca2:	01 96       	adiw	r24, 0x01	; 1
     ca4:	0e 94 e5 04 	call	0x9ca	; 0x9ca <rcvr_mmc>
			if (buf[2] == 0x01 && buf[3] == 0xAA) {		/* The card can work at vdd range of 2.7-3.6V */
     ca8:	8b 81       	ldd	r24, Y+3	; 0x03
     caa:	81 30       	cpi	r24, 0x01	; 1
     cac:	09 f0       	breq	.+2      	; 0xcb0 <disk_initialize+0x92>
     cae:	6d c0       	rjmp	.+218    	; 0xd8a <disk_initialize+0x16c>
     cb0:	8c 81       	ldd	r24, Y+4	; 0x04
     cb2:	8a 3a       	cpi	r24, 0xAA	; 170
     cb4:	a1 f0       	breq	.+40     	; 0xcde <disk_initialize+0xc0>
	DI_INIT();				/* Initialize port pin tied to DI */
	DO_INIT();				/* Initialize port pin tied to DO */

	for (n = 10; n; n--) rcvr_mmc(buf, 1);	/* Apply 80 dummy clocks and the card gets ready to receive command */

	ty = 0;
     cb6:	f1 2c       	mov	r15, r1
     cb8:	75 c0       	rjmp	.+234    	; 0xda4 <disk_initialize+0x186>
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
			rcvr_mmc(buf, 4);							/* Get trailing return value of R7 resp */
			if (buf[2] == 0x01 && buf[3] == 0xAA) {		/* The card can work at vdd range of 2.7-3.6V */
				for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state (ACMD41 with HCS bit) */
					if (send_cmd(ACMD41, 1UL << 30) == 0) break;
     cba:	40 e0       	ldi	r20, 0x00	; 0
     cbc:	50 e0       	ldi	r21, 0x00	; 0
     cbe:	60 e0       	ldi	r22, 0x00	; 0
     cc0:	70 e4       	ldi	r23, 0x40	; 64
     cc2:	89 ea       	ldi	r24, 0xA9	; 169
     cc4:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
     cc8:	88 23       	and	r24, r24
     cca:	71 f0       	breq	.+28     	; 0xce8 <disk_initialize+0xca>
     ccc:	89 ef       	ldi	r24, 0xF9	; 249
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	01 97       	sbiw	r24, 0x01	; 1
     cd2:	f1 f7       	brne	.-4      	; 0xcd0 <disk_initialize+0xb2>
     cd4:	00 c0       	rjmp	.+0      	; 0xcd6 <disk_initialize+0xb8>
     cd6:	00 00       	nop
	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
			rcvr_mmc(buf, 4);							/* Get trailing return value of R7 resp */
			if (buf[2] == 0x01 && buf[3] == 0xAA) {		/* The card can work at vdd range of 2.7-3.6V */
				for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state (ACMD41 with HCS bit) */
     cd8:	01 50       	subi	r16, 0x01	; 1
     cda:	11 09       	sbc	r17, r1
     cdc:	02 c0       	rjmp	.+4      	; 0xce2 <disk_initialize+0xc4>
     cde:	08 ee       	ldi	r16, 0xE8	; 232
     ce0:	13 e0       	ldi	r17, 0x03	; 3
     ce2:	01 15       	cp	r16, r1
     ce4:	11 05       	cpc	r17, r1
     ce6:	49 f7       	brne	.-46     	; 0xcba <disk_initialize+0x9c>
					if (send_cmd(ACMD41, 1UL << 30) == 0) break;
					_delay_ms(1);
				}
				if (tmr && send_cmd(CMD58, 0) == 0) {	/* Check CCS bit in the OCR */
     ce8:	01 2b       	or	r16, r17
     cea:	09 f4       	brne	.+2      	; 0xcee <disk_initialize+0xd0>
     cec:	50 c0       	rjmp	.+160    	; 0xd8e <disk_initialize+0x170>
     cee:	40 e0       	ldi	r20, 0x00	; 0
     cf0:	50 e0       	ldi	r21, 0x00	; 0
     cf2:	ba 01       	movw	r22, r20
     cf4:	8a e3       	ldi	r24, 0x3A	; 58
     cf6:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
     cfa:	81 11       	cpse	r24, r1
     cfc:	4a c0       	rjmp	.+148    	; 0xd92 <disk_initialize+0x174>
					rcvr_mmc(buf, 4);
     cfe:	64 e0       	ldi	r22, 0x04	; 4
     d00:	70 e0       	ldi	r23, 0x00	; 0
     d02:	ce 01       	movw	r24, r28
     d04:	01 96       	adiw	r24, 0x01	; 1
     d06:	0e 94 e5 04 	call	0x9ca	; 0x9ca <rcvr_mmc>
					ty = (buf[0] & 0x40) ? CT_SDC2 | CT_BLOCK : CT_SDC2;	/* SDv2+ */
     d0a:	89 81       	ldd	r24, Y+1	; 0x01
     d0c:	86 ff       	sbrs	r24, 6
     d0e:	43 c0       	rjmp	.+134    	; 0xd96 <disk_initialize+0x178>
     d10:	0f 2e       	mov	r0, r31
     d12:	f8 e1       	ldi	r31, 0x18	; 24
     d14:	ff 2e       	mov	r15, r31
     d16:	f0 2d       	mov	r31, r0
     d18:	45 c0       	rjmp	.+138    	; 0xda4 <disk_initialize+0x186>
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
     d1a:	40 e0       	ldi	r20, 0x00	; 0
     d1c:	50 e0       	ldi	r21, 0x00	; 0
     d1e:	ba 01       	movw	r22, r20
     d20:	89 ea       	ldi	r24, 0xA9	; 169
     d22:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
     d26:	82 30       	cpi	r24, 0x02	; 2
     d28:	40 f4       	brcc	.+16     	; 0xd3a <disk_initialize+0x11c>
				ty = CT_SDC2; cmd = ACMD41;	/* SDv1 */
     d2a:	0f 2e       	mov	r0, r31
     d2c:	f9 ea       	ldi	r31, 0xA9	; 169
     d2e:	ef 2e       	mov	r14, r31
     d30:	f0 2d       	mov	r31, r0
     d32:	68 94       	set
     d34:	ff 24       	eor	r15, r15
     d36:	f3 f8       	bld	r15, 3
     d38:	04 c0       	rjmp	.+8      	; 0xd42 <disk_initialize+0x124>
			} else {
				ty = CT_MMC3; cmd = CMD1;	/* MMCv3 */
     d3a:	ee 24       	eor	r14, r14
     d3c:	e3 94       	inc	r14
     d3e:	ff 24       	eor	r15, r15
     d40:	f3 94       	inc	r15
			}
			for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state */
     d42:	08 ee       	ldi	r16, 0xE8	; 232
     d44:	13 e0       	ldi	r17, 0x03	; 3
     d46:	10 c0       	rjmp	.+32     	; 0xd68 <disk_initialize+0x14a>
				if (send_cmd(cmd, 0) == 0) break;
     d48:	40 e0       	ldi	r20, 0x00	; 0
     d4a:	50 e0       	ldi	r21, 0x00	; 0
     d4c:	ba 01       	movw	r22, r20
     d4e:	8e 2d       	mov	r24, r14
     d50:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
     d54:	88 23       	and	r24, r24
     d56:	59 f0       	breq	.+22     	; 0xd6e <disk_initialize+0x150>
     d58:	89 ef       	ldi	r24, 0xF9	; 249
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	01 97       	sbiw	r24, 0x01	; 1
     d5e:	f1 f7       	brne	.-4      	; 0xd5c <disk_initialize+0x13e>
     d60:	00 c0       	rjmp	.+0      	; 0xd62 <disk_initialize+0x144>
     d62:	00 00       	nop
			if (send_cmd(ACMD41, 0) <= 1) 	{
				ty = CT_SDC2; cmd = ACMD41;	/* SDv1 */
			} else {
				ty = CT_MMC3; cmd = CMD1;	/* MMCv3 */
			}
			for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state */
     d64:	01 50       	subi	r16, 0x01	; 1
     d66:	11 09       	sbc	r17, r1
     d68:	01 15       	cp	r16, r1
     d6a:	11 05       	cpc	r17, r1
     d6c:	69 f7       	brne	.-38     	; 0xd48 <disk_initialize+0x12a>
				if (send_cmd(cmd, 0) == 0) break;
				_delay_ms(1);
			}
			if (!tmr || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
     d6e:	01 2b       	or	r16, r17
     d70:	b1 f0       	breq	.+44     	; 0xd9e <disk_initialize+0x180>
     d72:	40 e0       	ldi	r20, 0x00	; 0
     d74:	52 e0       	ldi	r21, 0x02	; 2
     d76:	60 e0       	ldi	r22, 0x00	; 0
     d78:	70 e0       	ldi	r23, 0x00	; 0
     d7a:	80 e1       	ldi	r24, 0x10	; 16
     d7c:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
     d80:	81 11       	cpse	r24, r1
     d82:	0f c0       	rjmp	.+30     	; 0xda2 <disk_initialize+0x184>
     d84:	0f c0       	rjmp	.+30     	; 0xda4 <disk_initialize+0x186>
	DI_INIT();				/* Initialize port pin tied to DI */
	DO_INIT();				/* Initialize port pin tied to DO */

	for (n = 10; n; n--) rcvr_mmc(buf, 1);	/* Apply 80 dummy clocks and the card gets ready to receive command */

	ty = 0;
     d86:	f1 2c       	mov	r15, r1
     d88:	0d c0       	rjmp	.+26     	; 0xda4 <disk_initialize+0x186>
     d8a:	f1 2c       	mov	r15, r1
     d8c:	0b c0       	rjmp	.+22     	; 0xda4 <disk_initialize+0x186>
     d8e:	f1 2c       	mov	r15, r1
     d90:	09 c0       	rjmp	.+18     	; 0xda4 <disk_initialize+0x186>
     d92:	f1 2c       	mov	r15, r1
     d94:	07 c0       	rjmp	.+14     	; 0xda4 <disk_initialize+0x186>
					if (send_cmd(ACMD41, 1UL << 30) == 0) break;
					_delay_ms(1);
				}
				if (tmr && send_cmd(CMD58, 0) == 0) {	/* Check CCS bit in the OCR */
					rcvr_mmc(buf, 4);
					ty = (buf[0] & 0x40) ? CT_SDC2 | CT_BLOCK : CT_SDC2;	/* SDv2+ */
     d96:	68 94       	set
     d98:	ff 24       	eor	r15, r15
     d9a:	f3 f8       	bld	r15, 3
     d9c:	03 c0       	rjmp	.+6      	; 0xda4 <disk_initialize+0x186>
			for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state */
				if (send_cmd(cmd, 0) == 0) break;
				_delay_ms(1);
			}
			if (!tmr || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
     d9e:	f1 2c       	mov	r15, r1
     da0:	01 c0       	rjmp	.+2      	; 0xda4 <disk_initialize+0x186>
     da2:	f1 2c       	mov	r15, r1
		}
	}
	CardType = ty;
     da4:	f0 92 d8 02 	sts	0x02D8, r15	; 0x8002d8 <CardType>
	s = ty ? 0 : STA_NOINIT;
     da8:	11 e0       	ldi	r17, 0x01	; 1
     daa:	f1 10       	cpse	r15, r1
     dac:	10 e0       	ldi	r17, 0x00	; 0
	Stat = s;
     dae:	10 93 00 01 	sts	0x0100, r17	; 0x800100 <__DATA_REGION_ORIGIN__>

	deselect();
     db2:	0e 94 cb 04 	call	0x996	; 0x996 <deselect>

	return s;
     db6:	81 2f       	mov	r24, r17
     db8:	01 c0       	rjmp	.+2      	; 0xdbc <disk_initialize+0x19e>
	BYTE n, ty, cmd, buf[4];
	UINT tmr;
	DSTATUS s;


	if (drv) return RES_NOTRDY;
     dba:	83 e0       	ldi	r24, 0x03	; 3
	Stat = s;

	deselect();

	return s;
}
     dbc:	0f 90       	pop	r0
     dbe:	0f 90       	pop	r0
     dc0:	0f 90       	pop	r0
     dc2:	0f 90       	pop	r0
     dc4:	df 91       	pop	r29
     dc6:	cf 91       	pop	r28
     dc8:	1f 91       	pop	r17
     dca:	0f 91       	pop	r16
     dcc:	ff 90       	pop	r15
     dce:	ef 90       	pop	r14
     dd0:	08 95       	ret

00000dd2 <disk_read>:
	BYTE drv,			/* Physical drive nmuber (0) */
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	LBA_t sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
     dd2:	bf 92       	push	r11
     dd4:	cf 92       	push	r12
     dd6:	df 92       	push	r13
     dd8:	ef 92       	push	r14
     dda:	ff 92       	push	r15
     ddc:	0f 93       	push	r16
     dde:	1f 93       	push	r17
     de0:	cf 93       	push	r28
     de2:	df 93       	push	r29
     de4:	eb 01       	movw	r28, r22
     de6:	69 01       	movw	r12, r18
     de8:	7a 01       	movw	r14, r20
	BYTE cmd;
	DWORD sect = (DWORD)sector;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
     dea:	0e 94 08 06 	call	0xc10	; 0xc10 <disk_status>
     dee:	80 fd       	sbrc	r24, 0
     df0:	3b c0       	rjmp	.+118    	; 0xe68 <disk_read+0x96>
	if (!(CardType & CT_BLOCK)) sect *= 512;	/* Convert LBA to byte address if needed */
     df2:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <CardType>
     df6:	84 fd       	sbrc	r24, 4
     df8:	09 c0       	rjmp	.+18     	; 0xe0c <disk_read+0x3a>
     dfa:	0b 2e       	mov	r0, r27
     dfc:	b9 e0       	ldi	r27, 0x09	; 9
     dfe:	cc 0c       	add	r12, r12
     e00:	dd 1c       	adc	r13, r13
     e02:	ee 1c       	adc	r14, r14
     e04:	ff 1c       	adc	r15, r15
     e06:	ba 95       	dec	r27
     e08:	d1 f7       	brne	.-12     	; 0xdfe <disk_read+0x2c>
     e0a:	b0 2d       	mov	r27, r0

	cmd = count > 1 ? CMD18 : CMD17;			/*  READ_MULTIPLE_BLOCK : READ_SINGLE_BLOCK */
     e0c:	02 30       	cpi	r16, 0x02	; 2
     e0e:	11 05       	cpc	r17, r1
     e10:	28 f0       	brcs	.+10     	; 0xe1c <disk_read+0x4a>
     e12:	0f 2e       	mov	r0, r31
     e14:	f2 e1       	ldi	r31, 0x12	; 18
     e16:	bf 2e       	mov	r11, r31
     e18:	f0 2d       	mov	r31, r0
     e1a:	04 c0       	rjmp	.+8      	; 0xe24 <disk_read+0x52>
     e1c:	0f 2e       	mov	r0, r31
     e1e:	f1 e1       	ldi	r31, 0x11	; 17
     e20:	bf 2e       	mov	r11, r31
     e22:	f0 2d       	mov	r31, r0
	if (send_cmd(cmd, sect) == 0) {
     e24:	b7 01       	movw	r22, r14
     e26:	a6 01       	movw	r20, r12
     e28:	8b 2d       	mov	r24, r11
     e2a:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
     e2e:	81 11       	cpse	r24, r1
     e30:	14 c0       	rjmp	.+40     	; 0xe5a <disk_read+0x88>
		do {
			if (!rcvr_datablock(buff, 512)) break;
     e32:	60 e0       	ldi	r22, 0x00	; 0
     e34:	72 e0       	ldi	r23, 0x02	; 2
     e36:	ce 01       	movw	r24, r28
     e38:	0e 94 c9 05 	call	0xb92	; 0xb92 <rcvr_datablock>
     e3c:	89 2b       	or	r24, r25
     e3e:	21 f0       	breq	.+8      	; 0xe48 <disk_read+0x76>
			buff += 512;
     e40:	de 5f       	subi	r29, 0xFE	; 254
		} while (--count);
     e42:	01 50       	subi	r16, 0x01	; 1
     e44:	11 09       	sbc	r17, r1
     e46:	a9 f7       	brne	.-22     	; 0xe32 <disk_read+0x60>
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
     e48:	82 e1       	ldi	r24, 0x12	; 18
     e4a:	b8 12       	cpse	r11, r24
     e4c:	06 c0       	rjmp	.+12     	; 0xe5a <disk_read+0x88>
     e4e:	40 e0       	ldi	r20, 0x00	; 0
     e50:	50 e0       	ldi	r21, 0x00	; 0
     e52:	ba 01       	movw	r22, r20
     e54:	8c e0       	ldi	r24, 0x0C	; 12
     e56:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
	}
	deselect();
     e5a:	0e 94 cb 04 	call	0x996	; 0x996 <deselect>

	return count ? RES_ERROR : RES_OK;
     e5e:	81 e0       	ldi	r24, 0x01	; 1
     e60:	01 2b       	or	r16, r17
     e62:	19 f4       	brne	.+6      	; 0xe6a <disk_read+0x98>
     e64:	80 e0       	ldi	r24, 0x00	; 0
     e66:	01 c0       	rjmp	.+2      	; 0xe6a <disk_read+0x98>
{
	BYTE cmd;
	DWORD sect = (DWORD)sector;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
     e68:	83 e0       	ldi	r24, 0x03	; 3
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
     e6a:	df 91       	pop	r29
     e6c:	cf 91       	pop	r28
     e6e:	1f 91       	pop	r17
     e70:	0f 91       	pop	r16
     e72:	ff 90       	pop	r15
     e74:	ef 90       	pop	r14
     e76:	df 90       	pop	r13
     e78:	cf 90       	pop	r12
     e7a:	bf 90       	pop	r11
     e7c:	08 95       	ret

00000e7e <disk_write>:
	BYTE drv,			/* Physical drive nmuber (0) */
	const BYTE *buff,	/* Pointer to the data to be written */
	LBA_t sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
     e7e:	cf 92       	push	r12
     e80:	df 92       	push	r13
     e82:	ef 92       	push	r14
     e84:	ff 92       	push	r15
     e86:	0f 93       	push	r16
     e88:	1f 93       	push	r17
     e8a:	cf 93       	push	r28
     e8c:	df 93       	push	r29
     e8e:	eb 01       	movw	r28, r22
     e90:	69 01       	movw	r12, r18
     e92:	7a 01       	movw	r14, r20
	DWORD sect = (DWORD)sector;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
     e94:	0e 94 08 06 	call	0xc10	; 0xc10 <disk_status>
     e98:	80 fd       	sbrc	r24, 0
     e9a:	4b c0       	rjmp	.+150    	; 0xf32 <disk_write+0xb4>
	if (!(CardType & CT_BLOCK)) sect *= 512;	/* Convert LBA to byte address if needed */
     e9c:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <CardType>
     ea0:	84 fd       	sbrc	r24, 4
     ea2:	09 c0       	rjmp	.+18     	; 0xeb6 <disk_write+0x38>
     ea4:	0b 2e       	mov	r0, r27
     ea6:	b9 e0       	ldi	r27, 0x09	; 9
     ea8:	cc 0c       	add	r12, r12
     eaa:	dd 1c       	adc	r13, r13
     eac:	ee 1c       	adc	r14, r14
     eae:	ff 1c       	adc	r15, r15
     eb0:	ba 95       	dec	r27
     eb2:	d1 f7       	brne	.-12     	; 0xea8 <disk_write+0x2a>
     eb4:	b0 2d       	mov	r27, r0

	if (count == 1) {	/* Single block write */
     eb6:	01 30       	cpi	r16, 0x01	; 1
     eb8:	11 05       	cpc	r17, r1
     eba:	71 f4       	brne	.+28     	; 0xed8 <disk_write+0x5a>
		if ((send_cmd(CMD24, sect) == 0)	/* WRITE_BLOCK */
     ebc:	b7 01       	movw	r22, r14
     ebe:	a6 01       	movw	r20, r12
     ec0:	88 e1       	ldi	r24, 0x18	; 24
     ec2:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
     ec6:	81 11       	cpse	r24, r1
     ec8:	2d c0       	rjmp	.+90     	; 0xf24 <disk_write+0xa6>
			&& xmit_datablock(buff, 0xFE))
     eca:	6e ef       	ldi	r22, 0xFE	; 254
     ecc:	ce 01       	movw	r24, r28
     ece:	0e 94 8d 05 	call	0xb1a	; 0xb1a <xmit_datablock>
     ed2:	89 2b       	or	r24, r25
     ed4:	11 f5       	brne	.+68     	; 0xf1a <disk_write+0x9c>
     ed6:	26 c0       	rjmp	.+76     	; 0xf24 <disk_write+0xa6>
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
     ed8:	8c 70       	andi	r24, 0x0C	; 12
     eda:	31 f0       	breq	.+12     	; 0xee8 <disk_write+0x6a>
     edc:	a8 01       	movw	r20, r16
     ede:	60 e0       	ldi	r22, 0x00	; 0
     ee0:	70 e0       	ldi	r23, 0x00	; 0
     ee2:	87 e9       	ldi	r24, 0x97	; 151
     ee4:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
		if (send_cmd(CMD25, sect) == 0) {	/* WRITE_MULTIPLE_BLOCK */
     ee8:	b7 01       	movw	r22, r14
     eea:	a6 01       	movw	r20, r12
     eec:	89 e1       	ldi	r24, 0x19	; 25
     eee:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
     ef2:	81 11       	cpse	r24, r1
     ef4:	17 c0       	rjmp	.+46     	; 0xf24 <disk_write+0xa6>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
     ef6:	6c ef       	ldi	r22, 0xFC	; 252
     ef8:	ce 01       	movw	r24, r28
     efa:	0e 94 8d 05 	call	0xb1a	; 0xb1a <xmit_datablock>
     efe:	89 2b       	or	r24, r25
     f00:	21 f0       	breq	.+8      	; 0xf0a <disk_write+0x8c>
				buff += 512;
     f02:	de 5f       	subi	r29, 0xFE	; 254
			} while (--count);
     f04:	01 50       	subi	r16, 0x01	; 1
     f06:	11 09       	sbc	r17, r1
     f08:	b1 f7       	brne	.-20     	; 0xef6 <disk_write+0x78>
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
     f0a:	6d ef       	ldi	r22, 0xFD	; 253
     f0c:	80 e0       	ldi	r24, 0x00	; 0
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	0e 94 8d 05 	call	0xb1a	; 0xb1a <xmit_datablock>
     f14:	89 2b       	or	r24, r25
     f16:	21 f0       	breq	.+8      	; 0xf20 <disk_write+0xa2>
     f18:	05 c0       	rjmp	.+10     	; 0xf24 <disk_write+0xa6>
	if (!(CardType & CT_BLOCK)) sect *= 512;	/* Convert LBA to byte address if needed */

	if (count == 1) {	/* Single block write */
		if ((send_cmd(CMD24, sect) == 0)	/* WRITE_BLOCK */
			&& xmit_datablock(buff, 0xFE))
			count = 0;
     f1a:	00 e0       	ldi	r16, 0x00	; 0
     f1c:	10 e0       	ldi	r17, 0x00	; 0
     f1e:	02 c0       	rjmp	.+4      	; 0xf24 <disk_write+0xa6>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
				buff += 512;
			} while (--count);
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
				count = 1;
     f20:	01 e0       	ldi	r16, 0x01	; 1
     f22:	10 e0       	ldi	r17, 0x00	; 0
		}
	}
	deselect();
     f24:	0e 94 cb 04 	call	0x996	; 0x996 <deselect>

	return count ? RES_ERROR : RES_OK;
     f28:	81 e0       	ldi	r24, 0x01	; 1
     f2a:	01 2b       	or	r16, r17
     f2c:	19 f4       	brne	.+6      	; 0xf34 <disk_write+0xb6>
     f2e:	80 e0       	ldi	r24, 0x00	; 0
     f30:	01 c0       	rjmp	.+2      	; 0xf34 <disk_write+0xb6>
)
{
	DWORD sect = (DWORD)sector;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
     f32:	83 e0       	ldi	r24, 0x03	; 3
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
     f34:	df 91       	pop	r29
     f36:	cf 91       	pop	r28
     f38:	1f 91       	pop	r17
     f3a:	0f 91       	pop	r16
     f3c:	ff 90       	pop	r15
     f3e:	ef 90       	pop	r14
     f40:	df 90       	pop	r13
     f42:	cf 90       	pop	r12
     f44:	08 95       	ret

00000f46 <disk_ioctl>:
DRESULT disk_ioctl (
	BYTE drv,		/* Physical drive nmuber (0) */
	BYTE ctrl,		/* Control code */
	void *buff		/* Buffer to send/receive control data */
)
{
     f46:	ef 92       	push	r14
     f48:	ff 92       	push	r15
     f4a:	1f 93       	push	r17
     f4c:	cf 93       	push	r28
     f4e:	df 93       	push	r29
     f50:	cd b7       	in	r28, 0x3d	; 61
     f52:	de b7       	in	r29, 0x3e	; 62
     f54:	60 97       	sbiw	r28, 0x10	; 16
     f56:	0f b6       	in	r0, 0x3f	; 63
     f58:	f8 94       	cli
     f5a:	de bf       	out	0x3e, r29	; 62
     f5c:	0f be       	out	0x3f, r0	; 63
     f5e:	cd bf       	out	0x3d, r28	; 61
     f60:	16 2f       	mov	r17, r22
     f62:	7a 01       	movw	r14, r20
	DRESULT res;
	BYTE n, csd[16];
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */
     f64:	0e 94 08 06 	call	0xc10	; 0xc10 <disk_status>
     f68:	80 fd       	sbrc	r24, 0
     f6a:	9c c0       	rjmp	.+312    	; 0x10a4 <__DATA_REGION_LENGTH__+0xa4>

	res = RES_ERROR;
	switch (ctrl) {
     f6c:	11 30       	cpi	r17, 0x01	; 1
     f6e:	61 f0       	breq	.+24     	; 0xf88 <disk_ioctl+0x42>
     f70:	20 f0       	brcs	.+8      	; 0xf7a <disk_ioctl+0x34>
     f72:	13 30       	cpi	r17, 0x03	; 3
     f74:	09 f4       	brne	.+2      	; 0xf78 <disk_ioctl+0x32>
     f76:	80 c0       	rjmp	.+256    	; 0x1078 <__DATA_REGION_LENGTH__+0x78>
     f78:	8a c0       	rjmp	.+276    	; 0x108e <__DATA_REGION_LENGTH__+0x8e>
		case CTRL_SYNC :		/* Make sure that no pending write process */
			if (select()) res = RES_OK;
     f7a:	0e 94 17 05 	call	0xa2e	; 0xa2e <select>
     f7e:	89 2b       	or	r24, r25
     f80:	09 f0       	breq	.+2      	; 0xf84 <disk_ioctl+0x3e>
     f82:	87 c0       	rjmp	.+270    	; 0x1092 <__DATA_REGION_LENGTH__+0x92>
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */

	res = RES_ERROR;
     f84:	11 e0       	ldi	r17, 0x01	; 1
     f86:	8a c0       	rjmp	.+276    	; 0x109c <__DATA_REGION_LENGTH__+0x9c>
		case CTRL_SYNC :		/* Make sure that no pending write process */
			if (select()) res = RES_OK;
			break;

		case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
     f88:	40 e0       	ldi	r20, 0x00	; 0
     f8a:	50 e0       	ldi	r21, 0x00	; 0
     f8c:	ba 01       	movw	r22, r20
     f8e:	89 e0       	ldi	r24, 0x09	; 9
     f90:	0e 94 2c 05 	call	0xa58	; 0xa58 <send_cmd>
     f94:	81 11       	cpse	r24, r1
     f96:	7f c0       	rjmp	.+254    	; 0x1096 <__DATA_REGION_LENGTH__+0x96>
     f98:	60 e1       	ldi	r22, 0x10	; 16
     f9a:	70 e0       	ldi	r23, 0x00	; 0
     f9c:	ce 01       	movw	r24, r28
     f9e:	01 96       	adiw	r24, 0x01	; 1
     fa0:	0e 94 c9 05 	call	0xb92	; 0xb92 <rcvr_datablock>
     fa4:	89 2b       	or	r24, r25
     fa6:	09 f4       	brne	.+2      	; 0xfaa <disk_ioctl+0x64>
     fa8:	78 c0       	rjmp	.+240    	; 0x109a <__DATA_REGION_LENGTH__+0x9a>
				if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
     faa:	89 81       	ldd	r24, Y+1	; 0x01
     fac:	82 95       	swap	r24
     fae:	86 95       	lsr	r24
     fb0:	86 95       	lsr	r24
     fb2:	83 70       	andi	r24, 0x03	; 3
     fb4:	81 30       	cpi	r24, 0x01	; 1
     fb6:	31 f5       	brne	.+76     	; 0x1004 <__DATA_REGION_LENGTH__+0x4>
					cs = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
     fb8:	8a 85       	ldd	r24, Y+10	; 0x0a
     fba:	29 85       	ldd	r18, Y+9	; 0x09
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	32 2f       	mov	r19, r18
     fc0:	22 27       	eor	r18, r18
     fc2:	28 0f       	add	r18, r24
     fc4:	31 1d       	adc	r19, r1
     fc6:	88 85       	ldd	r24, Y+8	; 0x08
     fc8:	8f 73       	andi	r24, 0x3F	; 63
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	a0 e0       	ldi	r26, 0x00	; 0
     fce:	b0 e0       	ldi	r27, 0x00	; 0
     fd0:	dc 01       	movw	r26, r24
     fd2:	99 27       	eor	r25, r25
     fd4:	88 27       	eor	r24, r24
     fd6:	82 0f       	add	r24, r18
     fd8:	93 1f       	adc	r25, r19
     fda:	a1 1d       	adc	r26, r1
     fdc:	b1 1d       	adc	r27, r1
     fde:	01 96       	adiw	r24, 0x01	; 1
     fe0:	a1 1d       	adc	r26, r1
     fe2:	b1 1d       	adc	r27, r1
					*(LBA_t*)buff = cs << 10;
     fe4:	07 2e       	mov	r0, r23
     fe6:	7a e0       	ldi	r23, 0x0A	; 10
     fe8:	88 0f       	add	r24, r24
     fea:	99 1f       	adc	r25, r25
     fec:	aa 1f       	adc	r26, r26
     fee:	bb 1f       	adc	r27, r27
     ff0:	7a 95       	dec	r23
     ff2:	d1 f7       	brne	.-12     	; 0xfe8 <disk_ioctl+0xa2>
     ff4:	70 2d       	mov	r23, r0
     ff6:	f7 01       	movw	r30, r14
     ff8:	80 83       	st	Z, r24
     ffa:	91 83       	std	Z+1, r25	; 0x01
     ffc:	a2 83       	std	Z+2, r26	; 0x02
     ffe:	b3 83       	std	Z+3, r27	; 0x03
				} else {					/* SDC ver 1.XX or MMC */
					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
					cs = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
					*(LBA_t*)buff = cs << (n - 9);
				}
				res = RES_OK;
    1000:	10 e0       	ldi	r17, 0x00	; 0
    1002:	4c c0       	rjmp	.+152    	; 0x109c <__DATA_REGION_LENGTH__+0x9c>
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
				if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
					cs = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
					*(LBA_t*)buff = cs << 10;
				} else {					/* SDC ver 1.XX or MMC */
					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    1004:	2e 81       	ldd	r18, Y+6	; 0x06
    1006:	9b 85       	ldd	r25, Y+11	; 0x0b
    1008:	99 1f       	adc	r25, r25
    100a:	99 27       	eor	r25, r25
    100c:	99 1f       	adc	r25, r25
    100e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1010:	2f 70       	andi	r18, 0x0F	; 15
    1012:	29 0f       	add	r18, r25
    1014:	83 70       	andi	r24, 0x03	; 3
    1016:	88 0f       	add	r24, r24
    1018:	28 0f       	add	r18, r24
    101a:	42 e0       	ldi	r20, 0x02	; 2
    101c:	42 0f       	add	r20, r18
					cs = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    101e:	29 85       	ldd	r18, Y+9	; 0x09
    1020:	88 85       	ldd	r24, Y+8	; 0x08
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	88 0f       	add	r24, r24
    1026:	99 1f       	adc	r25, r25
    1028:	88 0f       	add	r24, r24
    102a:	99 1f       	adc	r25, r25
    102c:	22 95       	swap	r18
    102e:	26 95       	lsr	r18
    1030:	26 95       	lsr	r18
    1032:	23 70       	andi	r18, 0x03	; 3
    1034:	bc 01       	movw	r22, r24
    1036:	62 0f       	add	r22, r18
    1038:	71 1d       	adc	r23, r1
    103a:	2f 81       	ldd	r18, Y+7	; 0x07
    103c:	23 70       	andi	r18, 0x03	; 3
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	c9 01       	movw	r24, r18
    1042:	98 2f       	mov	r25, r24
    1044:	88 27       	eor	r24, r24
    1046:	99 0f       	add	r25, r25
    1048:	99 0f       	add	r25, r25
    104a:	86 0f       	add	r24, r22
    104c:	97 1f       	adc	r25, r23
    104e:	01 96       	adiw	r24, 0x01	; 1
    1050:	a0 e0       	ldi	r26, 0x00	; 0
    1052:	b0 e0       	ldi	r27, 0x00	; 0
					*(LBA_t*)buff = cs << (n - 9);
    1054:	24 2f       	mov	r18, r20
    1056:	30 e0       	ldi	r19, 0x00	; 0
    1058:	29 50       	subi	r18, 0x09	; 9
    105a:	31 09       	sbc	r19, r1
    105c:	04 c0       	rjmp	.+8      	; 0x1066 <__DATA_REGION_LENGTH__+0x66>
    105e:	88 0f       	add	r24, r24
    1060:	99 1f       	adc	r25, r25
    1062:	aa 1f       	adc	r26, r26
    1064:	bb 1f       	adc	r27, r27
    1066:	2a 95       	dec	r18
    1068:	d2 f7       	brpl	.-12     	; 0x105e <__DATA_REGION_LENGTH__+0x5e>
    106a:	f7 01       	movw	r30, r14
    106c:	80 83       	st	Z, r24
    106e:	91 83       	std	Z+1, r25	; 0x01
    1070:	a2 83       	std	Z+2, r26	; 0x02
    1072:	b3 83       	std	Z+3, r27	; 0x03
				}
				res = RES_OK;
    1074:	10 e0       	ldi	r17, 0x00	; 0
    1076:	12 c0       	rjmp	.+36     	; 0x109c <__DATA_REGION_LENGTH__+0x9c>
			}
			break;

		case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
			*(DWORD*)buff = 128;
    1078:	80 e8       	ldi	r24, 0x80	; 128
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	a0 e0       	ldi	r26, 0x00	; 0
    107e:	b0 e0       	ldi	r27, 0x00	; 0
    1080:	f7 01       	movw	r30, r14
    1082:	80 83       	st	Z, r24
    1084:	91 83       	std	Z+1, r25	; 0x01
    1086:	a2 83       	std	Z+2, r26	; 0x02
    1088:	b3 83       	std	Z+3, r27	; 0x03
			res = RES_OK;
    108a:	10 e0       	ldi	r17, 0x00	; 0
			break;
    108c:	07 c0       	rjmp	.+14     	; 0x109c <__DATA_REGION_LENGTH__+0x9c>

		default:
			res = RES_PARERR;
    108e:	14 e0       	ldi	r17, 0x04	; 4
    1090:	05 c0       	rjmp	.+10     	; 0x109c <__DATA_REGION_LENGTH__+0x9c>
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */

	res = RES_ERROR;
	switch (ctrl) {
		case CTRL_SYNC :		/* Make sure that no pending write process */
			if (select()) res = RES_OK;
    1092:	10 e0       	ldi	r17, 0x00	; 0
    1094:	03 c0       	rjmp	.+6      	; 0x109c <__DATA_REGION_LENGTH__+0x9c>
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */

	res = RES_ERROR;
    1096:	11 e0       	ldi	r17, 0x01	; 1
    1098:	01 c0       	rjmp	.+2      	; 0x109c <__DATA_REGION_LENGTH__+0x9c>
    109a:	11 e0       	ldi	r17, 0x01	; 1

		default:
			res = RES_PARERR;
	}

	deselect();
    109c:	0e 94 cb 04 	call	0x996	; 0x996 <deselect>

	return res;
    10a0:	81 2f       	mov	r24, r17
    10a2:	01 c0       	rjmp	.+2      	; 0x10a6 <__DATA_REGION_LENGTH__+0xa6>
	DRESULT res;
	BYTE n, csd[16];
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */
    10a4:	83 e0       	ldi	r24, 0x03	; 3
	}

	deselect();

	return res;
    10a6:	60 96       	adiw	r28, 0x10	; 16
    10a8:	0f b6       	in	r0, 0x3f	; 63
    10aa:	f8 94       	cli
    10ac:	de bf       	out	0x3e, r29	; 62
    10ae:	0f be       	out	0x3f, r0	; 63
    10b0:	cd bf       	out	0x3d, r28	; 61
    10b2:	df 91       	pop	r29
    10b4:	cf 91       	pop	r28
    10b6:	1f 91       	pop	r17
    10b8:	ff 90       	pop	r15
    10ba:	ef 90       	pop	r14
    10bc:	08 95       	ret

000010be <ld_word>:


	putc_init(&pb, fp);
	while (*str) putc_bfd(&pb, *str++);		/* Put the string */
	return putc_flush(&pb);
}
    10be:	fc 01       	movw	r30, r24
    10c0:	21 81       	ldd	r18, Z+1	; 0x01
    10c2:	30 e0       	ldi	r19, 0x00	; 0
    10c4:	32 2f       	mov	r19, r18
    10c6:	22 27       	eor	r18, r18
    10c8:	80 81       	ld	r24, Z
    10ca:	a9 01       	movw	r20, r18
    10cc:	48 2b       	or	r20, r24
    10ce:	ca 01       	movw	r24, r20
    10d0:	08 95       	ret

000010d2 <ld_dword>:
    10d2:	fc 01       	movw	r30, r24
    10d4:	63 81       	ldd	r22, Z+3	; 0x03
    10d6:	86 2f       	mov	r24, r22
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	a0 e0       	ldi	r26, 0x00	; 0
    10dc:	b0 e0       	ldi	r27, 0x00	; 0
    10de:	ba 2f       	mov	r27, r26
    10e0:	a9 2f       	mov	r26, r25
    10e2:	98 2f       	mov	r25, r24
    10e4:	88 27       	eor	r24, r24
    10e6:	22 81       	ldd	r18, Z+2	; 0x02
    10e8:	82 2b       	or	r24, r18
    10ea:	ba 2f       	mov	r27, r26
    10ec:	a9 2f       	mov	r26, r25
    10ee:	98 2f       	mov	r25, r24
    10f0:	88 27       	eor	r24, r24
    10f2:	21 81       	ldd	r18, Z+1	; 0x01
    10f4:	82 2b       	or	r24, r18
    10f6:	ba 2f       	mov	r27, r26
    10f8:	a9 2f       	mov	r26, r25
    10fa:	98 2f       	mov	r25, r24
    10fc:	88 27       	eor	r24, r24
    10fe:	20 81       	ld	r18, Z
    1100:	bc 01       	movw	r22, r24
    1102:	cd 01       	movw	r24, r26
    1104:	62 2b       	or	r22, r18
    1106:	08 95       	ret

00001108 <st_word>:
    1108:	fc 01       	movw	r30, r24
    110a:	60 83       	st	Z, r22
    110c:	71 83       	std	Z+1, r23	; 0x01
    110e:	08 95       	ret

00001110 <st_dword>:
    1110:	fc 01       	movw	r30, r24
    1112:	40 83       	st	Z, r20
    1114:	51 83       	std	Z+1, r21	; 0x01
    1116:	62 83       	std	Z+2, r22	; 0x02
    1118:	73 83       	std	Z+3, r23	; 0x03
    111a:	08 95       	ret

0000111c <dbc_1st>:
    111c:	81 38       	cpi	r24, 0x81	; 129
    111e:	48 f0       	brcs	.+18     	; 0x1132 <dbc_1st+0x16>
    1120:	80 3a       	cpi	r24, 0xA0	; 160
    1122:	50 f0       	brcs	.+20     	; 0x1138 <dbc_1st+0x1c>
    1124:	80 3e       	cpi	r24, 0xE0	; 224
    1126:	58 f0       	brcs	.+22     	; 0x113e <dbc_1st+0x22>
    1128:	8d 3f       	cpi	r24, 0xFD	; 253
    112a:	60 f0       	brcs	.+24     	; 0x1144 <dbc_1st+0x28>
    112c:	80 e0       	ldi	r24, 0x00	; 0
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	08 95       	ret
    1132:	80 e0       	ldi	r24, 0x00	; 0
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	08 95       	ret
    1138:	81 e0       	ldi	r24, 0x01	; 1
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	08 95       	ret
    113e:	80 e0       	ldi	r24, 0x00	; 0
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	08 95       	ret
    1144:	81 e0       	ldi	r24, 0x01	; 1
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	08 95       	ret

0000114a <dbc_2nd>:
    114a:	80 34       	cpi	r24, 0x40	; 64
    114c:	58 f0       	brcs	.+22     	; 0x1164 <dbc_2nd+0x1a>
    114e:	8f 37       	cpi	r24, 0x7F	; 127
    1150:	60 f0       	brcs	.+24     	; 0x116a <dbc_2nd+0x20>
    1152:	80 38       	cpi	r24, 0x80	; 128
    1154:	10 f0       	brcs	.+4      	; 0x115a <dbc_2nd+0x10>
    1156:	8d 3f       	cpi	r24, 0xFD	; 253
    1158:	58 f0       	brcs	.+22     	; 0x1170 <dbc_2nd+0x26>
    115a:	88 23       	and	r24, r24
    115c:	61 f0       	breq	.+24     	; 0x1176 <dbc_2nd+0x2c>
    115e:	80 e0       	ldi	r24, 0x00	; 0
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	08 95       	ret
    1164:	80 e0       	ldi	r24, 0x00	; 0
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	08 95       	ret
    116a:	81 e0       	ldi	r24, 0x01	; 1
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	08 95       	ret
    1170:	81 e0       	ldi	r24, 0x01	; 1
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	08 95       	ret
    1176:	81 e0       	ldi	r24, 0x01	; 1
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	08 95       	ret

0000117c <clst2sect>:
    117c:	cf 92       	push	r12
    117e:	df 92       	push	r13
    1180:	ef 92       	push	r14
    1182:	ff 92       	push	r15
    1184:	fc 01       	movw	r30, r24
    1186:	9a 01       	movw	r18, r20
    1188:	ab 01       	movw	r20, r22
    118a:	22 50       	subi	r18, 0x02	; 2
    118c:	31 09       	sbc	r19, r1
    118e:	41 09       	sbc	r20, r1
    1190:	51 09       	sbc	r21, r1
    1192:	c4 88       	ldd	r12, Z+20	; 0x14
    1194:	d5 88       	ldd	r13, Z+21	; 0x15
    1196:	e6 88       	ldd	r14, Z+22	; 0x16
    1198:	f7 88       	ldd	r15, Z+23	; 0x17
    119a:	82 e0       	ldi	r24, 0x02	; 2
    119c:	c8 1a       	sub	r12, r24
    119e:	d1 08       	sbc	r13, r1
    11a0:	e1 08       	sbc	r14, r1
    11a2:	f1 08       	sbc	r15, r1
    11a4:	2c 15       	cp	r18, r12
    11a6:	3d 05       	cpc	r19, r13
    11a8:	4e 05       	cpc	r20, r14
    11aa:	5f 05       	cpc	r21, r15
    11ac:	68 f4       	brcc	.+26     	; 0x11c8 <clst2sect+0x4c>
    11ae:	c0 a4       	ldd	r12, Z+40	; 0x28
    11b0:	d1 a4       	ldd	r13, Z+41	; 0x29
    11b2:	e2 a4       	ldd	r14, Z+42	; 0x2a
    11b4:	f3 a4       	ldd	r15, Z+43	; 0x2b
    11b6:	a2 85       	ldd	r26, Z+10	; 0x0a
    11b8:	b3 85       	ldd	r27, Z+11	; 0x0b
    11ba:	0e 94 0a 23 	call	0x4614	; 0x4614 <__muluhisi3>
    11be:	6c 0d       	add	r22, r12
    11c0:	7d 1d       	adc	r23, r13
    11c2:	8e 1d       	adc	r24, r14
    11c4:	9f 1d       	adc	r25, r15
    11c6:	03 c0       	rjmp	.+6      	; 0x11ce <clst2sect+0x52>
    11c8:	60 e0       	ldi	r22, 0x00	; 0
    11ca:	70 e0       	ldi	r23, 0x00	; 0
    11cc:	cb 01       	movw	r24, r22
    11ce:	ff 90       	pop	r15
    11d0:	ef 90       	pop	r14
    11d2:	df 90       	pop	r13
    11d4:	cf 90       	pop	r12
    11d6:	08 95       	ret

000011d8 <ld_clust>:
    11d8:	cf 92       	push	r12
    11da:	df 92       	push	r13
    11dc:	ef 92       	push	r14
    11de:	ff 92       	push	r15
    11e0:	0f 93       	push	r16
    11e2:	1f 93       	push	r17
    11e4:	cf 93       	push	r28
    11e6:	df 93       	push	r29
    11e8:	8c 01       	movw	r16, r24
    11ea:	eb 01       	movw	r28, r22
    11ec:	cb 01       	movw	r24, r22
    11ee:	4a 96       	adiw	r24, 0x1a	; 26
    11f0:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    11f4:	6c 01       	movw	r12, r24
    11f6:	e1 2c       	mov	r14, r1
    11f8:	f1 2c       	mov	r15, r1
    11fa:	f8 01       	movw	r30, r16
    11fc:	80 81       	ld	r24, Z
    11fe:	83 30       	cpi	r24, 0x03	; 3
    1200:	69 f4       	brne	.+26     	; 0x121c <ld_clust+0x44>
    1202:	ce 01       	movw	r24, r28
    1204:	44 96       	adiw	r24, 0x14	; 20
    1206:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    120a:	a0 e0       	ldi	r26, 0x00	; 0
    120c:	b0 e0       	ldi	r27, 0x00	; 0
    120e:	dc 01       	movw	r26, r24
    1210:	99 27       	eor	r25, r25
    1212:	88 27       	eor	r24, r24
    1214:	c8 2a       	or	r12, r24
    1216:	d9 2a       	or	r13, r25
    1218:	ea 2a       	or	r14, r26
    121a:	fb 2a       	or	r15, r27
    121c:	c7 01       	movw	r24, r14
    121e:	b6 01       	movw	r22, r12
    1220:	df 91       	pop	r29
    1222:	cf 91       	pop	r28
    1224:	1f 91       	pop	r17
    1226:	0f 91       	pop	r16
    1228:	ff 90       	pop	r15
    122a:	ef 90       	pop	r14
    122c:	df 90       	pop	r13
    122e:	cf 90       	pop	r12
    1230:	08 95       	ret

00001232 <st_clust>:
    1232:	cf 92       	push	r12
    1234:	df 92       	push	r13
    1236:	ef 92       	push	r14
    1238:	ff 92       	push	r15
    123a:	0f 93       	push	r16
    123c:	1f 93       	push	r17
    123e:	cf 93       	push	r28
    1240:	df 93       	push	r29
    1242:	8c 01       	movw	r16, r24
    1244:	eb 01       	movw	r28, r22
    1246:	69 01       	movw	r12, r18
    1248:	7a 01       	movw	r14, r20
    124a:	b9 01       	movw	r22, r18
    124c:	ce 01       	movw	r24, r28
    124e:	4a 96       	adiw	r24, 0x1a	; 26
    1250:	0e 94 84 08 	call	0x1108	; 0x1108 <st_word>
    1254:	f8 01       	movw	r30, r16
    1256:	80 81       	ld	r24, Z
    1258:	83 30       	cpi	r24, 0x03	; 3
    125a:	39 f4       	brne	.+14     	; 0x126a <st_clust+0x38>
    125c:	b7 01       	movw	r22, r14
    125e:	88 27       	eor	r24, r24
    1260:	99 27       	eor	r25, r25
    1262:	ce 01       	movw	r24, r28
    1264:	44 96       	adiw	r24, 0x14	; 20
    1266:	0e 94 84 08 	call	0x1108	; 0x1108 <st_word>
    126a:	df 91       	pop	r29
    126c:	cf 91       	pop	r28
    126e:	1f 91       	pop	r17
    1270:	0f 91       	pop	r16
    1272:	ff 90       	pop	r15
    1274:	ef 90       	pop	r14
    1276:	df 90       	pop	r13
    1278:	cf 90       	pop	r12
    127a:	08 95       	ret

0000127c <get_ldnumber>:
    127c:	cf 93       	push	r28
    127e:	df 93       	push	r29
    1280:	ec 01       	movw	r28, r24
    1282:	a8 81       	ld	r26, Y
    1284:	b9 81       	ldd	r27, Y+1	; 0x01
    1286:	10 97       	sbiw	r26, 0x00	; 0
    1288:	31 f1       	breq	.+76     	; 0x12d6 <get_ldnumber+0x5a>
    128a:	fd 01       	movw	r30, r26
    128c:	9f 01       	movw	r18, r30
    128e:	2f 5f       	subi	r18, 0xFF	; 255
    1290:	3f 4f       	sbci	r19, 0xFF	; 255
    1292:	90 81       	ld	r25, Z
    1294:	91 32       	cpi	r25, 0x21	; 33
    1296:	18 f0       	brcs	.+6      	; 0x129e <get_ldnumber+0x22>
    1298:	f9 01       	movw	r30, r18
    129a:	9a 33       	cpi	r25, 0x3A	; 58
    129c:	b9 f7       	brne	.-18     	; 0x128c <get_ldnumber+0x10>
    129e:	9a 33       	cpi	r25, 0x3A	; 58
    12a0:	e9 f4       	brne	.+58     	; 0x12dc <get_ldnumber+0x60>
    12a2:	4c 91       	ld	r20, X
    12a4:	80 ed       	ldi	r24, 0xD0	; 208
    12a6:	84 0f       	add	r24, r20
    12a8:	8a 30       	cpi	r24, 0x0A	; 10
    12aa:	40 f4       	brcc	.+16     	; 0x12bc <get_ldnumber+0x40>
    12ac:	12 96       	adiw	r26, 0x02	; 2
    12ae:	2a 17       	cp	r18, r26
    12b0:	3b 07       	cpc	r19, r27
    12b2:	39 f4       	brne	.+14     	; 0x12c2 <get_ldnumber+0x46>
    12b4:	50 e0       	ldi	r21, 0x00	; 0
    12b6:	40 53       	subi	r20, 0x30	; 48
    12b8:	51 09       	sbc	r21, r1
    12ba:	05 c0       	rjmp	.+10     	; 0x12c6 <get_ldnumber+0x4a>
    12bc:	41 e0       	ldi	r20, 0x01	; 1
    12be:	50 e0       	ldi	r21, 0x00	; 0
    12c0:	02 c0       	rjmp	.+4      	; 0x12c6 <get_ldnumber+0x4a>
    12c2:	41 e0       	ldi	r20, 0x01	; 1
    12c4:	50 e0       	ldi	r21, 0x00	; 0
    12c6:	14 16       	cp	r1, r20
    12c8:	15 06       	cpc	r1, r21
    12ca:	5c f0       	brlt	.+22     	; 0x12e2 <get_ldnumber+0x66>
    12cc:	39 83       	std	Y+1, r19	; 0x01
    12ce:	28 83       	st	Y, r18
    12d0:	84 2f       	mov	r24, r20
    12d2:	95 2f       	mov	r25, r21
    12d4:	08 c0       	rjmp	.+16     	; 0x12e6 <get_ldnumber+0x6a>
    12d6:	8f ef       	ldi	r24, 0xFF	; 255
    12d8:	9f ef       	ldi	r25, 0xFF	; 255
    12da:	05 c0       	rjmp	.+10     	; 0x12e6 <get_ldnumber+0x6a>
    12dc:	80 e0       	ldi	r24, 0x00	; 0
    12de:	90 e0       	ldi	r25, 0x00	; 0
    12e0:	02 c0       	rjmp	.+4      	; 0x12e6 <get_ldnumber+0x6a>
    12e2:	8f ef       	ldi	r24, 0xFF	; 255
    12e4:	9f ef       	ldi	r25, 0xFF	; 255
    12e6:	df 91       	pop	r29
    12e8:	cf 91       	pop	r28
    12ea:	08 95       	ret

000012ec <ilog10>:
    12ec:	cf 92       	push	r12
    12ee:	df 92       	push	r13
    12f0:	ef 92       	push	r14
    12f2:	ff 92       	push	r15
    12f4:	cf 93       	push	r28
    12f6:	df 93       	push	r29
    12f8:	6b 01       	movw	r12, r22
    12fa:	7c 01       	movw	r14, r24
    12fc:	c0 e0       	ldi	r28, 0x00	; 0
    12fe:	d0 e0       	ldi	r29, 0x00	; 0
    1300:	21 c0       	rjmp	.+66     	; 0x1344 <ilog10+0x58>
    1302:	20 e0       	ldi	r18, 0x00	; 0
    1304:	30 e5       	ldi	r19, 0x50	; 80
    1306:	43 ec       	ldi	r20, 0xC3	; 195
    1308:	57 e4       	ldi	r21, 0x47	; 71
    130a:	c7 01       	movw	r24, r14
    130c:	b6 01       	movw	r22, r12
    130e:	0e 94 57 22 	call	0x44ae	; 0x44ae <__gesf2>
    1312:	88 23       	and	r24, r24
    1314:	64 f0       	brlt	.+24     	; 0x132e <ilog10+0x42>
    1316:	20 e0       	ldi	r18, 0x00	; 0
    1318:	30 e5       	ldi	r19, 0x50	; 80
    131a:	43 ec       	ldi	r20, 0xC3	; 195
    131c:	57 e4       	ldi	r21, 0x47	; 71
    131e:	c7 01       	movw	r24, r14
    1320:	b6 01       	movw	r22, r12
    1322:	0e 94 fd 20 	call	0x41fa	; 0x41fa <__divsf3>
    1326:	6b 01       	movw	r12, r22
    1328:	7c 01       	movw	r14, r24
    132a:	25 96       	adiw	r28, 0x05	; 5
    132c:	0b c0       	rjmp	.+22     	; 0x1344 <ilog10+0x58>
    132e:	20 e0       	ldi	r18, 0x00	; 0
    1330:	30 e0       	ldi	r19, 0x00	; 0
    1332:	40 e2       	ldi	r20, 0x20	; 32
    1334:	51 e4       	ldi	r21, 0x41	; 65
    1336:	c7 01       	movw	r24, r14
    1338:	b6 01       	movw	r22, r12
    133a:	0e 94 fd 20 	call	0x41fa	; 0x41fa <__divsf3>
    133e:	6b 01       	movw	r12, r22
    1340:	7c 01       	movw	r14, r24
    1342:	21 96       	adiw	r28, 0x01	; 1
    1344:	20 e0       	ldi	r18, 0x00	; 0
    1346:	30 e0       	ldi	r19, 0x00	; 0
    1348:	40 e2       	ldi	r20, 0x20	; 32
    134a:	51 e4       	ldi	r21, 0x41	; 65
    134c:	c7 01       	movw	r24, r14
    134e:	b6 01       	movw	r22, r12
    1350:	0e 94 57 22 	call	0x44ae	; 0x44ae <__gesf2>
    1354:	88 23       	and	r24, r24
    1356:	ac f6       	brge	.-86     	; 0x1302 <ilog10+0x16>
    1358:	21 c0       	rjmp	.+66     	; 0x139c <ilog10+0xb0>
    135a:	2c ea       	ldi	r18, 0xAC	; 172
    135c:	35 ec       	ldi	r19, 0xC5	; 197
    135e:	47 e2       	ldi	r20, 0x27	; 39
    1360:	57 e3       	ldi	r21, 0x37	; 55
    1362:	c7 01       	movw	r24, r14
    1364:	b6 01       	movw	r22, r12
    1366:	0e 94 f8 20 	call	0x41f0	; 0x41f0 <__cmpsf2>
    136a:	88 23       	and	r24, r24
    136c:	64 f4       	brge	.+24     	; 0x1386 <ilog10+0x9a>
    136e:	20 e0       	ldi	r18, 0x00	; 0
    1370:	30 e5       	ldi	r19, 0x50	; 80
    1372:	43 ec       	ldi	r20, 0xC3	; 195
    1374:	57 e4       	ldi	r21, 0x47	; 71
    1376:	c7 01       	movw	r24, r14
    1378:	b6 01       	movw	r22, r12
    137a:	0e 94 5c 22 	call	0x44b8	; 0x44b8 <__mulsf3>
    137e:	6b 01       	movw	r12, r22
    1380:	7c 01       	movw	r14, r24
    1382:	25 97       	sbiw	r28, 0x05	; 5
    1384:	0b c0       	rjmp	.+22     	; 0x139c <ilog10+0xb0>
    1386:	20 e0       	ldi	r18, 0x00	; 0
    1388:	30 e0       	ldi	r19, 0x00	; 0
    138a:	40 e2       	ldi	r20, 0x20	; 32
    138c:	51 e4       	ldi	r21, 0x41	; 65
    138e:	c7 01       	movw	r24, r14
    1390:	b6 01       	movw	r22, r12
    1392:	0e 94 5c 22 	call	0x44b8	; 0x44b8 <__mulsf3>
    1396:	6b 01       	movw	r12, r22
    1398:	7c 01       	movw	r14, r24
    139a:	21 97       	sbiw	r28, 0x01	; 1
    139c:	20 e0       	ldi	r18, 0x00	; 0
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	40 e8       	ldi	r20, 0x80	; 128
    13a2:	5f e3       	ldi	r21, 0x3F	; 63
    13a4:	c7 01       	movw	r24, r14
    13a6:	b6 01       	movw	r22, r12
    13a8:	0e 94 f8 20 	call	0x41f0	; 0x41f0 <__cmpsf2>
    13ac:	88 23       	and	r24, r24
    13ae:	ac f2       	brlt	.-86     	; 0x135a <ilog10+0x6e>
    13b0:	ce 01       	movw	r24, r28
    13b2:	df 91       	pop	r29
    13b4:	cf 91       	pop	r28
    13b6:	ff 90       	pop	r15
    13b8:	ef 90       	pop	r14
    13ba:	df 90       	pop	r13
    13bc:	cf 90       	pop	r12
    13be:	08 95       	ret

000013c0 <i10x>:
    13c0:	cf 93       	push	r28
    13c2:	df 93       	push	r29
    13c4:	ec 01       	movw	r28, r24
    13c6:	60 e0       	ldi	r22, 0x00	; 0
    13c8:	70 e0       	ldi	r23, 0x00	; 0
    13ca:	80 e8       	ldi	r24, 0x80	; 128
    13cc:	9f e3       	ldi	r25, 0x3F	; 63
    13ce:	12 c0       	rjmp	.+36     	; 0x13f4 <i10x+0x34>
    13d0:	c5 30       	cpi	r28, 0x05	; 5
    13d2:	d1 05       	cpc	r29, r1
    13d4:	44 f0       	brlt	.+16     	; 0x13e6 <i10x+0x26>
    13d6:	20 e0       	ldi	r18, 0x00	; 0
    13d8:	30 e5       	ldi	r19, 0x50	; 80
    13da:	43 ec       	ldi	r20, 0xC3	; 195
    13dc:	57 e4       	ldi	r21, 0x47	; 71
    13de:	0e 94 5c 22 	call	0x44b8	; 0x44b8 <__mulsf3>
    13e2:	25 97       	sbiw	r28, 0x05	; 5
    13e4:	07 c0       	rjmp	.+14     	; 0x13f4 <i10x+0x34>
    13e6:	20 e0       	ldi	r18, 0x00	; 0
    13e8:	30 e0       	ldi	r19, 0x00	; 0
    13ea:	40 e2       	ldi	r20, 0x20	; 32
    13ec:	51 e4       	ldi	r21, 0x41	; 65
    13ee:	0e 94 5c 22 	call	0x44b8	; 0x44b8 <__mulsf3>
    13f2:	21 97       	sbiw	r28, 0x01	; 1
    13f4:	1c 16       	cp	r1, r28
    13f6:	1d 06       	cpc	r1, r29
    13f8:	5c f3       	brlt	.-42     	; 0x13d0 <i10x+0x10>
    13fa:	13 c0       	rjmp	.+38     	; 0x1422 <i10x+0x62>
    13fc:	cc 3f       	cpi	r28, 0xFC	; 252
    13fe:	2f ef       	ldi	r18, 0xFF	; 255
    1400:	d2 07       	cpc	r29, r18
    1402:	44 f4       	brge	.+16     	; 0x1414 <i10x+0x54>
    1404:	20 e0       	ldi	r18, 0x00	; 0
    1406:	30 e5       	ldi	r19, 0x50	; 80
    1408:	43 ec       	ldi	r20, 0xC3	; 195
    140a:	57 e4       	ldi	r21, 0x47	; 71
    140c:	0e 94 fd 20 	call	0x41fa	; 0x41fa <__divsf3>
    1410:	25 96       	adiw	r28, 0x05	; 5
    1412:	07 c0       	rjmp	.+14     	; 0x1422 <i10x+0x62>
    1414:	20 e0       	ldi	r18, 0x00	; 0
    1416:	30 e0       	ldi	r19, 0x00	; 0
    1418:	40 e2       	ldi	r20, 0x20	; 32
    141a:	51 e4       	ldi	r21, 0x41	; 65
    141c:	0e 94 fd 20 	call	0x41fa	; 0x41fa <__divsf3>
    1420:	21 96       	adiw	r28, 0x01	; 1
    1422:	dd 23       	and	r29, r29
    1424:	5c f3       	brlt	.-42     	; 0x13fc <i10x+0x3c>
    1426:	df 91       	pop	r29
    1428:	cf 91       	pop	r28
    142a:	08 95       	ret

0000142c <ftoa>:
    142c:	2f 92       	push	r2
    142e:	3f 92       	push	r3
    1430:	4f 92       	push	r4
    1432:	5f 92       	push	r5
    1434:	6f 92       	push	r6
    1436:	7f 92       	push	r7
    1438:	8f 92       	push	r8
    143a:	9f 92       	push	r9
    143c:	af 92       	push	r10
    143e:	bf 92       	push	r11
    1440:	cf 92       	push	r12
    1442:	df 92       	push	r13
    1444:	ef 92       	push	r14
    1446:	ff 92       	push	r15
    1448:	0f 93       	push	r16
    144a:	1f 93       	push	r17
    144c:	cf 93       	push	r28
    144e:	df 93       	push	r29
    1450:	cd b7       	in	r28, 0x3d	; 61
    1452:	de b7       	in	r29, 0x3e	; 62
    1454:	28 97       	sbiw	r28, 0x08	; 8
    1456:	0f b6       	in	r0, 0x3f	; 63
    1458:	f8 94       	cli
    145a:	de bf       	out	0x3e, r29	; 62
    145c:	0f be       	out	0x3f, r0	; 63
    145e:	cd bf       	out	0x3d, r28	; 61
    1460:	7c 01       	movw	r14, r24
    1462:	4a 01       	movw	r8, r20
    1464:	5b 01       	movw	r10, r22
    1466:	69 01       	movw	r12, r18
    1468:	30 2e       	mov	r3, r16
    146a:	9a 01       	movw	r18, r20
    146c:	ab 01       	movw	r20, r22
    146e:	c5 01       	movw	r24, r10
    1470:	b4 01       	movw	r22, r8
    1472:	0e 94 c9 22 	call	0x4592	; 0x4592 <__unordsf2>
    1476:	81 11       	cpse	r24, r1
    1478:	44 c1       	rjmp	.+648    	; 0x1702 <ftoa+0x2d6>
    147a:	dd 20       	and	r13, r13
    147c:	2c f4       	brge	.+10     	; 0x1488 <ftoa+0x5c>
    147e:	0f 2e       	mov	r0, r31
    1480:	f6 e0       	ldi	r31, 0x06	; 6
    1482:	cf 2e       	mov	r12, r31
    1484:	d1 2c       	mov	r13, r1
    1486:	f0 2d       	mov	r31, r0
    1488:	20 e0       	ldi	r18, 0x00	; 0
    148a:	30 e0       	ldi	r19, 0x00	; 0
    148c:	a9 01       	movw	r20, r18
    148e:	c5 01       	movw	r24, r10
    1490:	b4 01       	movw	r22, r8
    1492:	0e 94 f8 20 	call	0x41f0	; 0x41f0 <__cmpsf2>
    1496:	88 23       	and	r24, r24
    1498:	74 f4       	brge	.+28     	; 0x14b6 <ftoa+0x8a>
    149a:	a5 01       	movw	r20, r10
    149c:	94 01       	movw	r18, r8
    149e:	60 e0       	ldi	r22, 0x00	; 0
    14a0:	70 e0       	ldi	r23, 0x00	; 0
    14a2:	cb 01       	movw	r24, r22
    14a4:	0e 94 8b 20 	call	0x4116	; 0x4116 <__subsf3>
    14a8:	4b 01       	movw	r8, r22
    14aa:	5c 01       	movw	r10, r24
    14ac:	0f 2e       	mov	r0, r31
    14ae:	fd e2       	ldi	r31, 0x2D	; 45
    14b0:	2f 2e       	mov	r2, r31
    14b2:	f0 2d       	mov	r31, r0
    14b4:	04 c0       	rjmp	.+8      	; 0x14be <ftoa+0x92>
    14b6:	0f 2e       	mov	r0, r31
    14b8:	fb e2       	ldi	r31, 0x2B	; 43
    14ba:	2f 2e       	mov	r2, r31
    14bc:	f0 2d       	mov	r31, r0
    14be:	24 01       	movw	r4, r8
    14c0:	35 01       	movw	r6, r10
    14c2:	e8 94       	clt
    14c4:	77 f8       	bld	r7, 7
    14c6:	2f ef       	ldi	r18, 0xFF	; 255
    14c8:	3f ef       	ldi	r19, 0xFF	; 255
    14ca:	4f e7       	ldi	r20, 0x7F	; 127
    14cc:	5f e7       	ldi	r21, 0x7F	; 127
    14ce:	c3 01       	movw	r24, r6
    14d0:	b2 01       	movw	r22, r4
    14d2:	0e 94 c9 22 	call	0x4592	; 0x4592 <__unordsf2>
    14d6:	81 11       	cpse	r24, r1
    14d8:	0b c0       	rjmp	.+22     	; 0x14f0 <ftoa+0xc4>
    14da:	2f ef       	ldi	r18, 0xFF	; 255
    14dc:	3f ef       	ldi	r19, 0xFF	; 255
    14de:	4f e7       	ldi	r20, 0x7F	; 127
    14e0:	5f e7       	ldi	r21, 0x7F	; 127
    14e2:	c3 01       	movw	r24, r6
    14e4:	b2 01       	movw	r22, r4
    14e6:	0e 94 f8 20 	call	0x41f0	; 0x41f0 <__cmpsf2>
    14ea:	18 16       	cp	r1, r24
    14ec:	0c f4       	brge	.+2      	; 0x14f0 <ftoa+0xc4>
    14ee:	6f c0       	rjmp	.+222    	; 0x15ce <ftoa+0x1a2>
    14f0:	26 e6       	ldi	r18, 0x66	; 102
    14f2:	32 12       	cpse	r3, r18
    14f4:	27 c0       	rjmp	.+78     	; 0x1544 <ftoa+0x118>
    14f6:	88 27       	eor	r24, r24
    14f8:	99 27       	eor	r25, r25
    14fa:	8c 19       	sub	r24, r12
    14fc:	9d 09       	sbc	r25, r13
    14fe:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <i10x>
    1502:	20 e0       	ldi	r18, 0x00	; 0
    1504:	30 e0       	ldi	r19, 0x00	; 0
    1506:	40 e0       	ldi	r20, 0x00	; 0
    1508:	5f e3       	ldi	r21, 0x3F	; 63
    150a:	0e 94 5c 22 	call	0x44b8	; 0x44b8 <__mulsf3>
    150e:	9b 01       	movw	r18, r22
    1510:	ac 01       	movw	r20, r24
    1512:	c5 01       	movw	r24, r10
    1514:	b4 01       	movw	r22, r8
    1516:	0e 94 8c 20 	call	0x4118	; 0x4118 <__addsf3>
    151a:	4b 01       	movw	r8, r22
    151c:	5c 01       	movw	r10, r24
    151e:	0e 94 76 09 	call	0x12ec	; 0x12ec <ilog10>
    1522:	8c 01       	movw	r16, r24
    1524:	99 23       	and	r25, r25
    1526:	14 f4       	brge	.+4      	; 0x152c <ftoa+0x100>
    1528:	00 e0       	ldi	r16, 0x00	; 0
    152a:	10 e0       	ldi	r17, 0x00	; 0
    152c:	c6 01       	movw	r24, r12
    152e:	80 0f       	add	r24, r16
    1530:	91 1f       	adc	r25, r17
    1532:	03 96       	adiw	r24, 0x03	; 3
    1534:	80 97       	sbiw	r24, 0x20	; 32
    1536:	0c f0       	brlt	.+2      	; 0x153a <ftoa+0x10e>
    1538:	53 c0       	rjmp	.+166    	; 0x15e0 <ftoa+0x1b4>
    153a:	18 86       	std	Y+8, r1	; 0x08
    153c:	1f 82       	std	Y+7, r1	; 0x07
    153e:	1e 82       	std	Y+6, r1	; 0x06
    1540:	1d 82       	std	Y+5, r1	; 0x05
    1542:	69 c0       	rjmp	.+210    	; 0x1616 <ftoa+0x1ea>
    1544:	20 e0       	ldi	r18, 0x00	; 0
    1546:	30 e0       	ldi	r19, 0x00	; 0
    1548:	a9 01       	movw	r20, r18
    154a:	c5 01       	movw	r24, r10
    154c:	b4 01       	movw	r22, r8
    154e:	0e 94 f8 20 	call	0x41f0	; 0x41f0 <__cmpsf2>
    1552:	88 23       	and	r24, r24
    1554:	09 f4       	brne	.+2      	; 0x1558 <ftoa+0x12c>
    1556:	4b c0       	rjmp	.+150    	; 0x15ee <ftoa+0x1c2>
    1558:	c5 01       	movw	r24, r10
    155a:	b4 01       	movw	r22, r8
    155c:	0e 94 76 09 	call	0x12ec	; 0x12ec <ilog10>
    1560:	8c 19       	sub	r24, r12
    1562:	9d 09       	sbc	r25, r13
    1564:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <i10x>
    1568:	20 e0       	ldi	r18, 0x00	; 0
    156a:	30 e0       	ldi	r19, 0x00	; 0
    156c:	40 e0       	ldi	r20, 0x00	; 0
    156e:	5f e3       	ldi	r21, 0x3F	; 63
    1570:	0e 94 5c 22 	call	0x44b8	; 0x44b8 <__mulsf3>
    1574:	9b 01       	movw	r18, r22
    1576:	ac 01       	movw	r20, r24
    1578:	c5 01       	movw	r24, r10
    157a:	b4 01       	movw	r22, r8
    157c:	0e 94 8c 20 	call	0x4118	; 0x4118 <__addsf3>
    1580:	4b 01       	movw	r8, r22
    1582:	5c 01       	movw	r10, r24
    1584:	0e 94 76 09 	call	0x12ec	; 0x12ec <ilog10>
    1588:	9e 83       	std	Y+6, r25	; 0x06
    158a:	8d 83       	std	Y+5, r24	; 0x05
    158c:	84 36       	cpi	r24, 0x64	; 100
    158e:	91 05       	cpc	r25, r1
    1590:	ac f5       	brge	.+106    	; 0x15fc <ftoa+0x1d0>
    1592:	c6 01       	movw	r24, r12
    1594:	07 96       	adiw	r24, 0x07	; 7
    1596:	80 97       	sbiw	r24, 0x20	; 32
    1598:	c4 f5       	brge	.+112    	; 0x160a <ftoa+0x1de>
    159a:	8d 81       	ldd	r24, Y+5	; 0x05
    159c:	9e 81       	ldd	r25, Y+6	; 0x06
    159e:	8d 39       	cpi	r24, 0x9D	; 157
    15a0:	9f 4f       	sbci	r25, 0xFF	; 255
    15a2:	24 f4       	brge	.+8      	; 0x15ac <ftoa+0x180>
    15a4:	ed e9       	ldi	r30, 0x9D	; 157
    15a6:	ff ef       	ldi	r31, 0xFF	; 255
    15a8:	fe 83       	std	Y+6, r31	; 0x06
    15aa:	ed 83       	std	Y+5, r30	; 0x05
    15ac:	8d 81       	ldd	r24, Y+5	; 0x05
    15ae:	9e 81       	ldd	r25, Y+6	; 0x06
    15b0:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <i10x>
    15b4:	9b 01       	movw	r18, r22
    15b6:	ac 01       	movw	r20, r24
    15b8:	c5 01       	movw	r24, r10
    15ba:	b4 01       	movw	r22, r8
    15bc:	0e 94 fd 20 	call	0x41fa	; 0x41fa <__divsf3>
    15c0:	4b 01       	movw	r8, r22
    15c2:	5c 01       	movw	r10, r24
    15c4:	18 86       	std	Y+8, r1	; 0x08
    15c6:	1f 82       	std	Y+7, r1	; 0x07
    15c8:	00 e0       	ldi	r16, 0x00	; 0
    15ca:	10 e0       	ldi	r17, 0x00	; 0
    15cc:	24 c0       	rjmp	.+72     	; 0x1616 <ftoa+0x1ea>
    15ce:	22 eb       	ldi	r18, 0xB2	; 178
    15d0:	32 e0       	ldi	r19, 0x02	; 2
    15d2:	38 87       	std	Y+8, r19	; 0x08
    15d4:	2f 83       	std	Y+7, r18	; 0x07
    15d6:	00 e0       	ldi	r16, 0x00	; 0
    15d8:	10 e0       	ldi	r17, 0x00	; 0
    15da:	1e 82       	std	Y+6, r1	; 0x06
    15dc:	1d 82       	std	Y+5, r1	; 0x05
    15de:	1b c0       	rjmp	.+54     	; 0x1616 <ftoa+0x1ea>
    15e0:	86 eb       	ldi	r24, 0xB6	; 182
    15e2:	92 e0       	ldi	r25, 0x02	; 2
    15e4:	98 87       	std	Y+8, r25	; 0x08
    15e6:	8f 83       	std	Y+7, r24	; 0x07
    15e8:	1e 82       	std	Y+6, r1	; 0x06
    15ea:	1d 82       	std	Y+5, r1	; 0x05
    15ec:	14 c0       	rjmp	.+40     	; 0x1616 <ftoa+0x1ea>
    15ee:	18 86       	std	Y+8, r1	; 0x08
    15f0:	1f 82       	std	Y+7, r1	; 0x07
    15f2:	00 e0       	ldi	r16, 0x00	; 0
    15f4:	10 e0       	ldi	r17, 0x00	; 0
    15f6:	1e 82       	std	Y+6, r1	; 0x06
    15f8:	1d 82       	std	Y+5, r1	; 0x05
    15fa:	0d c0       	rjmp	.+26     	; 0x1616 <ftoa+0x1ea>
    15fc:	a6 eb       	ldi	r26, 0xB6	; 182
    15fe:	b2 e0       	ldi	r27, 0x02	; 2
    1600:	b8 87       	std	Y+8, r27	; 0x08
    1602:	af 83       	std	Y+7, r26	; 0x07
    1604:	00 e0       	ldi	r16, 0x00	; 0
    1606:	10 e0       	ldi	r17, 0x00	; 0
    1608:	06 c0       	rjmp	.+12     	; 0x1616 <ftoa+0x1ea>
    160a:	e6 eb       	ldi	r30, 0xB6	; 182
    160c:	f2 e0       	ldi	r31, 0x02	; 2
    160e:	f8 87       	std	Y+8, r31	; 0x08
    1610:	ef 83       	std	Y+7, r30	; 0x07
    1612:	00 e0       	ldi	r16, 0x00	; 0
    1614:	10 e0       	ldi	r17, 0x00	; 0
    1616:	2f 81       	ldd	r18, Y+7	; 0x07
    1618:	38 85       	ldd	r19, Y+8	; 0x08
    161a:	23 2b       	or	r18, r19
    161c:	09 f0       	breq	.+2      	; 0x1620 <ftoa+0x1f4>
    161e:	78 c0       	rjmp	.+240    	; 0x1710 <ftoa+0x2e4>
    1620:	3d e2       	ldi	r19, 0x2D	; 45
    1622:	23 12       	cpse	r2, r19
    1624:	07 c0       	rjmp	.+14     	; 0x1634 <ftoa+0x208>
    1626:	d7 01       	movw	r26, r14
    1628:	2c 92       	st	X, r2
    162a:	f7 01       	movw	r30, r14
    162c:	31 96       	adiw	r30, 0x01	; 1
    162e:	7f 01       	movw	r14, r30
    1630:	01 c0       	rjmp	.+2      	; 0x1634 <ftoa+0x208>
    1632:	7c 01       	movw	r14, r24
    1634:	0f 3f       	cpi	r16, 0xFF	; 255
    1636:	ff ef       	ldi	r31, 0xFF	; 255
    1638:	1f 07       	cpc	r17, r31
    163a:	31 f4       	brne	.+12     	; 0x1648 <ftoa+0x21c>
    163c:	8e e2       	ldi	r24, 0x2E	; 46
    163e:	d7 01       	movw	r26, r14
    1640:	8c 93       	st	X, r24
    1642:	f7 01       	movw	r30, r14
    1644:	31 96       	adiw	r30, 0x01	; 1
    1646:	7f 01       	movw	r14, r30
    1648:	c8 01       	movw	r24, r16
    164a:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <i10x>
    164e:	69 83       	std	Y+1, r22	; 0x01
    1650:	7a 83       	std	Y+2, r23	; 0x02
    1652:	8b 83       	std	Y+3, r24	; 0x03
    1654:	9c 83       	std	Y+4, r25	; 0x04
    1656:	9b 01       	movw	r18, r22
    1658:	ac 01       	movw	r20, r24
    165a:	c5 01       	movw	r24, r10
    165c:	b4 01       	movw	r22, r8
    165e:	0e 94 fd 20 	call	0x41fa	; 0x41fa <__divsf3>
    1662:	0e 94 6f 21 	call	0x42de	; 0x42de <__fixsfsi>
    1666:	2b 01       	movw	r4, r22
    1668:	3c 01       	movw	r6, r24
    166a:	07 2e       	mov	r0, r23
    166c:	00 0c       	add	r0, r0
    166e:	88 0b       	sbc	r24, r24
    1670:	99 0b       	sbc	r25, r25
    1672:	0e 94 a7 21 	call	0x434e	; 0x434e <__floatsisf>
    1676:	29 81       	ldd	r18, Y+1	; 0x01
    1678:	3a 81       	ldd	r19, Y+2	; 0x02
    167a:	4b 81       	ldd	r20, Y+3	; 0x03
    167c:	5c 81       	ldd	r21, Y+4	; 0x04
    167e:	0e 94 5c 22 	call	0x44b8	; 0x44b8 <__mulsf3>
    1682:	9b 01       	movw	r18, r22
    1684:	ac 01       	movw	r20, r24
    1686:	c5 01       	movw	r24, r10
    1688:	b4 01       	movw	r22, r8
    168a:	0e 94 8b 20 	call	0x4116	; 0x4116 <__subsf3>
    168e:	4b 01       	movw	r8, r22
    1690:	5c 01       	movw	r10, r24
    1692:	c7 01       	movw	r24, r14
    1694:	01 96       	adiw	r24, 0x01	; 1
    1696:	20 e3       	ldi	r18, 0x30	; 48
    1698:	24 0d       	add	r18, r4
    169a:	d7 01       	movw	r26, r14
    169c:	2c 93       	st	X, r18
    169e:	01 50       	subi	r16, 0x01	; 1
    16a0:	11 09       	sbc	r17, r1
    16a2:	22 27       	eor	r18, r18
    16a4:	33 27       	eor	r19, r19
    16a6:	2c 19       	sub	r18, r12
    16a8:	3d 09       	sbc	r19, r13
    16aa:	02 17       	cp	r16, r18
    16ac:	13 07       	cpc	r17, r19
    16ae:	0c f6       	brge	.-126    	; 0x1632 <ftoa+0x206>
    16b0:	b6 e6       	ldi	r27, 0x66	; 102
    16b2:	3b 16       	cp	r3, r27
    16b4:	61 f1       	breq	.+88     	; 0x170e <ftoa+0x2e2>
    16b6:	f7 01       	movw	r30, r14
    16b8:	31 82       	std	Z+1, r3	; 0x01
    16ba:	2d 81       	ldd	r18, Y+5	; 0x05
    16bc:	3e 81       	ldd	r19, Y+6	; 0x06
    16be:	33 23       	and	r19, r19
    16c0:	5c f4       	brge	.+22     	; 0x16d8 <ftoa+0x2ac>
    16c2:	31 95       	neg	r19
    16c4:	21 95       	neg	r18
    16c6:	31 09       	sbc	r19, r1
    16c8:	3e 83       	std	Y+6, r19	; 0x06
    16ca:	2d 83       	std	Y+5, r18	; 0x05
    16cc:	33 96       	adiw	r30, 0x03	; 3
    16ce:	8d e2       	ldi	r24, 0x2D	; 45
    16d0:	d7 01       	movw	r26, r14
    16d2:	12 96       	adiw	r26, 0x02	; 2
    16d4:	8c 93       	st	X, r24
    16d6:	06 c0       	rjmp	.+12     	; 0x16e4 <ftoa+0x2b8>
    16d8:	f7 01       	movw	r30, r14
    16da:	33 96       	adiw	r30, 0x03	; 3
    16dc:	8b e2       	ldi	r24, 0x2B	; 43
    16de:	d7 01       	movw	r26, r14
    16e0:	12 96       	adiw	r26, 0x02	; 2
    16e2:	8c 93       	st	X, r24
    16e4:	8d 81       	ldd	r24, Y+5	; 0x05
    16e6:	9e 81       	ldd	r25, Y+6	; 0x06
    16e8:	6a e0       	ldi	r22, 0x0A	; 10
    16ea:	70 e0       	ldi	r23, 0x00	; 0
    16ec:	0e 94 ce 22 	call	0x459c	; 0x459c <__divmodhi4>
    16f0:	60 5d       	subi	r22, 0xD0	; 208
    16f2:	60 83       	st	Z, r22
    16f4:	7f 01       	movw	r14, r30
    16f6:	b2 e0       	ldi	r27, 0x02	; 2
    16f8:	eb 0e       	add	r14, r27
    16fa:	f1 1c       	adc	r15, r1
    16fc:	80 5d       	subi	r24, 0xD0	; 208
    16fe:	81 83       	std	Z+1, r24	; 0x01
    1700:	07 c0       	rjmp	.+14     	; 0x1710 <ftoa+0x2e4>
    1702:	e9 eb       	ldi	r30, 0xB9	; 185
    1704:	f2 e0       	ldi	r31, 0x02	; 2
    1706:	f8 87       	std	Y+8, r31	; 0x08
    1708:	ef 83       	std	Y+7, r30	; 0x07
    170a:	21 2c       	mov	r2, r1
    170c:	01 c0       	rjmp	.+2      	; 0x1710 <ftoa+0x2e4>
    170e:	7c 01       	movw	r14, r24
    1710:	2f 81       	ldd	r18, Y+7	; 0x07
    1712:	38 85       	ldd	r19, Y+8	; 0x08
    1714:	23 2b       	or	r18, r19
    1716:	d1 f0       	breq	.+52     	; 0x174c <ftoa+0x320>
    1718:	22 20       	and	r2, r2
    171a:	29 f0       	breq	.+10     	; 0x1726 <ftoa+0x2fa>
    171c:	d7 01       	movw	r26, r14
    171e:	2c 92       	st	X, r2
    1720:	f7 01       	movw	r30, r14
    1722:	31 96       	adiw	r30, 0x01	; 1
    1724:	7f 01       	movw	r14, r30
    1726:	f7 01       	movw	r30, r14
    1728:	31 96       	adiw	r30, 0x01	; 1
    172a:	af 81       	ldd	r26, Y+7	; 0x07
    172c:	b8 85       	ldd	r27, Y+8	; 0x08
    172e:	8c 91       	ld	r24, X
    1730:	d7 01       	movw	r26, r14
    1732:	8c 93       	st	X, r24
    1734:	af 81       	ldd	r26, Y+7	; 0x07
    1736:	b8 85       	ldd	r27, Y+8	; 0x08
    1738:	11 96       	adiw	r26, 0x01	; 1
    173a:	8c 91       	ld	r24, X
    173c:	11 97       	sbiw	r26, 0x01	; 1
    173e:	7f 01       	movw	r14, r30
    1740:	11 96       	adiw	r26, 0x01	; 1
    1742:	b8 87       	std	Y+8, r27	; 0x08
    1744:	af 83       	std	Y+7, r26	; 0x07
    1746:	81 11       	cpse	r24, r1
    1748:	ee cf       	rjmp	.-36     	; 0x1726 <ftoa+0x2fa>
    174a:	01 c0       	rjmp	.+2      	; 0x174e <ftoa+0x322>
    174c:	f7 01       	movw	r30, r14
    174e:	10 82       	st	Z, r1
    1750:	28 96       	adiw	r28, 0x08	; 8
    1752:	0f b6       	in	r0, 0x3f	; 63
    1754:	f8 94       	cli
    1756:	de bf       	out	0x3e, r29	; 62
    1758:	0f be       	out	0x3f, r0	; 63
    175a:	cd bf       	out	0x3d, r28	; 61
    175c:	df 91       	pop	r29
    175e:	cf 91       	pop	r28
    1760:	1f 91       	pop	r17
    1762:	0f 91       	pop	r16
    1764:	ff 90       	pop	r15
    1766:	ef 90       	pop	r14
    1768:	df 90       	pop	r13
    176a:	cf 90       	pop	r12
    176c:	bf 90       	pop	r11
    176e:	af 90       	pop	r10
    1770:	9f 90       	pop	r9
    1772:	8f 90       	pop	r8
    1774:	7f 90       	pop	r7
    1776:	6f 90       	pop	r6
    1778:	5f 90       	pop	r5
    177a:	4f 90       	pop	r4
    177c:	3f 90       	pop	r3
    177e:	2f 90       	pop	r2
    1780:	08 95       	ret

00001782 <validate>:
    1782:	0f 93       	push	r16
    1784:	1f 93       	push	r17
    1786:	cf 93       	push	r28
    1788:	df 93       	push	r29
    178a:	ec 01       	movw	r28, r24
    178c:	8b 01       	movw	r16, r22
    178e:	89 2b       	or	r24, r25
    1790:	a9 f0       	breq	.+42     	; 0x17bc <validate+0x3a>
    1792:	e8 81       	ld	r30, Y
    1794:	f9 81       	ldd	r31, Y+1	; 0x01
    1796:	30 97       	sbiw	r30, 0x00	; 0
    1798:	99 f0       	breq	.+38     	; 0x17c0 <validate+0x3e>
    179a:	80 81       	ld	r24, Z
    179c:	88 23       	and	r24, r24
    179e:	91 f0       	breq	.+36     	; 0x17c4 <validate+0x42>
    17a0:	2a 81       	ldd	r18, Y+2	; 0x02
    17a2:	3b 81       	ldd	r19, Y+3	; 0x03
    17a4:	86 81       	ldd	r24, Z+6	; 0x06
    17a6:	97 81       	ldd	r25, Z+7	; 0x07
    17a8:	28 17       	cp	r18, r24
    17aa:	39 07       	cpc	r19, r25
    17ac:	69 f4       	brne	.+26     	; 0x17c8 <validate+0x46>
    17ae:	81 81       	ldd	r24, Z+1	; 0x01
    17b0:	0e 94 08 06 	call	0xc10	; 0xc10 <disk_status>
    17b4:	80 ff       	sbrs	r24, 0
    17b6:	0a c0       	rjmp	.+20     	; 0x17cc <validate+0x4a>
    17b8:	89 e0       	ldi	r24, 0x09	; 9
    17ba:	09 c0       	rjmp	.+18     	; 0x17ce <validate+0x4c>
    17bc:	89 e0       	ldi	r24, 0x09	; 9
    17be:	07 c0       	rjmp	.+14     	; 0x17ce <validate+0x4c>
    17c0:	89 e0       	ldi	r24, 0x09	; 9
    17c2:	05 c0       	rjmp	.+10     	; 0x17ce <validate+0x4c>
    17c4:	89 e0       	ldi	r24, 0x09	; 9
    17c6:	03 c0       	rjmp	.+6      	; 0x17ce <validate+0x4c>
    17c8:	89 e0       	ldi	r24, 0x09	; 9
    17ca:	01 c0       	rjmp	.+2      	; 0x17ce <validate+0x4c>
    17cc:	80 e0       	ldi	r24, 0x00	; 0
    17ce:	81 11       	cpse	r24, r1
    17d0:	03 c0       	rjmp	.+6      	; 0x17d8 <validate+0x56>
    17d2:	28 81       	ld	r18, Y
    17d4:	39 81       	ldd	r19, Y+1	; 0x01
    17d6:	02 c0       	rjmp	.+4      	; 0x17dc <validate+0x5a>
    17d8:	20 e0       	ldi	r18, 0x00	; 0
    17da:	30 e0       	ldi	r19, 0x00	; 0
    17dc:	f8 01       	movw	r30, r16
    17de:	31 83       	std	Z+1, r19	; 0x01
    17e0:	20 83       	st	Z, r18
    17e2:	df 91       	pop	r29
    17e4:	cf 91       	pop	r28
    17e6:	1f 91       	pop	r17
    17e8:	0f 91       	pop	r16
    17ea:	08 95       	ret

000017ec <sync_window>:
    17ec:	8f 92       	push	r8
    17ee:	9f 92       	push	r9
    17f0:	af 92       	push	r10
    17f2:	bf 92       	push	r11
    17f4:	ef 92       	push	r14
    17f6:	ff 92       	push	r15
    17f8:	0f 93       	push	r16
    17fa:	1f 93       	push	r17
    17fc:	cf 93       	push	r28
    17fe:	df 93       	push	r29
    1800:	fc 01       	movw	r30, r24
    1802:	24 81       	ldd	r18, Z+4	; 0x04
    1804:	22 23       	and	r18, r18
    1806:	d1 f1       	breq	.+116    	; 0x187c <sync_window+0x90>
    1808:	ec 01       	movw	r28, r24
    180a:	7c 01       	movw	r14, r24
    180c:	f0 e3       	ldi	r31, 0x30	; 48
    180e:	ef 0e       	add	r14, r31
    1810:	f1 1c       	adc	r15, r1
    1812:	2c a5       	ldd	r18, Y+44	; 0x2c
    1814:	3d a5       	ldd	r19, Y+45	; 0x2d
    1816:	4e a5       	ldd	r20, Y+46	; 0x2e
    1818:	5f a5       	ldd	r21, Y+47	; 0x2f
    181a:	01 e0       	ldi	r16, 0x01	; 1
    181c:	10 e0       	ldi	r17, 0x00	; 0
    181e:	b7 01       	movw	r22, r14
    1820:	89 81       	ldd	r24, Y+1	; 0x01
    1822:	0e 94 3f 07 	call	0xe7e	; 0xe7e <disk_write>
    1826:	81 11       	cpse	r24, r1
    1828:	2b c0       	rjmp	.+86     	; 0x1880 <sync_window+0x94>
    182a:	1c 82       	std	Y+4, r1	; 0x04
    182c:	0c a5       	ldd	r16, Y+44	; 0x2c
    182e:	1d a5       	ldd	r17, Y+45	; 0x2d
    1830:	2e a5       	ldd	r18, Y+46	; 0x2e
    1832:	3f a5       	ldd	r19, Y+47	; 0x2f
    1834:	88 a1       	ldd	r24, Y+32	; 0x20
    1836:	99 a1       	ldd	r25, Y+33	; 0x21
    1838:	aa a1       	ldd	r26, Y+34	; 0x22
    183a:	bb a1       	ldd	r27, Y+35	; 0x23
    183c:	48 01       	movw	r8, r16
    183e:	59 01       	movw	r10, r18
    1840:	88 1a       	sub	r8, r24
    1842:	99 0a       	sbc	r9, r25
    1844:	aa 0a       	sbc	r10, r26
    1846:	bb 0a       	sbc	r11, r27
    1848:	88 8d       	ldd	r24, Y+24	; 0x18
    184a:	99 8d       	ldd	r25, Y+25	; 0x19
    184c:	aa 8d       	ldd	r26, Y+26	; 0x1a
    184e:	bb 8d       	ldd	r27, Y+27	; 0x1b
    1850:	88 16       	cp	r8, r24
    1852:	99 06       	cpc	r9, r25
    1854:	aa 06       	cpc	r10, r26
    1856:	bb 06       	cpc	r11, r27
    1858:	a8 f4       	brcc	.+42     	; 0x1884 <sync_window+0x98>
    185a:	6b 81       	ldd	r22, Y+3	; 0x03
    185c:	62 30       	cpi	r22, 0x02	; 2
    185e:	a1 f4       	brne	.+40     	; 0x1888 <sync_window+0x9c>
    1860:	a9 01       	movw	r20, r18
    1862:	98 01       	movw	r18, r16
    1864:	28 0f       	add	r18, r24
    1866:	39 1f       	adc	r19, r25
    1868:	4a 1f       	adc	r20, r26
    186a:	5b 1f       	adc	r21, r27
    186c:	01 e0       	ldi	r16, 0x01	; 1
    186e:	10 e0       	ldi	r17, 0x00	; 0
    1870:	b7 01       	movw	r22, r14
    1872:	89 81       	ldd	r24, Y+1	; 0x01
    1874:	0e 94 3f 07 	call	0xe7e	; 0xe7e <disk_write>
    1878:	80 e0       	ldi	r24, 0x00	; 0
    187a:	07 c0       	rjmp	.+14     	; 0x188a <sync_window+0x9e>
    187c:	80 e0       	ldi	r24, 0x00	; 0
    187e:	05 c0       	rjmp	.+10     	; 0x188a <sync_window+0x9e>
    1880:	81 e0       	ldi	r24, 0x01	; 1
    1882:	03 c0       	rjmp	.+6      	; 0x188a <sync_window+0x9e>
    1884:	80 e0       	ldi	r24, 0x00	; 0
    1886:	01 c0       	rjmp	.+2      	; 0x188a <sync_window+0x9e>
    1888:	80 e0       	ldi	r24, 0x00	; 0
    188a:	df 91       	pop	r29
    188c:	cf 91       	pop	r28
    188e:	1f 91       	pop	r17
    1890:	0f 91       	pop	r16
    1892:	ff 90       	pop	r15
    1894:	ef 90       	pop	r14
    1896:	bf 90       	pop	r11
    1898:	af 90       	pop	r10
    189a:	9f 90       	pop	r9
    189c:	8f 90       	pop	r8
    189e:	08 95       	ret

000018a0 <move_window>:
    18a0:	8f 92       	push	r8
    18a2:	9f 92       	push	r9
    18a4:	af 92       	push	r10
    18a6:	bf 92       	push	r11
    18a8:	ff 92       	push	r15
    18aa:	0f 93       	push	r16
    18ac:	1f 93       	push	r17
    18ae:	cf 93       	push	r28
    18b0:	df 93       	push	r29
    18b2:	ec 01       	movw	r28, r24
    18b4:	4a 01       	movw	r8, r20
    18b6:	5b 01       	movw	r10, r22
    18b8:	8c a5       	ldd	r24, Y+44	; 0x2c
    18ba:	9d a5       	ldd	r25, Y+45	; 0x2d
    18bc:	ae a5       	ldd	r26, Y+46	; 0x2e
    18be:	bf a5       	ldd	r27, Y+47	; 0x2f
    18c0:	84 17       	cp	r24, r20
    18c2:	95 07       	cpc	r25, r21
    18c4:	a6 07       	cpc	r26, r22
    18c6:	b7 07       	cpc	r27, r23
    18c8:	e9 f0       	breq	.+58     	; 0x1904 <move_window+0x64>
    18ca:	ce 01       	movw	r24, r28
    18cc:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <sync_window>
    18d0:	f8 2e       	mov	r15, r24
    18d2:	81 11       	cpse	r24, r1
    18d4:	18 c0       	rjmp	.+48     	; 0x1906 <move_window+0x66>
    18d6:	01 e0       	ldi	r16, 0x01	; 1
    18d8:	10 e0       	ldi	r17, 0x00	; 0
    18da:	a5 01       	movw	r20, r10
    18dc:	94 01       	movw	r18, r8
    18de:	be 01       	movw	r22, r28
    18e0:	60 5d       	subi	r22, 0xD0	; 208
    18e2:	7f 4f       	sbci	r23, 0xFF	; 255
    18e4:	89 81       	ldd	r24, Y+1	; 0x01
    18e6:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <disk_read>
    18ea:	88 23       	and	r24, r24
    18ec:	31 f0       	breq	.+12     	; 0x18fa <move_window+0x5a>
    18ee:	ff 24       	eor	r15, r15
    18f0:	f3 94       	inc	r15
    18f2:	88 24       	eor	r8, r8
    18f4:	8a 94       	dec	r8
    18f6:	98 2c       	mov	r9, r8
    18f8:	54 01       	movw	r10, r8
    18fa:	8c a6       	std	Y+44, r8	; 0x2c
    18fc:	9d a6       	std	Y+45, r9	; 0x2d
    18fe:	ae a6       	std	Y+46, r10	; 0x2e
    1900:	bf a6       	std	Y+47, r11	; 0x2f
    1902:	01 c0       	rjmp	.+2      	; 0x1906 <move_window+0x66>
    1904:	f1 2c       	mov	r15, r1
    1906:	8f 2d       	mov	r24, r15
    1908:	df 91       	pop	r29
    190a:	cf 91       	pop	r28
    190c:	1f 91       	pop	r17
    190e:	0f 91       	pop	r16
    1910:	ff 90       	pop	r15
    1912:	bf 90       	pop	r11
    1914:	af 90       	pop	r10
    1916:	9f 90       	pop	r9
    1918:	8f 90       	pop	r8
    191a:	08 95       	ret

0000191c <check_fs>:
    191c:	ef 92       	push	r14
    191e:	ff 92       	push	r15
    1920:	0f 93       	push	r16
    1922:	1f 93       	push	r17
    1924:	cf 93       	push	r28
    1926:	df 93       	push	r29
    1928:	ec 01       	movw	r28, r24
    192a:	1c 82       	std	Y+4, r1	; 0x04
    192c:	8f ef       	ldi	r24, 0xFF	; 255
    192e:	9f ef       	ldi	r25, 0xFF	; 255
    1930:	dc 01       	movw	r26, r24
    1932:	8c a7       	std	Y+44, r24	; 0x2c
    1934:	9d a7       	std	Y+45, r25	; 0x2d
    1936:	ae a7       	std	Y+46, r26	; 0x2e
    1938:	bf a7       	std	Y+47, r27	; 0x2f
    193a:	ce 01       	movw	r24, r28
    193c:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    1940:	81 11       	cpse	r24, r1
    1942:	75 c0       	rjmp	.+234    	; 0x1a2e <check_fs+0x112>
    1944:	ce 01       	movw	r24, r28
    1946:	82 5d       	subi	r24, 0xD2	; 210
    1948:	9d 4f       	sbci	r25, 0xFD	; 253
    194a:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    194e:	7c 01       	movw	r14, r24
    1950:	88 a9       	ldd	r24, Y+48	; 0x30
    1952:	8b 3e       	cpi	r24, 0xEB	; 235
    1954:	29 f0       	breq	.+10     	; 0x1960 <check_fs+0x44>
    1956:	89 3e       	cpi	r24, 0xE9	; 233
    1958:	19 f0       	breq	.+6      	; 0x1960 <check_fs+0x44>
    195a:	88 3e       	cpi	r24, 0xE8	; 232
    195c:	09 f0       	breq	.+2      	; 0x1960 <check_fs+0x44>
    195e:	5f c0       	rjmp	.+190    	; 0x1a1e <check_fs+0x102>
    1960:	25 e5       	ldi	r18, 0x55	; 85
    1962:	e2 16       	cp	r14, r18
    1964:	2a ea       	ldi	r18, 0xAA	; 170
    1966:	f2 06       	cpc	r15, r18
    1968:	61 f4       	brne	.+24     	; 0x1982 <check_fs+0x66>
    196a:	48 e0       	ldi	r20, 0x08	; 8
    196c:	50 e0       	ldi	r21, 0x00	; 0
    196e:	6d eb       	ldi	r22, 0xBD	; 189
    1970:	72 e0       	ldi	r23, 0x02	; 2
    1972:	ce 01       	movw	r24, r28
    1974:	8e 57       	subi	r24, 0x7E	; 126
    1976:	9f 4f       	sbci	r25, 0xFF	; 255
    1978:	0e 94 d7 23 	call	0x47ae	; 0x47ae <memcmp>
    197c:	89 2b       	or	r24, r25
    197e:	09 f4       	brne	.+2      	; 0x1982 <check_fs+0x66>
    1980:	59 c0       	rjmp	.+178    	; 0x1a34 <check_fs+0x118>
    1982:	ce 01       	movw	r24, r28
    1984:	cb 96       	adiw	r24, 0x3b	; 59
    1986:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    198a:	2d ad       	ldd	r18, Y+61	; 0x3d
    198c:	8c 01       	movw	r16, r24
    198e:	01 50       	subi	r16, 0x01	; 1
    1990:	11 09       	sbc	r17, r1
    1992:	08 23       	and	r16, r24
    1994:	19 23       	and	r17, r25
    1996:	01 15       	cp	r16, r1
    1998:	11 05       	cpc	r17, r1
    199a:	09 f0       	breq	.+2      	; 0x199e <check_fs+0x82>
    199c:	40 c0       	rjmp	.+128    	; 0x1a1e <check_fs+0x102>
    199e:	81 15       	cp	r24, r1
    19a0:	32 e0       	ldi	r19, 0x02	; 2
    19a2:	93 07       	cpc	r25, r19
    19a4:	e0 f1       	brcs	.+120    	; 0x1a1e <check_fs+0x102>
    19a6:	81 30       	cpi	r24, 0x01	; 1
    19a8:	92 40       	sbci	r25, 0x02	; 2
    19aa:	c8 f5       	brcc	.+114    	; 0x1a1e <check_fs+0x102>
    19ac:	22 23       	and	r18, r18
    19ae:	b9 f1       	breq	.+110    	; 0x1a1e <check_fs+0x102>
    19b0:	82 2f       	mov	r24, r18
    19b2:	90 e0       	ldi	r25, 0x00	; 0
    19b4:	9c 01       	movw	r18, r24
    19b6:	21 50       	subi	r18, 0x01	; 1
    19b8:	31 09       	sbc	r19, r1
    19ba:	82 23       	and	r24, r18
    19bc:	93 23       	and	r25, r19
    19be:	89 2b       	or	r24, r25
    19c0:	71 f5       	brne	.+92     	; 0x1a1e <check_fs+0x102>
    19c2:	ce 01       	movw	r24, r28
    19c4:	ce 96       	adiw	r24, 0x3e	; 62
    19c6:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    19ca:	89 2b       	or	r24, r25
    19cc:	41 f1       	breq	.+80     	; 0x1a1e <check_fs+0x102>
    19ce:	fe 01       	movw	r30, r28
    19d0:	e0 5c       	subi	r30, 0xC0	; 192
    19d2:	ff 4f       	sbci	r31, 0xFF	; 255
    19d4:	80 81       	ld	r24, Z
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	01 97       	sbiw	r24, 0x01	; 1
    19da:	02 97       	sbiw	r24, 0x02	; 2
    19dc:	00 f5       	brcc	.+64     	; 0x1a1e <check_fs+0x102>
    19de:	ce 01       	movw	r24, r28
    19e0:	8f 5b       	subi	r24, 0xBF	; 191
    19e2:	9f 4f       	sbci	r25, 0xFF	; 255
    19e4:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    19e8:	89 2b       	or	r24, r25
    19ea:	c9 f0       	breq	.+50     	; 0x1a1e <check_fs+0x102>
    19ec:	ce 01       	movw	r24, r28
    19ee:	8d 5b       	subi	r24, 0xBD	; 189
    19f0:	9f 4f       	sbci	r25, 0xFF	; 255
    19f2:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    19f6:	80 38       	cpi	r24, 0x80	; 128
    19f8:	91 05       	cpc	r25, r1
    19fa:	50 f4       	brcc	.+20     	; 0x1a10 <check_fs+0xf4>
    19fc:	ce 01       	movw	r24, r28
    19fe:	80 5b       	subi	r24, 0xB0	; 176
    1a00:	9f 4f       	sbci	r25, 0xFF	; 255
    1a02:	0e 94 69 08 	call	0x10d2	; 0x10d2 <ld_dword>
    1a06:	61 15       	cp	r22, r1
    1a08:	71 05       	cpc	r23, r1
    1a0a:	81 40       	sbci	r24, 0x01	; 1
    1a0c:	91 05       	cpc	r25, r1
    1a0e:	38 f0       	brcs	.+14     	; 0x1a1e <check_fs+0x102>
    1a10:	ce 01       	movw	r24, r28
    1a12:	8a 5b       	subi	r24, 0xBA	; 186
    1a14:	9f 4f       	sbci	r25, 0xFF	; 255
    1a16:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    1a1a:	89 2b       	or	r24, r25
    1a1c:	81 f4       	brne	.+32     	; 0x1a3e <check_fs+0x122>
    1a1e:	35 e5       	ldi	r19, 0x55	; 85
    1a20:	e3 16       	cp	r14, r19
    1a22:	3a ea       	ldi	r19, 0xAA	; 170
    1a24:	f3 06       	cpc	r15, r19
    1a26:	49 f4       	brne	.+18     	; 0x1a3a <check_fs+0x11e>
    1a28:	02 e0       	ldi	r16, 0x02	; 2
    1a2a:	10 e0       	ldi	r17, 0x00	; 0
    1a2c:	08 c0       	rjmp	.+16     	; 0x1a3e <check_fs+0x122>
    1a2e:	04 e0       	ldi	r16, 0x04	; 4
    1a30:	10 e0       	ldi	r17, 0x00	; 0
    1a32:	05 c0       	rjmp	.+10     	; 0x1a3e <check_fs+0x122>
    1a34:	00 e0       	ldi	r16, 0x00	; 0
    1a36:	10 e0       	ldi	r17, 0x00	; 0
    1a38:	02 c0       	rjmp	.+4      	; 0x1a3e <check_fs+0x122>
    1a3a:	03 e0       	ldi	r16, 0x03	; 3
    1a3c:	10 e0       	ldi	r17, 0x00	; 0
    1a3e:	c8 01       	movw	r24, r16
    1a40:	df 91       	pop	r29
    1a42:	cf 91       	pop	r28
    1a44:	1f 91       	pop	r17
    1a46:	0f 91       	pop	r16
    1a48:	ff 90       	pop	r15
    1a4a:	ef 90       	pop	r14
    1a4c:	08 95       	ret

00001a4e <find_volume>:
    1a4e:	cf 92       	push	r12
    1a50:	df 92       	push	r13
    1a52:	ef 92       	push	r14
    1a54:	ff 92       	push	r15
    1a56:	0f 93       	push	r16
    1a58:	1f 93       	push	r17
    1a5a:	cf 93       	push	r28
    1a5c:	df 93       	push	r29
    1a5e:	cd b7       	in	r28, 0x3d	; 61
    1a60:	de b7       	in	r29, 0x3e	; 62
    1a62:	60 97       	sbiw	r28, 0x10	; 16
    1a64:	0f b6       	in	r0, 0x3f	; 63
    1a66:	f8 94       	cli
    1a68:	de bf       	out	0x3e, r29	; 62
    1a6a:	0f be       	out	0x3f, r0	; 63
    1a6c:	cd bf       	out	0x3d, r28	; 61
    1a6e:	6c 01       	movw	r12, r24
    1a70:	7b 01       	movw	r14, r22
    1a72:	40 e0       	ldi	r20, 0x00	; 0
    1a74:	50 e0       	ldi	r21, 0x00	; 0
    1a76:	ba 01       	movw	r22, r20
    1a78:	0e 94 8e 0c 	call	0x191c	; 0x191c <check_fs>
    1a7c:	82 30       	cpi	r24, 0x02	; 2
    1a7e:	91 05       	cpc	r25, r1
    1a80:	59 f1       	breq	.+86     	; 0x1ad8 <find_volume+0x8a>
    1a82:	08 f0       	brcs	.+2      	; 0x1a86 <find_volume+0x38>
    1a84:	5c c0       	rjmp	.+184    	; 0x1b3e <find_volume+0xf0>
    1a86:	e1 14       	cp	r14, r1
    1a88:	f1 04       	cpc	r15, r1
    1a8a:	09 f4       	brne	.+2      	; 0x1a8e <find_volume+0x40>
    1a8c:	58 c0       	rjmp	.+176    	; 0x1b3e <find_volume+0xf0>
    1a8e:	00 e0       	ldi	r16, 0x00	; 0
    1a90:	10 e0       	ldi	r17, 0x00	; 0
    1a92:	24 c0       	rjmp	.+72     	; 0x1adc <find_volume+0x8e>
    1a94:	c8 01       	movw	r24, r16
    1a96:	82 95       	swap	r24
    1a98:	92 95       	swap	r25
    1a9a:	90 7f       	andi	r25, 0xF0	; 240
    1a9c:	98 27       	eor	r25, r24
    1a9e:	80 7f       	andi	r24, 0xF0	; 240
    1aa0:	98 27       	eor	r25, r24
    1aa2:	8a 53       	subi	r24, 0x3A	; 58
    1aa4:	9e 4f       	sbci	r25, 0xFE	; 254
    1aa6:	96 01       	movw	r18, r12
    1aa8:	20 5d       	subi	r18, 0xD0	; 208
    1aaa:	3f 4f       	sbci	r19, 0xFF	; 255
    1aac:	82 0f       	add	r24, r18
    1aae:	93 1f       	adc	r25, r19
    1ab0:	0e 94 69 08 	call	0x10d2	; 0x10d2 <ld_dword>
    1ab4:	f8 01       	movw	r30, r16
    1ab6:	ee 0f       	add	r30, r30
    1ab8:	ff 1f       	adc	r31, r31
    1aba:	ee 0f       	add	r30, r30
    1abc:	ff 1f       	adc	r31, r31
    1abe:	21 e0       	ldi	r18, 0x01	; 1
    1ac0:	30 e0       	ldi	r19, 0x00	; 0
    1ac2:	2c 0f       	add	r18, r28
    1ac4:	3d 1f       	adc	r19, r29
    1ac6:	e2 0f       	add	r30, r18
    1ac8:	f3 1f       	adc	r31, r19
    1aca:	60 83       	st	Z, r22
    1acc:	71 83       	std	Z+1, r23	; 0x01
    1ace:	82 83       	std	Z+2, r24	; 0x02
    1ad0:	93 83       	std	Z+3, r25	; 0x03
    1ad2:	0f 5f       	subi	r16, 0xFF	; 255
    1ad4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ad6:	02 c0       	rjmp	.+4      	; 0x1adc <find_volume+0x8e>
    1ad8:	00 e0       	ldi	r16, 0x00	; 0
    1ada:	10 e0       	ldi	r17, 0x00	; 0
    1adc:	04 30       	cpi	r16, 0x04	; 4
    1ade:	11 05       	cpc	r17, r1
    1ae0:	c8 f2       	brcs	.-78     	; 0x1a94 <find_volume+0x46>
    1ae2:	e1 14       	cp	r14, r1
    1ae4:	f1 04       	cpc	r15, r1
    1ae6:	21 f0       	breq	.+8      	; 0x1af0 <find_volume+0xa2>
    1ae8:	87 01       	movw	r16, r14
    1aea:	01 50       	subi	r16, 0x01	; 1
    1aec:	11 09       	sbc	r17, r1
    1aee:	02 c0       	rjmp	.+4      	; 0x1af4 <find_volume+0xa6>
    1af0:	00 e0       	ldi	r16, 0x00	; 0
    1af2:	10 e0       	ldi	r17, 0x00	; 0
    1af4:	f8 01       	movw	r30, r16
    1af6:	ee 0f       	add	r30, r30
    1af8:	ff 1f       	adc	r31, r31
    1afa:	ee 0f       	add	r30, r30
    1afc:	ff 1f       	adc	r31, r31
    1afe:	81 e0       	ldi	r24, 0x01	; 1
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	8c 0f       	add	r24, r28
    1b04:	9d 1f       	adc	r25, r29
    1b06:	e8 0f       	add	r30, r24
    1b08:	f9 1f       	adc	r31, r25
    1b0a:	40 81       	ld	r20, Z
    1b0c:	51 81       	ldd	r21, Z+1	; 0x01
    1b0e:	62 81       	ldd	r22, Z+2	; 0x02
    1b10:	73 81       	ldd	r23, Z+3	; 0x03
    1b12:	41 15       	cp	r20, r1
    1b14:	51 05       	cpc	r21, r1
    1b16:	61 05       	cpc	r22, r1
    1b18:	71 05       	cpc	r23, r1
    1b1a:	21 f0       	breq	.+8      	; 0x1b24 <find_volume+0xd6>
    1b1c:	c6 01       	movw	r24, r12
    1b1e:	0e 94 8e 0c 	call	0x191c	; 0x191c <check_fs>
    1b22:	02 c0       	rjmp	.+4      	; 0x1b28 <find_volume+0xda>
    1b24:	83 e0       	ldi	r24, 0x03	; 3
    1b26:	90 e0       	ldi	r25, 0x00	; 0
    1b28:	e1 14       	cp	r14, r1
    1b2a:	f1 04       	cpc	r15, r1
    1b2c:	41 f4       	brne	.+16     	; 0x1b3e <find_volume+0xf0>
    1b2e:	82 30       	cpi	r24, 0x02	; 2
    1b30:	91 05       	cpc	r25, r1
    1b32:	28 f0       	brcs	.+10     	; 0x1b3e <find_volume+0xf0>
    1b34:	0f 5f       	subi	r16, 0xFF	; 255
    1b36:	1f 4f       	sbci	r17, 0xFF	; 255
    1b38:	04 30       	cpi	r16, 0x04	; 4
    1b3a:	11 05       	cpc	r17, r1
    1b3c:	d8 f2       	brcs	.-74     	; 0x1af4 <find_volume+0xa6>
    1b3e:	60 96       	adiw	r28, 0x10	; 16
    1b40:	0f b6       	in	r0, 0x3f	; 63
    1b42:	f8 94       	cli
    1b44:	de bf       	out	0x3e, r29	; 62
    1b46:	0f be       	out	0x3f, r0	; 63
    1b48:	cd bf       	out	0x3d, r28	; 61
    1b4a:	df 91       	pop	r29
    1b4c:	cf 91       	pop	r28
    1b4e:	1f 91       	pop	r17
    1b50:	0f 91       	pop	r16
    1b52:	ff 90       	pop	r15
    1b54:	ef 90       	pop	r14
    1b56:	df 90       	pop	r13
    1b58:	cf 90       	pop	r12
    1b5a:	08 95       	ret

00001b5c <mount_volume>:
    1b5c:	2f 92       	push	r2
    1b5e:	3f 92       	push	r3
    1b60:	4f 92       	push	r4
    1b62:	5f 92       	push	r5
    1b64:	6f 92       	push	r6
    1b66:	7f 92       	push	r7
    1b68:	8f 92       	push	r8
    1b6a:	9f 92       	push	r9
    1b6c:	af 92       	push	r10
    1b6e:	bf 92       	push	r11
    1b70:	cf 92       	push	r12
    1b72:	df 92       	push	r13
    1b74:	ef 92       	push	r14
    1b76:	ff 92       	push	r15
    1b78:	0f 93       	push	r16
    1b7a:	1f 93       	push	r17
    1b7c:	cf 93       	push	r28
    1b7e:	df 93       	push	r29
    1b80:	cd b7       	in	r28, 0x3d	; 61
    1b82:	de b7       	in	r29, 0x3e	; 62
    1b84:	2e 97       	sbiw	r28, 0x0e	; 14
    1b86:	0f b6       	in	r0, 0x3f	; 63
    1b88:	f8 94       	cli
    1b8a:	de bf       	out	0x3e, r29	; 62
    1b8c:	0f be       	out	0x3f, r0	; 63
    1b8e:	cd bf       	out	0x3d, r28	; 61
    1b90:	8b 01       	movw	r16, r22
    1b92:	f4 2e       	mov	r15, r20
    1b94:	db 01       	movw	r26, r22
    1b96:	1d 92       	st	X+, r1
    1b98:	1c 92       	st	X, r1
    1b9a:	0e 94 3e 09 	call	0x127c	; 0x127c <get_ldnumber>
    1b9e:	99 23       	and	r25, r25
    1ba0:	0c f4       	brge	.+2      	; 0x1ba4 <mount_volume+0x48>
    1ba2:	1e c2       	rjmp	.+1084   	; 0x1fe0 <mount_volume+0x484>
    1ba4:	88 0f       	add	r24, r24
    1ba6:	99 1f       	adc	r25, r25
    1ba8:	fc 01       	movw	r30, r24
    1baa:	e5 52       	subi	r30, 0x25	; 37
    1bac:	fd 4f       	sbci	r31, 0xFD	; 253
    1bae:	20 81       	ld	r18, Z
    1bb0:	31 81       	ldd	r19, Z+1	; 0x01
    1bb2:	3e 87       	std	Y+14, r19	; 0x0e
    1bb4:	2d 87       	std	Y+13, r18	; 0x0d
    1bb6:	21 15       	cp	r18, r1
    1bb8:	31 05       	cpc	r19, r1
    1bba:	09 f4       	brne	.+2      	; 0x1bbe <mount_volume+0x62>
    1bbc:	13 c2       	rjmp	.+1062   	; 0x1fe4 <mount_volume+0x488>
    1bbe:	d8 01       	movw	r26, r16
    1bc0:	2d 93       	st	X+, r18
    1bc2:	3c 93       	st	X, r19
    1bc4:	1f 2d       	mov	r17, r15
    1bc6:	1e 7f       	andi	r17, 0xFE	; 254
    1bc8:	f9 01       	movw	r30, r18
    1bca:	80 81       	ld	r24, Z
    1bcc:	88 23       	and	r24, r24
    1bce:	61 f0       	breq	.+24     	; 0x1be8 <mount_volume+0x8c>
    1bd0:	81 81       	ldd	r24, Z+1	; 0x01
    1bd2:	0e 94 08 06 	call	0xc10	; 0xc10 <disk_status>
    1bd6:	80 fd       	sbrc	r24, 0
    1bd8:	07 c0       	rjmp	.+14     	; 0x1be8 <mount_volume+0x8c>
    1bda:	11 23       	and	r17, r17
    1bdc:	09 f4       	brne	.+2      	; 0x1be0 <mount_volume+0x84>
    1bde:	04 c2       	rjmp	.+1032   	; 0x1fe8 <mount_volume+0x48c>
    1be0:	82 fd       	sbrc	r24, 2
    1be2:	04 c2       	rjmp	.+1032   	; 0x1fec <mount_volume+0x490>
    1be4:	80 e0       	ldi	r24, 0x00	; 0
    1be6:	25 c2       	rjmp	.+1098   	; 0x2032 <mount_volume+0x4d6>
    1be8:	ad 85       	ldd	r26, Y+13	; 0x0d
    1bea:	be 85       	ldd	r27, Y+14	; 0x0e
    1bec:	1c 92       	st	X, r1
    1bee:	11 96       	adiw	r26, 0x01	; 1
    1bf0:	8c 91       	ld	r24, X
    1bf2:	0e 94 0f 06 	call	0xc1e	; 0xc1e <disk_initialize>
    1bf6:	80 fd       	sbrc	r24, 0
    1bf8:	fb c1       	rjmp	.+1014   	; 0x1ff0 <mount_volume+0x494>
    1bfa:	11 23       	and	r17, r17
    1bfc:	11 f0       	breq	.+4      	; 0x1c02 <mount_volume+0xa6>
    1bfe:	82 fd       	sbrc	r24, 2
    1c00:	f9 c1       	rjmp	.+1010   	; 0x1ff4 <mount_volume+0x498>
    1c02:	60 e0       	ldi	r22, 0x00	; 0
    1c04:	70 e0       	ldi	r23, 0x00	; 0
    1c06:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c08:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c0a:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <find_volume>
    1c0e:	84 30       	cpi	r24, 0x04	; 4
    1c10:	91 05       	cpc	r25, r1
    1c12:	09 f4       	brne	.+2      	; 0x1c16 <mount_volume+0xba>
    1c14:	f1 c1       	rjmp	.+994    	; 0x1ff8 <mount_volume+0x49c>
    1c16:	02 97       	sbiw	r24, 0x02	; 2
    1c18:	08 f0       	brcs	.+2      	; 0x1c1c <mount_volume+0xc0>
    1c1a:	f0 c1       	rjmp	.+992    	; 0x1ffc <mount_volume+0x4a0>
    1c1c:	ed 85       	ldd	r30, Y+13	; 0x0d
    1c1e:	fe 85       	ldd	r31, Y+14	; 0x0e
    1c20:	44 a4       	ldd	r4, Z+44	; 0x2c
    1c22:	55 a4       	ldd	r5, Z+45	; 0x2d
    1c24:	66 a4       	ldd	r6, Z+46	; 0x2e
    1c26:	77 a4       	ldd	r7, Z+47	; 0x2f
    1c28:	cf 01       	movw	r24, r30
    1c2a:	cb 96       	adiw	r24, 0x3b	; 59
    1c2c:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    1c30:	81 15       	cp	r24, r1
    1c32:	92 40       	sbci	r25, 0x02	; 2
    1c34:	09 f0       	breq	.+2      	; 0x1c38 <mount_volume+0xdc>
    1c36:	e4 c1       	rjmp	.+968    	; 0x2000 <mount_volume+0x4a4>
    1c38:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c3a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c3c:	8a 5b       	subi	r24, 0xBA	; 186
    1c3e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c40:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    1c44:	4c 01       	movw	r8, r24
    1c46:	a1 2c       	mov	r10, r1
    1c48:	b1 2c       	mov	r11, r1
    1c4a:	81 14       	cp	r8, r1
    1c4c:	91 04       	cpc	r9, r1
    1c4e:	a1 04       	cpc	r10, r1
    1c50:	b1 04       	cpc	r11, r1
    1c52:	41 f4       	brne	.+16     	; 0x1c64 <mount_volume+0x108>
    1c54:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c56:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c58:	8c 5a       	subi	r24, 0xAC	; 172
    1c5a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c5c:	0e 94 69 08 	call	0x10d2	; 0x10d2 <ld_dword>
    1c60:	4b 01       	movw	r8, r22
    1c62:	5c 01       	movw	r10, r24
    1c64:	ad 85       	ldd	r26, Y+13	; 0x0d
    1c66:	be 85       	ldd	r27, Y+14	; 0x0e
    1c68:	58 96       	adiw	r26, 0x18	; 24
    1c6a:	8d 92       	st	X+, r8
    1c6c:	9d 92       	st	X+, r9
    1c6e:	ad 92       	st	X+, r10
    1c70:	bc 92       	st	X, r11
    1c72:	5b 97       	sbiw	r26, 0x1b	; 27
    1c74:	fd 01       	movw	r30, r26
    1c76:	e0 5c       	subi	r30, 0xC0	; 192
    1c78:	ff 4f       	sbci	r31, 0xFF	; 255
    1c7a:	a0 81       	ld	r26, Z
    1c7c:	ed 85       	ldd	r30, Y+13	; 0x0d
    1c7e:	fe 85       	ldd	r31, Y+14	; 0x0e
    1c80:	a3 83       	std	Z+3, r26	; 0x03
    1c82:	8f ef       	ldi	r24, 0xFF	; 255
    1c84:	8a 0f       	add	r24, r26
    1c86:	82 30       	cpi	r24, 0x02	; 2
    1c88:	08 f0       	brcs	.+2      	; 0x1c8c <mount_volume+0x130>
    1c8a:	bc c1       	rjmp	.+888    	; 0x2004 <mount_volume+0x4a8>
    1c8c:	b0 e0       	ldi	r27, 0x00	; 0
    1c8e:	a5 01       	movw	r20, r10
    1c90:	94 01       	movw	r18, r8
    1c92:	0e 94 0a 23 	call	0x4614	; 0x4614 <__muluhisi3>
    1c96:	6d 83       	std	Y+5, r22	; 0x05
    1c98:	7e 83       	std	Y+6, r23	; 0x06
    1c9a:	8f 83       	std	Y+7, r24	; 0x07
    1c9c:	98 87       	std	Y+8, r25	; 0x08
    1c9e:	05 ad       	ldd	r16, Z+61	; 0x3d
    1ca0:	10 e0       	ldi	r17, 0x00	; 0
    1ca2:	13 87       	std	Z+11, r17	; 0x0b
    1ca4:	02 87       	std	Z+10, r16	; 0x0a
    1ca6:	01 15       	cp	r16, r1
    1ca8:	11 05       	cpc	r17, r1
    1caa:	09 f4       	brne	.+2      	; 0x1cae <mount_volume+0x152>
    1cac:	ad c1       	rjmp	.+858    	; 0x2008 <mount_volume+0x4ac>
    1cae:	c8 01       	movw	r24, r16
    1cb0:	01 97       	sbiw	r24, 0x01	; 1
    1cb2:	80 23       	and	r24, r16
    1cb4:	91 23       	and	r25, r17
    1cb6:	89 2b       	or	r24, r25
    1cb8:	09 f0       	breq	.+2      	; 0x1cbc <mount_volume+0x160>
    1cba:	a8 c1       	rjmp	.+848    	; 0x200c <mount_volume+0x4b0>
    1cbc:	cf 01       	movw	r24, r30
    1cbe:	8f 5b       	subi	r24, 0xBF	; 191
    1cc0:	9f 4f       	sbci	r25, 0xFF	; 255
    1cc2:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    1cc6:	1c 01       	movw	r2, r24
    1cc8:	ad 85       	ldd	r26, Y+13	; 0x0d
    1cca:	be 85       	ldd	r27, Y+14	; 0x0e
    1ccc:	19 96       	adiw	r26, 0x09	; 9
    1cce:	9c 93       	st	X, r25
    1cd0:	8e 93       	st	-X, r24
    1cd2:	18 97       	sbiw	r26, 0x08	; 8
    1cd4:	8f 70       	andi	r24, 0x0F	; 15
    1cd6:	99 27       	eor	r25, r25
    1cd8:	89 2b       	or	r24, r25
    1cda:	09 f0       	breq	.+2      	; 0x1cde <mount_volume+0x182>
    1cdc:	99 c1       	rjmp	.+818    	; 0x2010 <mount_volume+0x4b4>
    1cde:	cd 01       	movw	r24, r26
    1ce0:	8d 5b       	subi	r24, 0xBD	; 189
    1ce2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ce4:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    1ce8:	6c 01       	movw	r12, r24
    1cea:	e1 2c       	mov	r14, r1
    1cec:	f1 2c       	mov	r15, r1
    1cee:	c1 14       	cp	r12, r1
    1cf0:	d1 04       	cpc	r13, r1
    1cf2:	e1 04       	cpc	r14, r1
    1cf4:	f1 04       	cpc	r15, r1
    1cf6:	41 f4       	brne	.+16     	; 0x1d08 <mount_volume+0x1ac>
    1cf8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1cfa:	9e 85       	ldd	r25, Y+14	; 0x0e
    1cfc:	80 5b       	subi	r24, 0xB0	; 176
    1cfe:	9f 4f       	sbci	r25, 0xFF	; 255
    1d00:	0e 94 69 08 	call	0x10d2	; 0x10d2 <ld_dword>
    1d04:	6b 01       	movw	r12, r22
    1d06:	7c 01       	movw	r14, r24
    1d08:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d0a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d0c:	ce 96       	adiw	r24, 0x3e	; 62
    1d0e:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    1d12:	00 97       	sbiw	r24, 0x00	; 0
    1d14:	09 f4       	brne	.+2      	; 0x1d18 <mount_volume+0x1bc>
    1d16:	7e c1       	rjmp	.+764    	; 0x2014 <mount_volume+0x4b8>
    1d18:	9c 01       	movw	r18, r24
    1d1a:	40 e0       	ldi	r20, 0x00	; 0
    1d1c:	50 e0       	ldi	r21, 0x00	; 0
    1d1e:	29 87       	std	Y+9, r18	; 0x09
    1d20:	3a 87       	std	Y+10, r19	; 0x0a
    1d22:	4b 87       	std	Y+11, r20	; 0x0b
    1d24:	5c 87       	std	Y+12, r21	; 0x0c
    1d26:	8d 81       	ldd	r24, Y+5	; 0x05
    1d28:	9e 81       	ldd	r25, Y+6	; 0x06
    1d2a:	af 81       	ldd	r26, Y+7	; 0x07
    1d2c:	b8 85       	ldd	r27, Y+8	; 0x08
    1d2e:	82 0f       	add	r24, r18
    1d30:	93 1f       	adc	r25, r19
    1d32:	a4 1f       	adc	r26, r20
    1d34:	b5 1f       	adc	r27, r21
    1d36:	91 01       	movw	r18, r2
    1d38:	32 95       	swap	r19
    1d3a:	22 95       	swap	r18
    1d3c:	2f 70       	andi	r18, 0x0F	; 15
    1d3e:	23 27       	eor	r18, r19
    1d40:	3f 70       	andi	r19, 0x0F	; 15
    1d42:	23 27       	eor	r18, r19
    1d44:	ac 01       	movw	r20, r24
    1d46:	bd 01       	movw	r22, r26
    1d48:	42 0f       	add	r20, r18
    1d4a:	53 1f       	adc	r21, r19
    1d4c:	61 1d       	adc	r22, r1
    1d4e:	71 1d       	adc	r23, r1
    1d50:	49 83       	std	Y+1, r20	; 0x01
    1d52:	5a 83       	std	Y+2, r21	; 0x02
    1d54:	6b 83       	std	Y+3, r22	; 0x03
    1d56:	7c 83       	std	Y+4, r23	; 0x04
    1d58:	c4 16       	cp	r12, r20
    1d5a:	d5 06       	cpc	r13, r21
    1d5c:	e6 06       	cpc	r14, r22
    1d5e:	f7 06       	cpc	r15, r23
    1d60:	08 f4       	brcc	.+2      	; 0x1d64 <mount_volume+0x208>
    1d62:	5a c1       	rjmp	.+692    	; 0x2018 <mount_volume+0x4bc>
    1d64:	c7 01       	movw	r24, r14
    1d66:	b6 01       	movw	r22, r12
    1d68:	29 81       	ldd	r18, Y+1	; 0x01
    1d6a:	3a 81       	ldd	r19, Y+2	; 0x02
    1d6c:	4b 81       	ldd	r20, Y+3	; 0x03
    1d6e:	5c 81       	ldd	r21, Y+4	; 0x04
    1d70:	62 1b       	sub	r22, r18
    1d72:	73 0b       	sbc	r23, r19
    1d74:	84 0b       	sbc	r24, r20
    1d76:	95 0b       	sbc	r25, r21
    1d78:	98 01       	movw	r18, r16
    1d7a:	40 e0       	ldi	r20, 0x00	; 0
    1d7c:	50 e0       	ldi	r21, 0x00	; 0
    1d7e:	0e 94 e2 22 	call	0x45c4	; 0x45c4 <__udivmodsi4>
    1d82:	da 01       	movw	r26, r20
    1d84:	c9 01       	movw	r24, r18
    1d86:	21 15       	cp	r18, r1
    1d88:	31 05       	cpc	r19, r1
    1d8a:	41 05       	cpc	r20, r1
    1d8c:	51 05       	cpc	r21, r1
    1d8e:	09 f4       	brne	.+2      	; 0x1d92 <mount_volume+0x236>
    1d90:	45 c1       	rjmp	.+650    	; 0x201c <mount_volume+0x4c0>
    1d92:	26 3f       	cpi	r18, 0xF6	; 246
    1d94:	6f ef       	ldi	r22, 0xFF	; 255
    1d96:	36 07       	cpc	r19, r22
    1d98:	46 07       	cpc	r20, r22
    1d9a:	6f e0       	ldi	r22, 0x0F	; 15
    1d9c:	56 07       	cpc	r21, r22
    1d9e:	18 f0       	brcs	.+6      	; 0x1da6 <mount_volume+0x24a>
    1da0:	00 e0       	ldi	r16, 0x00	; 0
    1da2:	10 e0       	ldi	r17, 0x00	; 0
    1da4:	02 c0       	rjmp	.+4      	; 0x1daa <mount_volume+0x24e>
    1da6:	03 e0       	ldi	r16, 0x03	; 3
    1da8:	10 e0       	ldi	r17, 0x00	; 0
    1daa:	86 3f       	cpi	r24, 0xF6	; 246
    1dac:	7f ef       	ldi	r23, 0xFF	; 255
    1dae:	97 07       	cpc	r25, r23
    1db0:	a1 05       	cpc	r26, r1
    1db2:	b1 05       	cpc	r27, r1
    1db4:	10 f4       	brcc	.+4      	; 0x1dba <mount_volume+0x25e>
    1db6:	02 e0       	ldi	r16, 0x02	; 2
    1db8:	10 e0       	ldi	r17, 0x00	; 0
    1dba:	86 3f       	cpi	r24, 0xF6	; 246
    1dbc:	9f 40       	sbci	r25, 0x0F	; 15
    1dbe:	a1 05       	cpc	r26, r1
    1dc0:	b1 05       	cpc	r27, r1
    1dc2:	10 f4       	brcc	.+4      	; 0x1dc8 <mount_volume+0x26c>
    1dc4:	01 e0       	ldi	r16, 0x01	; 1
    1dc6:	10 e0       	ldi	r17, 0x00	; 0
    1dc8:	01 15       	cp	r16, r1
    1dca:	11 05       	cpc	r17, r1
    1dcc:	09 f4       	brne	.+2      	; 0x1dd0 <mount_volume+0x274>
    1dce:	28 c1       	rjmp	.+592    	; 0x2020 <mount_volume+0x4c4>
    1dd0:	69 01       	movw	r12, r18
    1dd2:	7a 01       	movw	r14, r20
    1dd4:	f2 e0       	ldi	r31, 0x02	; 2
    1dd6:	cf 0e       	add	r12, r31
    1dd8:	d1 1c       	adc	r13, r1
    1dda:	e1 1c       	adc	r14, r1
    1ddc:	f1 1c       	adc	r15, r1
    1dde:	ad 85       	ldd	r26, Y+13	; 0x0d
    1de0:	be 85       	ldd	r27, Y+14	; 0x0e
    1de2:	54 96       	adiw	r26, 0x14	; 20
    1de4:	cd 92       	st	X+, r12
    1de6:	dd 92       	st	X+, r13
    1de8:	ed 92       	st	X+, r14
    1dea:	fc 92       	st	X, r15
    1dec:	57 97       	sbiw	r26, 0x17	; 23
    1dee:	fd 01       	movw	r30, r26
    1df0:	44 8e       	std	Z+28, r4	; 0x1c
    1df2:	55 8e       	std	Z+29, r5	; 0x1d
    1df4:	66 8e       	std	Z+30, r6	; 0x1e
    1df6:	77 8e       	std	Z+31, r7	; 0x1f
    1df8:	89 85       	ldd	r24, Y+9	; 0x09
    1dfa:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dfc:	ab 85       	ldd	r26, Y+11	; 0x0b
    1dfe:	bc 85       	ldd	r27, Y+12	; 0x0c
    1e00:	84 0d       	add	r24, r4
    1e02:	95 1d       	adc	r25, r5
    1e04:	a6 1d       	adc	r26, r6
    1e06:	b7 1d       	adc	r27, r7
    1e08:	80 a3       	std	Z+32, r24	; 0x20
    1e0a:	91 a3       	std	Z+33, r25	; 0x21
    1e0c:	a2 a3       	std	Z+34, r26	; 0x22
    1e0e:	b3 a3       	std	Z+35, r27	; 0x23
    1e10:	49 81       	ldd	r20, Y+1	; 0x01
    1e12:	5a 81       	ldd	r21, Y+2	; 0x02
    1e14:	6b 81       	ldd	r22, Y+3	; 0x03
    1e16:	7c 81       	ldd	r23, Y+4	; 0x04
    1e18:	44 0d       	add	r20, r4
    1e1a:	55 1d       	adc	r21, r5
    1e1c:	66 1d       	adc	r22, r6
    1e1e:	77 1d       	adc	r23, r7
    1e20:	40 a7       	std	Z+40, r20	; 0x28
    1e22:	51 a7       	std	Z+41, r21	; 0x29
    1e24:	62 a7       	std	Z+42, r22	; 0x2a
    1e26:	73 a7       	std	Z+43, r23	; 0x2b
    1e28:	03 30       	cpi	r16, 0x03	; 3
    1e2a:	11 05       	cpc	r17, r1
    1e2c:	11 f5       	brne	.+68     	; 0x1e72 <mount_volume+0x316>
    1e2e:	cf 01       	movw	r24, r30
    1e30:	86 5a       	subi	r24, 0xA6	; 166
    1e32:	9f 4f       	sbci	r25, 0xFF	; 255
    1e34:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    1e38:	89 2b       	or	r24, r25
    1e3a:	09 f0       	breq	.+2      	; 0x1e3e <mount_volume+0x2e2>
    1e3c:	f3 c0       	rjmp	.+486    	; 0x2024 <mount_volume+0x4c8>
    1e3e:	23 28       	or	r2, r3
    1e40:	09 f0       	breq	.+2      	; 0x1e44 <mount_volume+0x2e8>
    1e42:	f2 c0       	rjmp	.+484    	; 0x2028 <mount_volume+0x4cc>
    1e44:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e46:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e48:	84 5a       	subi	r24, 0xA4	; 164
    1e4a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e4c:	0e 94 69 08 	call	0x10d2	; 0x10d2 <ld_dword>
    1e50:	ad 85       	ldd	r26, Y+13	; 0x0d
    1e52:	be 85       	ldd	r27, Y+14	; 0x0e
    1e54:	94 96       	adiw	r26, 0x24	; 36
    1e56:	6d 93       	st	X+, r22
    1e58:	7d 93       	st	X+, r23
    1e5a:	8d 93       	st	X+, r24
    1e5c:	9c 93       	st	X, r25
    1e5e:	97 97       	sbiw	r26, 0x27	; 39
    1e60:	cc 0c       	add	r12, r12
    1e62:	dd 1c       	adc	r13, r13
    1e64:	ee 1c       	adc	r14, r14
    1e66:	ff 1c       	adc	r15, r15
    1e68:	cc 0c       	add	r12, r12
    1e6a:	dd 1c       	adc	r13, r13
    1e6c:	ee 1c       	adc	r14, r14
    1e6e:	ff 1c       	adc	r15, r15
    1e70:	2e c0       	rjmp	.+92     	; 0x1ece <mount_volume+0x372>
    1e72:	23 28       	or	r2, r3
    1e74:	09 f4       	brne	.+2      	; 0x1e78 <mount_volume+0x31c>
    1e76:	da c0       	rjmp	.+436    	; 0x202c <mount_volume+0x4d0>
    1e78:	2d 81       	ldd	r18, Y+5	; 0x05
    1e7a:	3e 81       	ldd	r19, Y+6	; 0x06
    1e7c:	4f 81       	ldd	r20, Y+7	; 0x07
    1e7e:	58 85       	ldd	r21, Y+8	; 0x08
    1e80:	82 0f       	add	r24, r18
    1e82:	93 1f       	adc	r25, r19
    1e84:	a4 1f       	adc	r26, r20
    1e86:	b5 1f       	adc	r27, r21
    1e88:	ed 85       	ldd	r30, Y+13	; 0x0d
    1e8a:	fe 85       	ldd	r31, Y+14	; 0x0e
    1e8c:	84 a3       	std	Z+36, r24	; 0x24
    1e8e:	95 a3       	std	Z+37, r25	; 0x25
    1e90:	a6 a3       	std	Z+38, r26	; 0x26
    1e92:	b7 a3       	std	Z+39, r27	; 0x27
    1e94:	02 30       	cpi	r16, 0x02	; 2
    1e96:	11 05       	cpc	r17, r1
    1e98:	29 f4       	brne	.+10     	; 0x1ea4 <mount_volume+0x348>
    1e9a:	cc 0c       	add	r12, r12
    1e9c:	dd 1c       	adc	r13, r13
    1e9e:	ee 1c       	adc	r14, r14
    1ea0:	ff 1c       	adc	r15, r15
    1ea2:	15 c0       	rjmp	.+42     	; 0x1ece <mount_volume+0x372>
    1ea4:	a3 e0       	ldi	r26, 0x03	; 3
    1ea6:	b0 e0       	ldi	r27, 0x00	; 0
    1ea8:	a7 01       	movw	r20, r14
    1eaa:	96 01       	movw	r18, r12
    1eac:	0e 94 0a 23 	call	0x4614	; 0x4614 <__muluhisi3>
    1eb0:	dc 01       	movw	r26, r24
    1eb2:	cb 01       	movw	r24, r22
    1eb4:	b6 95       	lsr	r27
    1eb6:	a7 95       	ror	r26
    1eb8:	97 95       	ror	r25
    1eba:	87 95       	ror	r24
    1ebc:	f1 e0       	ldi	r31, 0x01	; 1
    1ebe:	cf 22       	and	r12, r31
    1ec0:	dd 24       	eor	r13, r13
    1ec2:	ee 24       	eor	r14, r14
    1ec4:	ff 24       	eor	r15, r15
    1ec6:	c8 0e       	add	r12, r24
    1ec8:	d9 1e       	adc	r13, r25
    1eca:	ea 1e       	adc	r14, r26
    1ecc:	fb 1e       	adc	r15, r27
    1ece:	2f ef       	ldi	r18, 0xFF	; 255
    1ed0:	c2 0e       	add	r12, r18
    1ed2:	21 e0       	ldi	r18, 0x01	; 1
    1ed4:	d2 1e       	adc	r13, r18
    1ed6:	e1 1c       	adc	r14, r1
    1ed8:	f1 1c       	adc	r15, r1
    1eda:	0b 2e       	mov	r0, r27
    1edc:	b9 e0       	ldi	r27, 0x09	; 9
    1ede:	f6 94       	lsr	r15
    1ee0:	e7 94       	ror	r14
    1ee2:	d7 94       	ror	r13
    1ee4:	c7 94       	ror	r12
    1ee6:	ba 95       	dec	r27
    1ee8:	d1 f7       	brne	.-12     	; 0x1ede <mount_volume+0x382>
    1eea:	b0 2d       	mov	r27, r0
    1eec:	8c 14       	cp	r8, r12
    1eee:	9d 04       	cpc	r9, r13
    1ef0:	ae 04       	cpc	r10, r14
    1ef2:	bf 04       	cpc	r11, r15
    1ef4:	08 f4       	brcc	.+2      	; 0x1ef8 <mount_volume+0x39c>
    1ef6:	9c c0       	rjmp	.+312    	; 0x2030 <mount_volume+0x4d4>
    1ef8:	8f ef       	ldi	r24, 0xFF	; 255
    1efa:	9f ef       	ldi	r25, 0xFF	; 255
    1efc:	dc 01       	movw	r26, r24
    1efe:	ed 85       	ldd	r30, Y+13	; 0x0d
    1f00:	fe 85       	ldd	r31, Y+14	; 0x0e
    1f02:	80 8b       	std	Z+16, r24	; 0x10
    1f04:	91 8b       	std	Z+17, r25	; 0x11
    1f06:	a2 8b       	std	Z+18, r26	; 0x12
    1f08:	b3 8b       	std	Z+19, r27	; 0x13
    1f0a:	84 87       	std	Z+12, r24	; 0x0c
    1f0c:	95 87       	std	Z+13, r25	; 0x0d
    1f0e:	a6 87       	std	Z+14, r26	; 0x0e
    1f10:	b7 87       	std	Z+15, r27	; 0x0f
    1f12:	80 e8       	ldi	r24, 0x80	; 128
    1f14:	85 83       	std	Z+5, r24	; 0x05
    1f16:	03 30       	cpi	r16, 0x03	; 3
    1f18:	11 05       	cpc	r17, r1
    1f1a:	09 f0       	breq	.+2      	; 0x1f1e <mount_volume+0x3c2>
    1f1c:	4f c0       	rjmp	.+158    	; 0x1fbc <mount_volume+0x460>
    1f1e:	cf 01       	movw	r24, r30
    1f20:	80 5a       	subi	r24, 0xA0	; 160
    1f22:	9f 4f       	sbci	r25, 0xFF	; 255
    1f24:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    1f28:	01 97       	sbiw	r24, 0x01	; 1
    1f2a:	09 f0       	breq	.+2      	; 0x1f2e <mount_volume+0x3d2>
    1f2c:	47 c0       	rjmp	.+142    	; 0x1fbc <mount_volume+0x460>
    1f2e:	b3 01       	movw	r22, r6
    1f30:	a2 01       	movw	r20, r4
    1f32:	4f 5f       	subi	r20, 0xFF	; 255
    1f34:	5f 4f       	sbci	r21, 0xFF	; 255
    1f36:	6f 4f       	sbci	r22, 0xFF	; 255
    1f38:	7f 4f       	sbci	r23, 0xFF	; 255
    1f3a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f3c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f3e:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    1f42:	81 11       	cpse	r24, r1
    1f44:	3b c0       	rjmp	.+118    	; 0x1fbc <mount_volume+0x460>
    1f46:	ad 85       	ldd	r26, Y+13	; 0x0d
    1f48:	be 85       	ldd	r27, Y+14	; 0x0e
    1f4a:	15 96       	adiw	r26, 0x05	; 5
    1f4c:	1c 92       	st	X, r1
    1f4e:	15 97       	sbiw	r26, 0x05	; 5
    1f50:	cd 01       	movw	r24, r26
    1f52:	82 5d       	subi	r24, 0xD2	; 210
    1f54:	9d 4f       	sbci	r25, 0xFD	; 253
    1f56:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    1f5a:	85 35       	cpi	r24, 0x55	; 85
    1f5c:	9a 4a       	sbci	r25, 0xAA	; 170
    1f5e:	71 f5       	brne	.+92     	; 0x1fbc <mount_volume+0x460>
    1f60:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f62:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f64:	c0 96       	adiw	r24, 0x30	; 48
    1f66:	0e 94 69 08 	call	0x10d2	; 0x10d2 <ld_dword>
    1f6a:	62 35       	cpi	r22, 0x52	; 82
    1f6c:	72 45       	sbci	r23, 0x52	; 82
    1f6e:	81 46       	sbci	r24, 0x61	; 97
    1f70:	91 44       	sbci	r25, 0x41	; 65
    1f72:	21 f5       	brne	.+72     	; 0x1fbc <mount_volume+0x460>
    1f74:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f76:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f78:	8c 5e       	subi	r24, 0xEC	; 236
    1f7a:	9d 4f       	sbci	r25, 0xFD	; 253
    1f7c:	0e 94 69 08 	call	0x10d2	; 0x10d2 <ld_dword>
    1f80:	62 37       	cpi	r22, 0x72	; 114
    1f82:	72 47       	sbci	r23, 0x72	; 114
    1f84:	81 44       	sbci	r24, 0x41	; 65
    1f86:	91 46       	sbci	r25, 0x61	; 97
    1f88:	c9 f4       	brne	.+50     	; 0x1fbc <mount_volume+0x460>
    1f8a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f8c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f8e:	88 5e       	subi	r24, 0xE8	; 232
    1f90:	9d 4f       	sbci	r25, 0xFD	; 253
    1f92:	0e 94 69 08 	call	0x10d2	; 0x10d2 <ld_dword>
    1f96:	ad 85       	ldd	r26, Y+13	; 0x0d
    1f98:	be 85       	ldd	r27, Y+14	; 0x0e
    1f9a:	50 96       	adiw	r26, 0x10	; 16
    1f9c:	6d 93       	st	X+, r22
    1f9e:	7d 93       	st	X+, r23
    1fa0:	8d 93       	st	X+, r24
    1fa2:	9c 93       	st	X, r25
    1fa4:	53 97       	sbiw	r26, 0x13	; 19
    1fa6:	cd 01       	movw	r24, r26
    1fa8:	84 5e       	subi	r24, 0xE4	; 228
    1faa:	9d 4f       	sbci	r25, 0xFD	; 253
    1fac:	0e 94 69 08 	call	0x10d2	; 0x10d2 <ld_dword>
    1fb0:	ed 85       	ldd	r30, Y+13	; 0x0d
    1fb2:	fe 85       	ldd	r31, Y+14	; 0x0e
    1fb4:	64 87       	std	Z+12, r22	; 0x0c
    1fb6:	75 87       	std	Z+13, r23	; 0x0d
    1fb8:	86 87       	std	Z+14, r24	; 0x0e
    1fba:	97 87       	std	Z+15, r25	; 0x0f
    1fbc:	ad 85       	ldd	r26, Y+13	; 0x0d
    1fbe:	be 85       	ldd	r27, Y+14	; 0x0e
    1fc0:	0c 93       	st	X, r16
    1fc2:	80 91 d9 02 	lds	r24, 0x02D9	; 0x8002d9 <Fsid>
    1fc6:	90 91 da 02 	lds	r25, 0x02DA	; 0x8002da <Fsid+0x1>
    1fca:	01 96       	adiw	r24, 0x01	; 1
    1fcc:	90 93 da 02 	sts	0x02DA, r25	; 0x8002da <Fsid+0x1>
    1fd0:	80 93 d9 02 	sts	0x02D9, r24	; 0x8002d9 <Fsid>
    1fd4:	17 96       	adiw	r26, 0x07	; 7
    1fd6:	9c 93       	st	X, r25
    1fd8:	8e 93       	st	-X, r24
    1fda:	16 97       	sbiw	r26, 0x06	; 6
    1fdc:	80 e0       	ldi	r24, 0x00	; 0
    1fde:	29 c0       	rjmp	.+82     	; 0x2032 <mount_volume+0x4d6>
    1fe0:	8b e0       	ldi	r24, 0x0B	; 11
    1fe2:	27 c0       	rjmp	.+78     	; 0x2032 <mount_volume+0x4d6>
    1fe4:	8c e0       	ldi	r24, 0x0C	; 12
    1fe6:	25 c0       	rjmp	.+74     	; 0x2032 <mount_volume+0x4d6>
    1fe8:	80 e0       	ldi	r24, 0x00	; 0
    1fea:	23 c0       	rjmp	.+70     	; 0x2032 <mount_volume+0x4d6>
    1fec:	8a e0       	ldi	r24, 0x0A	; 10
    1fee:	21 c0       	rjmp	.+66     	; 0x2032 <mount_volume+0x4d6>
    1ff0:	83 e0       	ldi	r24, 0x03	; 3
    1ff2:	1f c0       	rjmp	.+62     	; 0x2032 <mount_volume+0x4d6>
    1ff4:	8a e0       	ldi	r24, 0x0A	; 10
    1ff6:	1d c0       	rjmp	.+58     	; 0x2032 <mount_volume+0x4d6>
    1ff8:	81 e0       	ldi	r24, 0x01	; 1
    1ffa:	1b c0       	rjmp	.+54     	; 0x2032 <mount_volume+0x4d6>
    1ffc:	8d e0       	ldi	r24, 0x0D	; 13
    1ffe:	19 c0       	rjmp	.+50     	; 0x2032 <mount_volume+0x4d6>
    2000:	8d e0       	ldi	r24, 0x0D	; 13
    2002:	17 c0       	rjmp	.+46     	; 0x2032 <mount_volume+0x4d6>
    2004:	8d e0       	ldi	r24, 0x0D	; 13
    2006:	15 c0       	rjmp	.+42     	; 0x2032 <mount_volume+0x4d6>
    2008:	8d e0       	ldi	r24, 0x0D	; 13
    200a:	13 c0       	rjmp	.+38     	; 0x2032 <mount_volume+0x4d6>
    200c:	8d e0       	ldi	r24, 0x0D	; 13
    200e:	11 c0       	rjmp	.+34     	; 0x2032 <mount_volume+0x4d6>
    2010:	8d e0       	ldi	r24, 0x0D	; 13
    2012:	0f c0       	rjmp	.+30     	; 0x2032 <mount_volume+0x4d6>
    2014:	8d e0       	ldi	r24, 0x0D	; 13
    2016:	0d c0       	rjmp	.+26     	; 0x2032 <mount_volume+0x4d6>
    2018:	8d e0       	ldi	r24, 0x0D	; 13
    201a:	0b c0       	rjmp	.+22     	; 0x2032 <mount_volume+0x4d6>
    201c:	8d e0       	ldi	r24, 0x0D	; 13
    201e:	09 c0       	rjmp	.+18     	; 0x2032 <mount_volume+0x4d6>
    2020:	8d e0       	ldi	r24, 0x0D	; 13
    2022:	07 c0       	rjmp	.+14     	; 0x2032 <mount_volume+0x4d6>
    2024:	8d e0       	ldi	r24, 0x0D	; 13
    2026:	05 c0       	rjmp	.+10     	; 0x2032 <mount_volume+0x4d6>
    2028:	8d e0       	ldi	r24, 0x0D	; 13
    202a:	03 c0       	rjmp	.+6      	; 0x2032 <mount_volume+0x4d6>
    202c:	8d e0       	ldi	r24, 0x0D	; 13
    202e:	01 c0       	rjmp	.+2      	; 0x2032 <mount_volume+0x4d6>
    2030:	8d e0       	ldi	r24, 0x0D	; 13
    2032:	2e 96       	adiw	r28, 0x0e	; 14
    2034:	0f b6       	in	r0, 0x3f	; 63
    2036:	f8 94       	cli
    2038:	de bf       	out	0x3e, r29	; 62
    203a:	0f be       	out	0x3f, r0	; 63
    203c:	cd bf       	out	0x3d, r28	; 61
    203e:	df 91       	pop	r29
    2040:	cf 91       	pop	r28
    2042:	1f 91       	pop	r17
    2044:	0f 91       	pop	r16
    2046:	ff 90       	pop	r15
    2048:	ef 90       	pop	r14
    204a:	df 90       	pop	r13
    204c:	cf 90       	pop	r12
    204e:	bf 90       	pop	r11
    2050:	af 90       	pop	r10
    2052:	9f 90       	pop	r9
    2054:	8f 90       	pop	r8
    2056:	7f 90       	pop	r7
    2058:	6f 90       	pop	r6
    205a:	5f 90       	pop	r5
    205c:	4f 90       	pop	r4
    205e:	3f 90       	pop	r3
    2060:	2f 90       	pop	r2
    2062:	08 95       	ret

00002064 <put_fat>:
    2064:	2f 92       	push	r2
    2066:	3f 92       	push	r3
    2068:	4f 92       	push	r4
    206a:	5f 92       	push	r5
    206c:	6f 92       	push	r6
    206e:	7f 92       	push	r7
    2070:	8f 92       	push	r8
    2072:	9f 92       	push	r9
    2074:	af 92       	push	r10
    2076:	bf 92       	push	r11
    2078:	cf 92       	push	r12
    207a:	df 92       	push	r13
    207c:	ef 92       	push	r14
    207e:	ff 92       	push	r15
    2080:	0f 93       	push	r16
    2082:	1f 93       	push	r17
    2084:	cf 93       	push	r28
    2086:	df 93       	push	r29
    2088:	00 d0       	rcall	.+0      	; 0x208a <put_fat+0x26>
    208a:	00 d0       	rcall	.+0      	; 0x208c <put_fat+0x28>
    208c:	cd b7       	in	r28, 0x3d	; 61
    208e:	de b7       	in	r29, 0x3e	; 62
    2090:	42 30       	cpi	r20, 0x02	; 2
    2092:	51 05       	cpc	r21, r1
    2094:	61 05       	cpc	r22, r1
    2096:	71 05       	cpc	r23, r1
    2098:	08 f4       	brcc	.+2      	; 0x209c <put_fat+0x38>
    209a:	f1 c0       	rjmp	.+482    	; 0x227e <put_fat+0x21a>
    209c:	fc 01       	movw	r30, r24
    209e:	c4 88       	ldd	r12, Z+20	; 0x14
    20a0:	d5 88       	ldd	r13, Z+21	; 0x15
    20a2:	e6 88       	ldd	r14, Z+22	; 0x16
    20a4:	f7 88       	ldd	r15, Z+23	; 0x17
    20a6:	4c 15       	cp	r20, r12
    20a8:	5d 05       	cpc	r21, r13
    20aa:	6e 05       	cpc	r22, r14
    20ac:	7f 05       	cpc	r23, r15
    20ae:	08 f0       	brcs	.+2      	; 0x20b2 <put_fat+0x4e>
    20b0:	e8 c0       	rjmp	.+464    	; 0x2282 <put_fat+0x21e>
    20b2:	28 01       	movw	r4, r16
    20b4:	39 01       	movw	r6, r18
    20b6:	6a 01       	movw	r12, r20
    20b8:	7b 01       	movw	r14, r22
    20ba:	9c 83       	std	Y+4, r25	; 0x04
    20bc:	8b 83       	std	Y+3, r24	; 0x03
    20be:	80 81       	ld	r24, Z
    20c0:	82 30       	cpi	r24, 0x02	; 2
    20c2:	09 f4       	brne	.+2      	; 0x20c6 <put_fat+0x62>
    20c4:	75 c0       	rjmp	.+234    	; 0x21b0 <put_fat+0x14c>
    20c6:	83 30       	cpi	r24, 0x03	; 3
    20c8:	09 f4       	brne	.+2      	; 0x20cc <put_fat+0x68>
    20ca:	99 c0       	rjmp	.+306    	; 0x21fe <put_fat+0x19a>
    20cc:	81 30       	cpi	r24, 0x01	; 1
    20ce:	09 f0       	breq	.+2      	; 0x20d2 <put_fat+0x6e>
    20d0:	da c0       	rjmp	.+436    	; 0x2286 <put_fat+0x222>
    20d2:	5a 01       	movw	r10, r20
    20d4:	b6 94       	lsr	r11
    20d6:	a7 94       	ror	r10
    20d8:	a4 0e       	add	r10, r20
    20da:	b5 1e       	adc	r11, r21
    20dc:	40 a1       	ldd	r20, Z+32	; 0x20
    20de:	51 a1       	ldd	r21, Z+33	; 0x21
    20e0:	62 a1       	ldd	r22, Z+34	; 0x22
    20e2:	73 a1       	ldd	r23, Z+35	; 0x23
    20e4:	c5 01       	movw	r24, r10
    20e6:	89 2f       	mov	r24, r25
    20e8:	99 27       	eor	r25, r25
    20ea:	86 95       	lsr	r24
    20ec:	48 0f       	add	r20, r24
    20ee:	59 1f       	adc	r21, r25
    20f0:	61 1d       	adc	r22, r1
    20f2:	71 1d       	adc	r23, r1
    20f4:	cf 01       	movw	r24, r30
    20f6:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    20fa:	18 2f       	mov	r17, r24
    20fc:	81 11       	cpse	r24, r1
    20fe:	c4 c0       	rjmp	.+392    	; 0x2288 <put_fat+0x224>
    2100:	2b 81       	ldd	r18, Y+3	; 0x03
    2102:	3c 81       	ldd	r19, Y+4	; 0x04
    2104:	20 5d       	subi	r18, 0xD0	; 208
    2106:	3f 4f       	sbci	r19, 0xFF	; 255
    2108:	3a 83       	std	Y+2, r19	; 0x02
    210a:	29 83       	std	Y+1, r18	; 0x01
    210c:	15 01       	movw	r2, r10
    210e:	3f ef       	ldi	r19, 0xFF	; 255
    2110:	23 1a       	sub	r2, r19
    2112:	33 0a       	sbc	r3, r19
    2114:	81 e0       	ldi	r24, 0x01	; 1
    2116:	b8 22       	and	r11, r24
    2118:	e9 81       	ldd	r30, Y+1	; 0x01
    211a:	fa 81       	ldd	r31, Y+2	; 0x02
    211c:	ea 0d       	add	r30, r10
    211e:	fb 1d       	adc	r31, r11
    2120:	46 01       	movw	r8, r12
    2122:	57 01       	movw	r10, r14
    2124:	91 e0       	ldi	r25, 0x01	; 1
    2126:	89 22       	and	r8, r25
    2128:	99 24       	eor	r9, r9
    212a:	aa 24       	eor	r10, r10
    212c:	bb 24       	eor	r11, r11
    212e:	c0 fe       	sbrs	r12, 0
    2130:	08 c0       	rjmp	.+16     	; 0x2142 <put_fat+0xde>
    2132:	20 81       	ld	r18, Z
    2134:	30 e1       	ldi	r19, 0x10	; 16
    2136:	43 9e       	mul	r4, r19
    2138:	c0 01       	movw	r24, r0
    213a:	11 24       	eor	r1, r1
    213c:	2f 70       	andi	r18, 0x0F	; 15
    213e:	82 2b       	or	r24, r18
    2140:	01 c0       	rjmp	.+2      	; 0x2144 <put_fat+0xe0>
    2142:	84 2d       	mov	r24, r4
    2144:	80 83       	st	Z, r24
    2146:	81 e0       	ldi	r24, 0x01	; 1
    2148:	eb 81       	ldd	r30, Y+3	; 0x03
    214a:	fc 81       	ldd	r31, Y+4	; 0x04
    214c:	84 83       	std	Z+4, r24	; 0x04
    214e:	40 a1       	ldd	r20, Z+32	; 0x20
    2150:	51 a1       	ldd	r21, Z+33	; 0x21
    2152:	62 a1       	ldd	r22, Z+34	; 0x22
    2154:	73 a1       	ldd	r23, Z+35	; 0x23
    2156:	c1 01       	movw	r24, r2
    2158:	89 2f       	mov	r24, r25
    215a:	99 27       	eor	r25, r25
    215c:	86 95       	lsr	r24
    215e:	48 0f       	add	r20, r24
    2160:	59 1f       	adc	r21, r25
    2162:	61 1d       	adc	r22, r1
    2164:	71 1d       	adc	r23, r1
    2166:	cf 01       	movw	r24, r30
    2168:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    216c:	18 2f       	mov	r17, r24
    216e:	81 11       	cpse	r24, r1
    2170:	8b c0       	rjmp	.+278    	; 0x2288 <put_fat+0x224>
    2172:	f1 e0       	ldi	r31, 0x01	; 1
    2174:	3f 22       	and	r3, r31
    2176:	e9 81       	ldd	r30, Y+1	; 0x01
    2178:	fa 81       	ldd	r31, Y+2	; 0x02
    217a:	e2 0d       	add	r30, r2
    217c:	f3 1d       	adc	r31, r3
    217e:	89 28       	or	r8, r9
    2180:	8a 28       	or	r8, r10
    2182:	8b 28       	or	r8, r11
    2184:	49 f0       	breq	.+18     	; 0x2198 <put_fat+0x134>
    2186:	68 94       	set
    2188:	13 f8       	bld	r1, 3
    218a:	76 94       	lsr	r7
    218c:	67 94       	ror	r6
    218e:	57 94       	ror	r5
    2190:	47 94       	ror	r4
    2192:	16 94       	lsr	r1
    2194:	d1 f7       	brne	.-12     	; 0x218a <put_fat+0x126>
    2196:	06 c0       	rjmp	.+12     	; 0x21a4 <put_fat+0x140>
    2198:	90 81       	ld	r25, Z
    219a:	90 7f       	andi	r25, 0xF0	; 240
    219c:	85 2d       	mov	r24, r5
    219e:	8f 70       	andi	r24, 0x0F	; 15
    21a0:	49 2e       	mov	r4, r25
    21a2:	48 2a       	or	r4, r24
    21a4:	40 82       	st	Z, r4
    21a6:	81 e0       	ldi	r24, 0x01	; 1
    21a8:	eb 81       	ldd	r30, Y+3	; 0x03
    21aa:	fc 81       	ldd	r31, Y+4	; 0x04
    21ac:	84 83       	std	Z+4, r24	; 0x04
    21ae:	6c c0       	rjmp	.+216    	; 0x2288 <put_fat+0x224>
    21b0:	eb 81       	ldd	r30, Y+3	; 0x03
    21b2:	fc 81       	ldd	r31, Y+4	; 0x04
    21b4:	40 a1       	ldd	r20, Z+32	; 0x20
    21b6:	51 a1       	ldd	r21, Z+33	; 0x21
    21b8:	62 a1       	ldd	r22, Z+34	; 0x22
    21ba:	73 a1       	ldd	r23, Z+35	; 0x23
    21bc:	bb 27       	eor	r27, r27
    21be:	af 2d       	mov	r26, r15
    21c0:	9e 2d       	mov	r25, r14
    21c2:	8d 2d       	mov	r24, r13
    21c4:	48 0f       	add	r20, r24
    21c6:	59 1f       	adc	r21, r25
    21c8:	6a 1f       	adc	r22, r26
    21ca:	7b 1f       	adc	r23, r27
    21cc:	cf 01       	movw	r24, r30
    21ce:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    21d2:	18 2f       	mov	r17, r24
    21d4:	81 11       	cpse	r24, r1
    21d6:	58 c0       	rjmp	.+176    	; 0x2288 <put_fat+0x224>
    21d8:	2b 81       	ldd	r18, Y+3	; 0x03
    21da:	3c 81       	ldd	r19, Y+4	; 0x04
    21dc:	20 5d       	subi	r18, 0xD0	; 208
    21de:	3f 4f       	sbci	r19, 0xFF	; 255
    21e0:	cc 0c       	add	r12, r12
    21e2:	dd 1c       	adc	r13, r13
    21e4:	c6 01       	movw	r24, r12
    21e6:	8e 7f       	andi	r24, 0xFE	; 254
    21e8:	91 70       	andi	r25, 0x01	; 1
    21ea:	b2 01       	movw	r22, r4
    21ec:	82 0f       	add	r24, r18
    21ee:	93 1f       	adc	r25, r19
    21f0:	0e 94 84 08 	call	0x1108	; 0x1108 <st_word>
    21f4:	81 e0       	ldi	r24, 0x01	; 1
    21f6:	eb 81       	ldd	r30, Y+3	; 0x03
    21f8:	fc 81       	ldd	r31, Y+4	; 0x04
    21fa:	84 83       	std	Z+4, r24	; 0x04
    21fc:	45 c0       	rjmp	.+138    	; 0x2288 <put_fat+0x224>
    21fe:	eb 81       	ldd	r30, Y+3	; 0x03
    2200:	fc 81       	ldd	r31, Y+4	; 0x04
    2202:	40 a1       	ldd	r20, Z+32	; 0x20
    2204:	51 a1       	ldd	r21, Z+33	; 0x21
    2206:	62 a1       	ldd	r22, Z+34	; 0x22
    2208:	73 a1       	ldd	r23, Z+35	; 0x23
    220a:	d7 01       	movw	r26, r14
    220c:	c6 01       	movw	r24, r12
    220e:	68 94       	set
    2210:	16 f8       	bld	r1, 6
    2212:	b6 95       	lsr	r27
    2214:	a7 95       	ror	r26
    2216:	97 95       	ror	r25
    2218:	87 95       	ror	r24
    221a:	16 94       	lsr	r1
    221c:	d1 f7       	brne	.-12     	; 0x2212 <put_fat+0x1ae>
    221e:	48 0f       	add	r20, r24
    2220:	59 1f       	adc	r21, r25
    2222:	6a 1f       	adc	r22, r26
    2224:	7b 1f       	adc	r23, r27
    2226:	cf 01       	movw	r24, r30
    2228:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    222c:	18 2f       	mov	r17, r24
    222e:	81 11       	cpse	r24, r1
    2230:	2b c0       	rjmp	.+86     	; 0x2288 <put_fat+0x224>
    2232:	ff e0       	ldi	r31, 0x0F	; 15
    2234:	7f 22       	and	r7, r31
    2236:	8b 81       	ldd	r24, Y+3	; 0x03
    2238:	9c 81       	ldd	r25, Y+4	; 0x04
    223a:	c0 96       	adiw	r24, 0x30	; 48
    223c:	cc 0c       	add	r12, r12
    223e:	dd 1c       	adc	r13, r13
    2240:	cc 0c       	add	r12, r12
    2242:	dd 1c       	adc	r13, r13
    2244:	2c ef       	ldi	r18, 0xFC	; 252
    2246:	c2 22       	and	r12, r18
    2248:	21 e0       	ldi	r18, 0x01	; 1
    224a:	d2 22       	and	r13, r18
    224c:	c8 0e       	add	r12, r24
    224e:	d9 1e       	adc	r13, r25
    2250:	c6 01       	movw	r24, r12
    2252:	0e 94 69 08 	call	0x10d2	; 0x10d2 <ld_dword>
    2256:	dc 01       	movw	r26, r24
    2258:	cb 01       	movw	r24, r22
    225a:	88 27       	eor	r24, r24
    225c:	99 27       	eor	r25, r25
    225e:	aa 27       	eor	r26, r26
    2260:	b0 7f       	andi	r27, 0xF0	; 240
    2262:	b3 01       	movw	r22, r6
    2264:	a2 01       	movw	r20, r4
    2266:	48 2b       	or	r20, r24
    2268:	59 2b       	or	r21, r25
    226a:	6a 2b       	or	r22, r26
    226c:	7b 2b       	or	r23, r27
    226e:	c6 01       	movw	r24, r12
    2270:	0e 94 88 08 	call	0x1110	; 0x1110 <st_dword>
    2274:	81 e0       	ldi	r24, 0x01	; 1
    2276:	eb 81       	ldd	r30, Y+3	; 0x03
    2278:	fc 81       	ldd	r31, Y+4	; 0x04
    227a:	84 83       	std	Z+4, r24	; 0x04
    227c:	05 c0       	rjmp	.+10     	; 0x2288 <put_fat+0x224>
    227e:	12 e0       	ldi	r17, 0x02	; 2
    2280:	03 c0       	rjmp	.+6      	; 0x2288 <put_fat+0x224>
    2282:	12 e0       	ldi	r17, 0x02	; 2
    2284:	01 c0       	rjmp	.+2      	; 0x2288 <put_fat+0x224>
    2286:	12 e0       	ldi	r17, 0x02	; 2
    2288:	81 2f       	mov	r24, r17
    228a:	0f 90       	pop	r0
    228c:	0f 90       	pop	r0
    228e:	0f 90       	pop	r0
    2290:	0f 90       	pop	r0
    2292:	df 91       	pop	r29
    2294:	cf 91       	pop	r28
    2296:	1f 91       	pop	r17
    2298:	0f 91       	pop	r16
    229a:	ff 90       	pop	r15
    229c:	ef 90       	pop	r14
    229e:	df 90       	pop	r13
    22a0:	cf 90       	pop	r12
    22a2:	bf 90       	pop	r11
    22a4:	af 90       	pop	r10
    22a6:	9f 90       	pop	r9
    22a8:	8f 90       	pop	r8
    22aa:	7f 90       	pop	r7
    22ac:	6f 90       	pop	r6
    22ae:	5f 90       	pop	r5
    22b0:	4f 90       	pop	r4
    22b2:	3f 90       	pop	r3
    22b4:	2f 90       	pop	r2
    22b6:	08 95       	ret

000022b8 <get_fat>:
    22b8:	af 92       	push	r10
    22ba:	bf 92       	push	r11
    22bc:	cf 92       	push	r12
    22be:	df 92       	push	r13
    22c0:	ef 92       	push	r14
    22c2:	ff 92       	push	r15
    22c4:	0f 93       	push	r16
    22c6:	1f 93       	push	r17
    22c8:	cf 93       	push	r28
    22ca:	df 93       	push	r29
    22cc:	fc 01       	movw	r30, r24
    22ce:	c0 81       	ld	r28, Z
    22d0:	d1 81       	ldd	r29, Z+1	; 0x01
    22d2:	42 30       	cpi	r20, 0x02	; 2
    22d4:	51 05       	cpc	r21, r1
    22d6:	61 05       	cpc	r22, r1
    22d8:	71 05       	cpc	r23, r1
    22da:	08 f4       	brcc	.+2      	; 0x22de <get_fat+0x26>
    22dc:	a6 c0       	rjmp	.+332    	; 0x242a <get_fat+0x172>
    22de:	8c 89       	ldd	r24, Y+20	; 0x14
    22e0:	9d 89       	ldd	r25, Y+21	; 0x15
    22e2:	ae 89       	ldd	r26, Y+22	; 0x16
    22e4:	bf 89       	ldd	r27, Y+23	; 0x17
    22e6:	48 17       	cp	r20, r24
    22e8:	59 07       	cpc	r21, r25
    22ea:	6a 07       	cpc	r22, r26
    22ec:	7b 07       	cpc	r23, r27
    22ee:	08 f0       	brcs	.+2      	; 0x22f2 <get_fat+0x3a>
    22f0:	a1 c0       	rjmp	.+322    	; 0x2434 <get_fat+0x17c>
    22f2:	6a 01       	movw	r12, r20
    22f4:	7b 01       	movw	r14, r22
    22f6:	88 81       	ld	r24, Y
    22f8:	82 30       	cpi	r24, 0x02	; 2
    22fa:	09 f4       	brne	.+2      	; 0x22fe <get_fat+0x46>
    22fc:	50 c0       	rjmp	.+160    	; 0x239e <get_fat+0xe6>
    22fe:	83 30       	cpi	r24, 0x03	; 3
    2300:	09 f4       	brne	.+2      	; 0x2304 <get_fat+0x4c>
    2302:	6d c0       	rjmp	.+218    	; 0x23de <get_fat+0x126>
    2304:	81 30       	cpi	r24, 0x01	; 1
    2306:	09 f0       	breq	.+2      	; 0x230a <get_fat+0x52>
    2308:	9a c0       	rjmp	.+308    	; 0x243e <get_fat+0x186>
    230a:	8a 01       	movw	r16, r20
    230c:	16 95       	lsr	r17
    230e:	07 95       	ror	r16
    2310:	04 0f       	add	r16, r20
    2312:	15 1f       	adc	r17, r21
    2314:	48 a1       	ldd	r20, Y+32	; 0x20
    2316:	59 a1       	ldd	r21, Y+33	; 0x21
    2318:	6a a1       	ldd	r22, Y+34	; 0x22
    231a:	7b a1       	ldd	r23, Y+35	; 0x23
    231c:	c8 01       	movw	r24, r16
    231e:	89 2f       	mov	r24, r25
    2320:	99 27       	eor	r25, r25
    2322:	86 95       	lsr	r24
    2324:	48 0f       	add	r20, r24
    2326:	59 1f       	adc	r21, r25
    2328:	61 1d       	adc	r22, r1
    232a:	71 1d       	adc	r23, r1
    232c:	ce 01       	movw	r24, r28
    232e:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    2332:	81 11       	cpse	r24, r1
    2334:	89 c0       	rjmp	.+274    	; 0x2448 <get_fat+0x190>
    2336:	58 01       	movw	r10, r16
    2338:	ff ef       	ldi	r31, 0xFF	; 255
    233a:	af 1a       	sub	r10, r31
    233c:	bf 0a       	sbc	r11, r31
    233e:	11 70       	andi	r17, 0x01	; 1
    2340:	fe 01       	movw	r30, r28
    2342:	e0 0f       	add	r30, r16
    2344:	f1 1f       	adc	r31, r17
    2346:	00 a9       	ldd	r16, Z+48	; 0x30
    2348:	10 e0       	ldi	r17, 0x00	; 0
    234a:	48 a1       	ldd	r20, Y+32	; 0x20
    234c:	59 a1       	ldd	r21, Y+33	; 0x21
    234e:	6a a1       	ldd	r22, Y+34	; 0x22
    2350:	7b a1       	ldd	r23, Y+35	; 0x23
    2352:	c5 01       	movw	r24, r10
    2354:	89 2f       	mov	r24, r25
    2356:	99 27       	eor	r25, r25
    2358:	86 95       	lsr	r24
    235a:	48 0f       	add	r20, r24
    235c:	59 1f       	adc	r21, r25
    235e:	61 1d       	adc	r22, r1
    2360:	71 1d       	adc	r23, r1
    2362:	ce 01       	movw	r24, r28
    2364:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    2368:	81 11       	cpse	r24, r1
    236a:	72 c0       	rjmp	.+228    	; 0x2450 <get_fat+0x198>
    236c:	81 e0       	ldi	r24, 0x01	; 1
    236e:	b8 22       	and	r11, r24
    2370:	ca 0d       	add	r28, r10
    2372:	db 1d       	adc	r29, r11
    2374:	68 a9       	ldd	r22, Y+48	; 0x30
    2376:	70 e0       	ldi	r23, 0x00	; 0
    2378:	76 2f       	mov	r23, r22
    237a:	66 27       	eor	r22, r22
    237c:	60 2b       	or	r22, r16
    237e:	71 2b       	or	r23, r17
    2380:	c0 fe       	sbrs	r12, 0
    2382:	09 c0       	rjmp	.+18     	; 0x2396 <get_fat+0xde>
    2384:	72 95       	swap	r23
    2386:	62 95       	swap	r22
    2388:	6f 70       	andi	r22, 0x0F	; 15
    238a:	67 27       	eor	r22, r23
    238c:	7f 70       	andi	r23, 0x0F	; 15
    238e:	67 27       	eor	r22, r23
    2390:	80 e0       	ldi	r24, 0x00	; 0
    2392:	90 e0       	ldi	r25, 0x00	; 0
    2394:	68 c0       	rjmp	.+208    	; 0x2466 <get_fat+0x1ae>
    2396:	7f 70       	andi	r23, 0x0F	; 15
    2398:	80 e0       	ldi	r24, 0x00	; 0
    239a:	90 e0       	ldi	r25, 0x00	; 0
    239c:	64 c0       	rjmp	.+200    	; 0x2466 <get_fat+0x1ae>
    239e:	48 a1       	ldd	r20, Y+32	; 0x20
    23a0:	59 a1       	ldd	r21, Y+33	; 0x21
    23a2:	6a a1       	ldd	r22, Y+34	; 0x22
    23a4:	7b a1       	ldd	r23, Y+35	; 0x23
    23a6:	bb 27       	eor	r27, r27
    23a8:	af 2d       	mov	r26, r15
    23aa:	9e 2d       	mov	r25, r14
    23ac:	8d 2d       	mov	r24, r13
    23ae:	48 0f       	add	r20, r24
    23b0:	59 1f       	adc	r21, r25
    23b2:	6a 1f       	adc	r22, r26
    23b4:	7b 1f       	adc	r23, r27
    23b6:	ce 01       	movw	r24, r28
    23b8:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    23bc:	81 11       	cpse	r24, r1
    23be:	4c c0       	rjmp	.+152    	; 0x2458 <get_fat+0x1a0>
    23c0:	ce 01       	movw	r24, r28
    23c2:	c0 96       	adiw	r24, 0x30	; 48
    23c4:	a6 01       	movw	r20, r12
    23c6:	44 0f       	add	r20, r20
    23c8:	55 1f       	adc	r21, r21
    23ca:	4e 7f       	andi	r20, 0xFE	; 254
    23cc:	51 70       	andi	r21, 0x01	; 1
    23ce:	84 0f       	add	r24, r20
    23d0:	95 1f       	adc	r25, r21
    23d2:	0e 94 5f 08 	call	0x10be	; 0x10be <ld_word>
    23d6:	bc 01       	movw	r22, r24
    23d8:	80 e0       	ldi	r24, 0x00	; 0
    23da:	90 e0       	ldi	r25, 0x00	; 0
    23dc:	44 c0       	rjmp	.+136    	; 0x2466 <get_fat+0x1ae>
    23de:	48 a1       	ldd	r20, Y+32	; 0x20
    23e0:	59 a1       	ldd	r21, Y+33	; 0x21
    23e2:	6a a1       	ldd	r22, Y+34	; 0x22
    23e4:	7b a1       	ldd	r23, Y+35	; 0x23
    23e6:	d7 01       	movw	r26, r14
    23e8:	c6 01       	movw	r24, r12
    23ea:	68 94       	set
    23ec:	16 f8       	bld	r1, 6
    23ee:	b6 95       	lsr	r27
    23f0:	a7 95       	ror	r26
    23f2:	97 95       	ror	r25
    23f4:	87 95       	ror	r24
    23f6:	16 94       	lsr	r1
    23f8:	d1 f7       	brne	.-12     	; 0x23ee <get_fat+0x136>
    23fa:	48 0f       	add	r20, r24
    23fc:	59 1f       	adc	r21, r25
    23fe:	6a 1f       	adc	r22, r26
    2400:	7b 1f       	adc	r23, r27
    2402:	ce 01       	movw	r24, r28
    2404:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    2408:	81 11       	cpse	r24, r1
    240a:	2a c0       	rjmp	.+84     	; 0x2460 <get_fat+0x1a8>
    240c:	e0 96       	adiw	r28, 0x30	; 48
    240e:	a6 01       	movw	r20, r12
    2410:	44 0f       	add	r20, r20
    2412:	55 1f       	adc	r21, r21
    2414:	44 0f       	add	r20, r20
    2416:	55 1f       	adc	r21, r21
    2418:	ca 01       	movw	r24, r20
    241a:	8c 7f       	andi	r24, 0xFC	; 252
    241c:	91 70       	andi	r25, 0x01	; 1
    241e:	8c 0f       	add	r24, r28
    2420:	9d 1f       	adc	r25, r29
    2422:	0e 94 69 08 	call	0x10d2	; 0x10d2 <ld_dword>
    2426:	9f 70       	andi	r25, 0x0F	; 15
    2428:	1e c0       	rjmp	.+60     	; 0x2466 <get_fat+0x1ae>
    242a:	61 e0       	ldi	r22, 0x01	; 1
    242c:	70 e0       	ldi	r23, 0x00	; 0
    242e:	80 e0       	ldi	r24, 0x00	; 0
    2430:	90 e0       	ldi	r25, 0x00	; 0
    2432:	19 c0       	rjmp	.+50     	; 0x2466 <get_fat+0x1ae>
    2434:	61 e0       	ldi	r22, 0x01	; 1
    2436:	70 e0       	ldi	r23, 0x00	; 0
    2438:	80 e0       	ldi	r24, 0x00	; 0
    243a:	90 e0       	ldi	r25, 0x00	; 0
    243c:	14 c0       	rjmp	.+40     	; 0x2466 <get_fat+0x1ae>
    243e:	61 e0       	ldi	r22, 0x01	; 1
    2440:	70 e0       	ldi	r23, 0x00	; 0
    2442:	80 e0       	ldi	r24, 0x00	; 0
    2444:	90 e0       	ldi	r25, 0x00	; 0
    2446:	0f c0       	rjmp	.+30     	; 0x2466 <get_fat+0x1ae>
    2448:	6f ef       	ldi	r22, 0xFF	; 255
    244a:	7f ef       	ldi	r23, 0xFF	; 255
    244c:	cb 01       	movw	r24, r22
    244e:	0b c0       	rjmp	.+22     	; 0x2466 <get_fat+0x1ae>
    2450:	6f ef       	ldi	r22, 0xFF	; 255
    2452:	7f ef       	ldi	r23, 0xFF	; 255
    2454:	cb 01       	movw	r24, r22
    2456:	07 c0       	rjmp	.+14     	; 0x2466 <get_fat+0x1ae>
    2458:	6f ef       	ldi	r22, 0xFF	; 255
    245a:	7f ef       	ldi	r23, 0xFF	; 255
    245c:	cb 01       	movw	r24, r22
    245e:	03 c0       	rjmp	.+6      	; 0x2466 <get_fat+0x1ae>
    2460:	6f ef       	ldi	r22, 0xFF	; 255
    2462:	7f ef       	ldi	r23, 0xFF	; 255
    2464:	cb 01       	movw	r24, r22
    2466:	df 91       	pop	r29
    2468:	cf 91       	pop	r28
    246a:	1f 91       	pop	r17
    246c:	0f 91       	pop	r16
    246e:	ff 90       	pop	r15
    2470:	ef 90       	pop	r14
    2472:	df 90       	pop	r13
    2474:	cf 90       	pop	r12
    2476:	bf 90       	pop	r11
    2478:	af 90       	pop	r10
    247a:	08 95       	ret

0000247c <dir_sdi>:
    247c:	4f 92       	push	r4
    247e:	5f 92       	push	r5
    2480:	6f 92       	push	r6
    2482:	7f 92       	push	r7
    2484:	8f 92       	push	r8
    2486:	9f 92       	push	r9
    2488:	af 92       	push	r10
    248a:	bf 92       	push	r11
    248c:	cf 92       	push	r12
    248e:	df 92       	push	r13
    2490:	ef 92       	push	r14
    2492:	ff 92       	push	r15
    2494:	0f 93       	push	r16
    2496:	1f 93       	push	r17
    2498:	cf 93       	push	r28
    249a:	df 93       	push	r29
    249c:	ec 01       	movw	r28, r24
    249e:	6a 01       	movw	r12, r20
    24a0:	7b 01       	movw	r14, r22
    24a2:	08 81       	ld	r16, Y
    24a4:	19 81       	ldd	r17, Y+1	; 0x01
    24a6:	41 15       	cp	r20, r1
    24a8:	51 05       	cpc	r21, r1
    24aa:	80 e2       	ldi	r24, 0x20	; 32
    24ac:	68 07       	cpc	r22, r24
    24ae:	71 05       	cpc	r23, r1
    24b0:	08 f0       	brcs	.+2      	; 0x24b4 <dir_sdi+0x38>
    24b2:	ac c0       	rjmp	.+344    	; 0x260c <dir_sdi+0x190>
    24b4:	db 01       	movw	r26, r22
    24b6:	ca 01       	movw	r24, r20
    24b8:	8f 71       	andi	r24, 0x1F	; 31
    24ba:	99 27       	eor	r25, r25
    24bc:	aa 27       	eor	r26, r26
    24be:	bb 27       	eor	r27, r27
    24c0:	89 2b       	or	r24, r25
    24c2:	8a 2b       	or	r24, r26
    24c4:	8b 2b       	or	r24, r27
    24c6:	09 f0       	breq	.+2      	; 0x24ca <dir_sdi+0x4e>
    24c8:	a3 c0       	rjmp	.+326    	; 0x2610 <dir_sdi+0x194>
    24ca:	4e 87       	std	Y+14, r20	; 0x0e
    24cc:	5f 87       	std	Y+15, r21	; 0x0f
    24ce:	68 8b       	std	Y+16, r22	; 0x10
    24d0:	79 8b       	std	Y+17, r23	; 0x11
    24d2:	8e 80       	ldd	r8, Y+6	; 0x06
    24d4:	9f 80       	ldd	r9, Y+7	; 0x07
    24d6:	a8 84       	ldd	r10, Y+8	; 0x08
    24d8:	b9 84       	ldd	r11, Y+9	; 0x09
    24da:	81 14       	cp	r8, r1
    24dc:	91 04       	cpc	r9, r1
    24de:	a1 04       	cpc	r10, r1
    24e0:	b1 04       	cpc	r11, r1
    24e2:	41 f4       	brne	.+16     	; 0x24f4 <dir_sdi+0x78>
    24e4:	f8 01       	movw	r30, r16
    24e6:	80 81       	ld	r24, Z
    24e8:	83 30       	cpi	r24, 0x03	; 3
    24ea:	20 f0       	brcs	.+8      	; 0x24f4 <dir_sdi+0x78>
    24ec:	84 a0       	ldd	r8, Z+36	; 0x24
    24ee:	95 a0       	ldd	r9, Z+37	; 0x25
    24f0:	a6 a0       	ldd	r10, Z+38	; 0x26
    24f2:	b7 a0       	ldd	r11, Z+39	; 0x27
    24f4:	81 14       	cp	r8, r1
    24f6:	91 04       	cpc	r9, r1
    24f8:	a1 04       	cpc	r10, r1
    24fa:	b1 04       	cpc	r11, r1
    24fc:	f1 f4       	brne	.+60     	; 0x253a <dir_sdi+0xbe>
    24fe:	f8 01       	movw	r30, r16
    2500:	80 85       	ldd	r24, Z+8	; 0x08
    2502:	91 85       	ldd	r25, Z+9	; 0x09
    2504:	a0 e0       	ldi	r26, 0x00	; 0
    2506:	b0 e0       	ldi	r27, 0x00	; 0
    2508:	b7 01       	movw	r22, r14
    250a:	a6 01       	movw	r20, r12
    250c:	68 94       	set
    250e:	14 f8       	bld	r1, 4
    2510:	76 95       	lsr	r23
    2512:	67 95       	ror	r22
    2514:	57 95       	ror	r21
    2516:	47 95       	ror	r20
    2518:	16 94       	lsr	r1
    251a:	d1 f7       	brne	.-12     	; 0x2510 <dir_sdi+0x94>
    251c:	48 17       	cp	r20, r24
    251e:	59 07       	cpc	r21, r25
    2520:	6a 07       	cpc	r22, r26
    2522:	7b 07       	cpc	r23, r27
    2524:	08 f0       	brcs	.+2      	; 0x2528 <dir_sdi+0xac>
    2526:	76 c0       	rjmp	.+236    	; 0x2614 <dir_sdi+0x198>
    2528:	84 a1       	ldd	r24, Z+36	; 0x24
    252a:	95 a1       	ldd	r25, Z+37	; 0x25
    252c:	a6 a1       	ldd	r26, Z+38	; 0x26
    252e:	b7 a1       	ldd	r27, Z+39	; 0x27
    2530:	8e 8b       	std	Y+22, r24	; 0x16
    2532:	9f 8b       	std	Y+23, r25	; 0x17
    2534:	a8 8f       	std	Y+24, r26	; 0x18
    2536:	b9 8f       	std	Y+25, r27	; 0x19
    2538:	40 c0       	rjmp	.+128    	; 0x25ba <dir_sdi+0x13e>
    253a:	f8 01       	movw	r30, r16
    253c:	42 84       	ldd	r4, Z+10	; 0x0a
    253e:	53 84       	ldd	r5, Z+11	; 0x0b
    2540:	61 2c       	mov	r6, r1
    2542:	71 2c       	mov	r7, r1
    2544:	03 2e       	mov	r0, r19
    2546:	39 e0       	ldi	r19, 0x09	; 9
    2548:	44 0c       	add	r4, r4
    254a:	55 1c       	adc	r5, r5
    254c:	66 1c       	adc	r6, r6
    254e:	77 1c       	adc	r7, r7
    2550:	3a 95       	dec	r19
    2552:	d1 f7       	brne	.-12     	; 0x2548 <dir_sdi+0xcc>
    2554:	30 2d       	mov	r19, r0
    2556:	23 c0       	rjmp	.+70     	; 0x259e <dir_sdi+0x122>
    2558:	b5 01       	movw	r22, r10
    255a:	a4 01       	movw	r20, r8
    255c:	ce 01       	movw	r24, r28
    255e:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <get_fat>
    2562:	4b 01       	movw	r8, r22
    2564:	5c 01       	movw	r10, r24
    2566:	6f 3f       	cpi	r22, 0xFF	; 255
    2568:	7f 4f       	sbci	r23, 0xFF	; 255
    256a:	8f 4f       	sbci	r24, 0xFF	; 255
    256c:	9f 4f       	sbci	r25, 0xFF	; 255
    256e:	09 f4       	brne	.+2      	; 0x2572 <dir_sdi+0xf6>
    2570:	53 c0       	rjmp	.+166    	; 0x2618 <dir_sdi+0x19c>
    2572:	82 e0       	ldi	r24, 0x02	; 2
    2574:	88 16       	cp	r8, r24
    2576:	91 04       	cpc	r9, r1
    2578:	a1 04       	cpc	r10, r1
    257a:	b1 04       	cpc	r11, r1
    257c:	08 f4       	brcc	.+2      	; 0x2580 <dir_sdi+0x104>
    257e:	4e c0       	rjmp	.+156    	; 0x261c <dir_sdi+0x1a0>
    2580:	f8 01       	movw	r30, r16
    2582:	84 89       	ldd	r24, Z+20	; 0x14
    2584:	95 89       	ldd	r25, Z+21	; 0x15
    2586:	a6 89       	ldd	r26, Z+22	; 0x16
    2588:	b7 89       	ldd	r27, Z+23	; 0x17
    258a:	88 16       	cp	r8, r24
    258c:	99 06       	cpc	r9, r25
    258e:	aa 06       	cpc	r10, r26
    2590:	bb 06       	cpc	r11, r27
    2592:	08 f0       	brcs	.+2      	; 0x2596 <dir_sdi+0x11a>
    2594:	45 c0       	rjmp	.+138    	; 0x2620 <dir_sdi+0x1a4>
    2596:	c4 18       	sub	r12, r4
    2598:	d5 08       	sbc	r13, r5
    259a:	e6 08       	sbc	r14, r6
    259c:	f7 08       	sbc	r15, r7
    259e:	c4 14       	cp	r12, r4
    25a0:	d5 04       	cpc	r13, r5
    25a2:	e6 04       	cpc	r14, r6
    25a4:	f7 04       	cpc	r15, r7
    25a6:	c0 f6       	brcc	.-80     	; 0x2558 <dir_sdi+0xdc>
    25a8:	b5 01       	movw	r22, r10
    25aa:	a4 01       	movw	r20, r8
    25ac:	c8 01       	movw	r24, r16
    25ae:	0e 94 be 08 	call	0x117c	; 0x117c <clst2sect>
    25b2:	6e 8b       	std	Y+22, r22	; 0x16
    25b4:	7f 8b       	std	Y+23, r23	; 0x17
    25b6:	88 8f       	std	Y+24, r24	; 0x18
    25b8:	99 8f       	std	Y+25, r25	; 0x19
    25ba:	8a 8a       	std	Y+18, r8	; 0x12
    25bc:	9b 8a       	std	Y+19, r9	; 0x13
    25be:	ac 8a       	std	Y+20, r10	; 0x14
    25c0:	bd 8a       	std	Y+21, r11	; 0x15
    25c2:	8e 89       	ldd	r24, Y+22	; 0x16
    25c4:	9f 89       	ldd	r25, Y+23	; 0x17
    25c6:	a8 8d       	ldd	r26, Y+24	; 0x18
    25c8:	b9 8d       	ldd	r27, Y+25	; 0x19
    25ca:	00 97       	sbiw	r24, 0x00	; 0
    25cc:	a1 05       	cpc	r26, r1
    25ce:	b1 05       	cpc	r27, r1
    25d0:	49 f1       	breq	.+82     	; 0x2624 <dir_sdi+0x1a8>
    25d2:	b7 01       	movw	r22, r14
    25d4:	a6 01       	movw	r20, r12
    25d6:	03 2e       	mov	r0, r19
    25d8:	39 e0       	ldi	r19, 0x09	; 9
    25da:	76 95       	lsr	r23
    25dc:	67 95       	ror	r22
    25de:	57 95       	ror	r21
    25e0:	47 95       	ror	r20
    25e2:	3a 95       	dec	r19
    25e4:	d1 f7       	brne	.-12     	; 0x25da <dir_sdi+0x15e>
    25e6:	30 2d       	mov	r19, r0
    25e8:	84 0f       	add	r24, r20
    25ea:	95 1f       	adc	r25, r21
    25ec:	a6 1f       	adc	r26, r22
    25ee:	b7 1f       	adc	r27, r23
    25f0:	8e 8b       	std	Y+22, r24	; 0x16
    25f2:	9f 8b       	std	Y+23, r25	; 0x17
    25f4:	a8 8f       	std	Y+24, r26	; 0x18
    25f6:	b9 8f       	std	Y+25, r27	; 0x19
    25f8:	00 5d       	subi	r16, 0xD0	; 208
    25fa:	1f 4f       	sbci	r17, 0xFF	; 255
    25fc:	f1 e0       	ldi	r31, 0x01	; 1
    25fe:	df 22       	and	r13, r31
    2600:	c0 0e       	add	r12, r16
    2602:	d1 1e       	adc	r13, r17
    2604:	db 8e       	std	Y+27, r13	; 0x1b
    2606:	ca 8e       	std	Y+26, r12	; 0x1a
    2608:	80 e0       	ldi	r24, 0x00	; 0
    260a:	0d c0       	rjmp	.+26     	; 0x2626 <dir_sdi+0x1aa>
    260c:	82 e0       	ldi	r24, 0x02	; 2
    260e:	0b c0       	rjmp	.+22     	; 0x2626 <dir_sdi+0x1aa>
    2610:	82 e0       	ldi	r24, 0x02	; 2
    2612:	09 c0       	rjmp	.+18     	; 0x2626 <dir_sdi+0x1aa>
    2614:	82 e0       	ldi	r24, 0x02	; 2
    2616:	07 c0       	rjmp	.+14     	; 0x2626 <dir_sdi+0x1aa>
    2618:	81 e0       	ldi	r24, 0x01	; 1
    261a:	05 c0       	rjmp	.+10     	; 0x2626 <dir_sdi+0x1aa>
    261c:	82 e0       	ldi	r24, 0x02	; 2
    261e:	03 c0       	rjmp	.+6      	; 0x2626 <dir_sdi+0x1aa>
    2620:	82 e0       	ldi	r24, 0x02	; 2
    2622:	01 c0       	rjmp	.+2      	; 0x2626 <dir_sdi+0x1aa>
    2624:	82 e0       	ldi	r24, 0x02	; 2
    2626:	df 91       	pop	r29
    2628:	cf 91       	pop	r28
    262a:	1f 91       	pop	r17
    262c:	0f 91       	pop	r16
    262e:	ff 90       	pop	r15
    2630:	ef 90       	pop	r14
    2632:	df 90       	pop	r13
    2634:	cf 90       	pop	r12
    2636:	bf 90       	pop	r11
    2638:	af 90       	pop	r10
    263a:	9f 90       	pop	r9
    263c:	8f 90       	pop	r8
    263e:	7f 90       	pop	r7
    2640:	6f 90       	pop	r6
    2642:	5f 90       	pop	r5
    2644:	4f 90       	pop	r4
    2646:	08 95       	ret

00002648 <create_chain>:
    2648:	4f 92       	push	r4
    264a:	5f 92       	push	r5
    264c:	6f 92       	push	r6
    264e:	7f 92       	push	r7
    2650:	8f 92       	push	r8
    2652:	9f 92       	push	r9
    2654:	af 92       	push	r10
    2656:	bf 92       	push	r11
    2658:	cf 92       	push	r12
    265a:	df 92       	push	r13
    265c:	ef 92       	push	r14
    265e:	ff 92       	push	r15
    2660:	0f 93       	push	r16
    2662:	1f 93       	push	r17
    2664:	cf 93       	push	r28
    2666:	df 93       	push	r29
    2668:	8c 01       	movw	r16, r24
    266a:	2a 01       	movw	r4, r20
    266c:	3b 01       	movw	r6, r22
    266e:	fc 01       	movw	r30, r24
    2670:	c0 81       	ld	r28, Z
    2672:	d1 81       	ldd	r29, Z+1	; 0x01
    2674:	41 15       	cp	r20, r1
    2676:	51 05       	cpc	r21, r1
    2678:	61 05       	cpc	r22, r1
    267a:	71 05       	cpc	r23, r1
    267c:	99 f4       	brne	.+38     	; 0x26a4 <create_chain+0x5c>
    267e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2680:	9d 84       	ldd	r9, Y+13	; 0x0d
    2682:	ae 84       	ldd	r10, Y+14	; 0x0e
    2684:	bf 84       	ldd	r11, Y+15	; 0x0f
    2686:	81 14       	cp	r8, r1
    2688:	91 04       	cpc	r9, r1
    268a:	a1 04       	cpc	r10, r1
    268c:	b1 04       	cpc	r11, r1
    268e:	31 f1       	breq	.+76     	; 0x26dc <create_chain+0x94>
    2690:	8c 89       	ldd	r24, Y+20	; 0x14
    2692:	9d 89       	ldd	r25, Y+21	; 0x15
    2694:	ae 89       	ldd	r26, Y+22	; 0x16
    2696:	bf 89       	ldd	r27, Y+23	; 0x17
    2698:	88 16       	cp	r8, r24
    269a:	99 06       	cpc	r9, r25
    269c:	aa 06       	cpc	r10, r26
    269e:	bb 06       	cpc	r11, r27
    26a0:	10 f5       	brcc	.+68     	; 0x26e6 <create_chain+0x9e>
    26a2:	25 c0       	rjmp	.+74     	; 0x26ee <create_chain+0xa6>
    26a4:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <get_fat>
    26a8:	62 30       	cpi	r22, 0x02	; 2
    26aa:	71 05       	cpc	r23, r1
    26ac:	81 05       	cpc	r24, r1
    26ae:	91 05       	cpc	r25, r1
    26b0:	08 f4       	brcc	.+2      	; 0x26b4 <create_chain+0x6c>
    26b2:	f9 c0       	rjmp	.+498    	; 0x28a6 <create_chain+0x25e>
    26b4:	6f 3f       	cpi	r22, 0xFF	; 255
    26b6:	ff ef       	ldi	r31, 0xFF	; 255
    26b8:	7f 07       	cpc	r23, r31
    26ba:	8f 07       	cpc	r24, r31
    26bc:	9f 07       	cpc	r25, r31
    26be:	09 f4       	brne	.+2      	; 0x26c2 <create_chain+0x7a>
    26c0:	03 c1       	rjmp	.+518    	; 0x28c8 <create_chain+0x280>
    26c2:	cc 88       	ldd	r12, Y+20	; 0x14
    26c4:	dd 88       	ldd	r13, Y+21	; 0x15
    26c6:	ee 88       	ldd	r14, Y+22	; 0x16
    26c8:	ff 88       	ldd	r15, Y+23	; 0x17
    26ca:	6c 15       	cp	r22, r12
    26cc:	7d 05       	cpc	r23, r13
    26ce:	8e 05       	cpc	r24, r14
    26d0:	9f 05       	cpc	r25, r15
    26d2:	08 f4       	brcc	.+2      	; 0x26d6 <create_chain+0x8e>
    26d4:	f9 c0       	rjmp	.+498    	; 0x28c8 <create_chain+0x280>
    26d6:	53 01       	movw	r10, r6
    26d8:	42 01       	movw	r8, r4
    26da:	09 c0       	rjmp	.+18     	; 0x26ee <create_chain+0xa6>
    26dc:	81 2c       	mov	r8, r1
    26de:	91 2c       	mov	r9, r1
    26e0:	54 01       	movw	r10, r8
    26e2:	83 94       	inc	r8
    26e4:	04 c0       	rjmp	.+8      	; 0x26ee <create_chain+0xa6>
    26e6:	81 2c       	mov	r8, r1
    26e8:	91 2c       	mov	r9, r1
    26ea:	54 01       	movw	r10, r8
    26ec:	83 94       	inc	r8
    26ee:	68 89       	ldd	r22, Y+16	; 0x10
    26f0:	79 89       	ldd	r23, Y+17	; 0x11
    26f2:	8a 89       	ldd	r24, Y+18	; 0x12
    26f4:	9b 89       	ldd	r25, Y+19	; 0x13
    26f6:	61 15       	cp	r22, r1
    26f8:	71 05       	cpc	r23, r1
    26fa:	81 05       	cpc	r24, r1
    26fc:	91 05       	cpc	r25, r1
    26fe:	09 f4       	brne	.+2      	; 0x2702 <create_chain+0xba>
    2700:	e3 c0       	rjmp	.+454    	; 0x28c8 <create_chain+0x280>
    2702:	84 14       	cp	r8, r4
    2704:	95 04       	cpc	r9, r5
    2706:	a6 04       	cpc	r10, r6
    2708:	b7 04       	cpc	r11, r7
    270a:	09 f0       	breq	.+2      	; 0x270e <create_chain+0xc6>
    270c:	41 c0       	rjmp	.+130    	; 0x2790 <create_chain+0x148>
    270e:	75 01       	movw	r14, r10
    2710:	64 01       	movw	r12, r8
    2712:	2f ef       	ldi	r18, 0xFF	; 255
    2714:	c2 1a       	sub	r12, r18
    2716:	d2 0a       	sbc	r13, r18
    2718:	e2 0a       	sbc	r14, r18
    271a:	f2 0a       	sbc	r15, r18
    271c:	8c 89       	ldd	r24, Y+20	; 0x14
    271e:	9d 89       	ldd	r25, Y+21	; 0x15
    2720:	ae 89       	ldd	r26, Y+22	; 0x16
    2722:	bf 89       	ldd	r27, Y+23	; 0x17
    2724:	c8 16       	cp	r12, r24
    2726:	d9 06       	cpc	r13, r25
    2728:	ea 06       	cpc	r14, r26
    272a:	fb 06       	cpc	r15, r27
    272c:	28 f0       	brcs	.+10     	; 0x2738 <create_chain+0xf0>
    272e:	c1 2c       	mov	r12, r1
    2730:	d1 2c       	mov	r13, r1
    2732:	76 01       	movw	r14, r12
    2734:	68 94       	set
    2736:	c1 f8       	bld	r12, 1
    2738:	b7 01       	movw	r22, r14
    273a:	a6 01       	movw	r20, r12
    273c:	c8 01       	movw	r24, r16
    273e:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <get_fat>
    2742:	61 30       	cpi	r22, 0x01	; 1
    2744:	71 05       	cpc	r23, r1
    2746:	81 05       	cpc	r24, r1
    2748:	91 05       	cpc	r25, r1
    274a:	09 f4       	brne	.+2      	; 0x274e <create_chain+0x106>
    274c:	bd c0       	rjmp	.+378    	; 0x28c8 <create_chain+0x280>
    274e:	6f 3f       	cpi	r22, 0xFF	; 255
    2750:	ef ef       	ldi	r30, 0xFF	; 255
    2752:	7e 07       	cpc	r23, r30
    2754:	8e 07       	cpc	r24, r30
    2756:	9e 07       	cpc	r25, r30
    2758:	09 f4       	brne	.+2      	; 0x275c <create_chain+0x114>
    275a:	b6 c0       	rjmp	.+364    	; 0x28c8 <create_chain+0x280>
    275c:	67 2b       	or	r22, r23
    275e:	68 2b       	or	r22, r24
    2760:	69 2b       	or	r22, r25
    2762:	19 f1       	breq	.+70     	; 0x27aa <create_chain+0x162>
    2764:	8c 85       	ldd	r24, Y+12	; 0x0c
    2766:	9d 85       	ldd	r25, Y+13	; 0x0d
    2768:	ae 85       	ldd	r26, Y+14	; 0x0e
    276a:	bf 85       	ldd	r27, Y+15	; 0x0f
    276c:	82 30       	cpi	r24, 0x02	; 2
    276e:	91 05       	cpc	r25, r1
    2770:	a1 05       	cpc	r26, r1
    2772:	b1 05       	cpc	r27, r1
    2774:	88 f0       	brcs	.+34     	; 0x2798 <create_chain+0x150>
    2776:	4c 89       	ldd	r20, Y+20	; 0x14
    2778:	5d 89       	ldd	r21, Y+21	; 0x15
    277a:	6e 89       	ldd	r22, Y+22	; 0x16
    277c:	7f 89       	ldd	r23, Y+23	; 0x17
    277e:	84 17       	cp	r24, r20
    2780:	95 07       	cpc	r25, r21
    2782:	a6 07       	cpc	r26, r22
    2784:	b7 07       	cpc	r27, r23
    2786:	60 f0       	brcs	.+24     	; 0x27a0 <create_chain+0x158>
    2788:	c1 2c       	mov	r12, r1
    278a:	d1 2c       	mov	r13, r1
    278c:	76 01       	movw	r14, r12
    278e:	0d c0       	rjmp	.+26     	; 0x27aa <create_chain+0x162>
    2790:	c1 2c       	mov	r12, r1
    2792:	d1 2c       	mov	r13, r1
    2794:	76 01       	movw	r14, r12
    2796:	09 c0       	rjmp	.+18     	; 0x27aa <create_chain+0x162>
    2798:	c1 2c       	mov	r12, r1
    279a:	d1 2c       	mov	r13, r1
    279c:	76 01       	movw	r14, r12
    279e:	05 c0       	rjmp	.+10     	; 0x27aa <create_chain+0x162>
    27a0:	4c 01       	movw	r8, r24
    27a2:	5d 01       	movw	r10, r26
    27a4:	c1 2c       	mov	r12, r1
    27a6:	d1 2c       	mov	r13, r1
    27a8:	76 01       	movw	r14, r12
    27aa:	c1 14       	cp	r12, r1
    27ac:	d1 04       	cpc	r13, r1
    27ae:	e1 04       	cpc	r14, r1
    27b0:	f1 04       	cpc	r15, r1
    27b2:	c9 f5       	brne	.+114    	; 0x2826 <create_chain+0x1de>
    27b4:	75 01       	movw	r14, r10
    27b6:	64 01       	movw	r12, r8
    27b8:	ff ef       	ldi	r31, 0xFF	; 255
    27ba:	cf 1a       	sub	r12, r31
    27bc:	df 0a       	sbc	r13, r31
    27be:	ef 0a       	sbc	r14, r31
    27c0:	ff 0a       	sbc	r15, r31
    27c2:	8c 89       	ldd	r24, Y+20	; 0x14
    27c4:	9d 89       	ldd	r25, Y+21	; 0x15
    27c6:	ae 89       	ldd	r26, Y+22	; 0x16
    27c8:	bf 89       	ldd	r27, Y+23	; 0x17
    27ca:	c8 16       	cp	r12, r24
    27cc:	d9 06       	cpc	r13, r25
    27ce:	ea 06       	cpc	r14, r26
    27d0:	fb 06       	cpc	r15, r27
    27d2:	60 f0       	brcs	.+24     	; 0x27ec <create_chain+0x1a4>
    27d4:	22 e0       	ldi	r18, 0x02	; 2
    27d6:	82 16       	cp	r8, r18
    27d8:	91 04       	cpc	r9, r1
    27da:	a1 04       	cpc	r10, r1
    27dc:	b1 04       	cpc	r11, r1
    27de:	08 f4       	brcc	.+2      	; 0x27e2 <create_chain+0x19a>
    27e0:	67 c0       	rjmp	.+206    	; 0x28b0 <create_chain+0x268>
    27e2:	c1 2c       	mov	r12, r1
    27e4:	d1 2c       	mov	r13, r1
    27e6:	76 01       	movw	r14, r12
    27e8:	68 94       	set
    27ea:	c1 f8       	bld	r12, 1
    27ec:	b7 01       	movw	r22, r14
    27ee:	a6 01       	movw	r20, r12
    27f0:	c8 01       	movw	r24, r16
    27f2:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <get_fat>
    27f6:	61 15       	cp	r22, r1
    27f8:	71 05       	cpc	r23, r1
    27fa:	81 05       	cpc	r24, r1
    27fc:	91 05       	cpc	r25, r1
    27fe:	99 f0       	breq	.+38     	; 0x2826 <create_chain+0x1de>
    2800:	61 30       	cpi	r22, 0x01	; 1
    2802:	71 05       	cpc	r23, r1
    2804:	81 05       	cpc	r24, r1
    2806:	91 05       	cpc	r25, r1
    2808:	09 f4       	brne	.+2      	; 0x280c <create_chain+0x1c4>
    280a:	5e c0       	rjmp	.+188    	; 0x28c8 <create_chain+0x280>
    280c:	6f 3f       	cpi	r22, 0xFF	; 255
    280e:	ef ef       	ldi	r30, 0xFF	; 255
    2810:	7e 07       	cpc	r23, r30
    2812:	8e 07       	cpc	r24, r30
    2814:	9e 07       	cpc	r25, r30
    2816:	09 f4       	brne	.+2      	; 0x281a <create_chain+0x1d2>
    2818:	57 c0       	rjmp	.+174    	; 0x28c8 <create_chain+0x280>
    281a:	c8 14       	cp	r12, r8
    281c:	d9 04       	cpc	r13, r9
    281e:	ea 04       	cpc	r14, r10
    2820:	fb 04       	cpc	r15, r11
    2822:	51 f6       	brne	.-108    	; 0x27b8 <create_chain+0x170>
    2824:	49 c0       	rjmp	.+146    	; 0x28b8 <create_chain+0x270>
    2826:	0f ef       	ldi	r16, 0xFF	; 255
    2828:	1f ef       	ldi	r17, 0xFF	; 255
    282a:	98 01       	movw	r18, r16
    282c:	b7 01       	movw	r22, r14
    282e:	a6 01       	movw	r20, r12
    2830:	ce 01       	movw	r24, r28
    2832:	0e 94 32 10 	call	0x2064	; 0x2064 <put_fat>
    2836:	81 11       	cpse	r24, r1
    2838:	0c c0       	rjmp	.+24     	; 0x2852 <create_chain+0x20a>
    283a:	41 14       	cp	r4, r1
    283c:	51 04       	cpc	r5, r1
    283e:	61 04       	cpc	r6, r1
    2840:	71 04       	cpc	r7, r1
    2842:	39 f0       	breq	.+14     	; 0x2852 <create_chain+0x20a>
    2844:	97 01       	movw	r18, r14
    2846:	86 01       	movw	r16, r12
    2848:	b3 01       	movw	r22, r6
    284a:	a2 01       	movw	r20, r4
    284c:	ce 01       	movw	r24, r28
    284e:	0e 94 32 10 	call	0x2064	; 0x2064 <put_fat>
    2852:	81 11       	cpse	r24, r1
    2854:	22 c0       	rjmp	.+68     	; 0x289a <create_chain+0x252>
    2856:	cc 86       	std	Y+12, r12	; 0x0c
    2858:	dd 86       	std	Y+13, r13	; 0x0d
    285a:	ee 86       	std	Y+14, r14	; 0x0e
    285c:	ff 86       	std	Y+15, r15	; 0x0f
    285e:	48 89       	ldd	r20, Y+16	; 0x10
    2860:	59 89       	ldd	r21, Y+17	; 0x11
    2862:	6a 89       	ldd	r22, Y+18	; 0x12
    2864:	7b 89       	ldd	r23, Y+19	; 0x13
    2866:	8c 89       	ldd	r24, Y+20	; 0x14
    2868:	9d 89       	ldd	r25, Y+21	; 0x15
    286a:	ae 89       	ldd	r26, Y+22	; 0x16
    286c:	bf 89       	ldd	r27, Y+23	; 0x17
    286e:	02 97       	sbiw	r24, 0x02	; 2
    2870:	a1 09       	sbc	r26, r1
    2872:	b1 09       	sbc	r27, r1
    2874:	84 17       	cp	r24, r20
    2876:	95 07       	cpc	r25, r21
    2878:	a6 07       	cpc	r26, r22
    287a:	b7 07       	cpc	r27, r23
    287c:	40 f0       	brcs	.+16     	; 0x288e <create_chain+0x246>
    287e:	41 50       	subi	r20, 0x01	; 1
    2880:	51 09       	sbc	r21, r1
    2882:	61 09       	sbc	r22, r1
    2884:	71 09       	sbc	r23, r1
    2886:	48 8b       	std	Y+16, r20	; 0x10
    2888:	59 8b       	std	Y+17, r21	; 0x11
    288a:	6a 8b       	std	Y+18, r22	; 0x12
    288c:	7b 8b       	std	Y+19, r23	; 0x13
    288e:	8d 81       	ldd	r24, Y+5	; 0x05
    2890:	81 60       	ori	r24, 0x01	; 1
    2892:	8d 83       	std	Y+5, r24	; 0x05
    2894:	c7 01       	movw	r24, r14
    2896:	b6 01       	movw	r22, r12
    2898:	17 c0       	rjmp	.+46     	; 0x28c8 <create_chain+0x280>
    289a:	81 30       	cpi	r24, 0x01	; 1
    289c:	89 f4       	brne	.+34     	; 0x28c0 <create_chain+0x278>
    289e:	6f ef       	ldi	r22, 0xFF	; 255
    28a0:	7f ef       	ldi	r23, 0xFF	; 255
    28a2:	cb 01       	movw	r24, r22
    28a4:	11 c0       	rjmp	.+34     	; 0x28c8 <create_chain+0x280>
    28a6:	61 e0       	ldi	r22, 0x01	; 1
    28a8:	70 e0       	ldi	r23, 0x00	; 0
    28aa:	80 e0       	ldi	r24, 0x00	; 0
    28ac:	90 e0       	ldi	r25, 0x00	; 0
    28ae:	0c c0       	rjmp	.+24     	; 0x28c8 <create_chain+0x280>
    28b0:	60 e0       	ldi	r22, 0x00	; 0
    28b2:	70 e0       	ldi	r23, 0x00	; 0
    28b4:	cb 01       	movw	r24, r22
    28b6:	08 c0       	rjmp	.+16     	; 0x28c8 <create_chain+0x280>
    28b8:	60 e0       	ldi	r22, 0x00	; 0
    28ba:	70 e0       	ldi	r23, 0x00	; 0
    28bc:	cb 01       	movw	r24, r22
    28be:	04 c0       	rjmp	.+8      	; 0x28c8 <create_chain+0x280>
    28c0:	61 e0       	ldi	r22, 0x01	; 1
    28c2:	70 e0       	ldi	r23, 0x00	; 0
    28c4:	80 e0       	ldi	r24, 0x00	; 0
    28c6:	90 e0       	ldi	r25, 0x00	; 0
    28c8:	df 91       	pop	r29
    28ca:	cf 91       	pop	r28
    28cc:	1f 91       	pop	r17
    28ce:	0f 91       	pop	r16
    28d0:	ff 90       	pop	r15
    28d2:	ef 90       	pop	r14
    28d4:	df 90       	pop	r13
    28d6:	cf 90       	pop	r12
    28d8:	bf 90       	pop	r11
    28da:	af 90       	pop	r10
    28dc:	9f 90       	pop	r9
    28de:	8f 90       	pop	r8
    28e0:	7f 90       	pop	r7
    28e2:	6f 90       	pop	r6
    28e4:	5f 90       	pop	r5
    28e6:	4f 90       	pop	r4
    28e8:	08 95       	ret

000028ea <remove_chain>:
    28ea:	4f 92       	push	r4
    28ec:	5f 92       	push	r5
    28ee:	6f 92       	push	r6
    28f0:	7f 92       	push	r7
    28f2:	af 92       	push	r10
    28f4:	bf 92       	push	r11
    28f6:	cf 92       	push	r12
    28f8:	df 92       	push	r13
    28fa:	ef 92       	push	r14
    28fc:	ff 92       	push	r15
    28fe:	0f 93       	push	r16
    2900:	1f 93       	push	r17
    2902:	cf 93       	push	r28
    2904:	df 93       	push	r29
    2906:	5c 01       	movw	r10, r24
    2908:	6a 01       	movw	r12, r20
    290a:	7b 01       	movw	r14, r22
    290c:	b9 01       	movw	r22, r18
    290e:	a8 01       	movw	r20, r16
    2910:	fc 01       	movw	r30, r24
    2912:	c0 81       	ld	r28, Z
    2914:	d1 81       	ldd	r29, Z+1	; 0x01
    2916:	f2 e0       	ldi	r31, 0x02	; 2
    2918:	cf 16       	cp	r12, r31
    291a:	d1 04       	cpc	r13, r1
    291c:	e1 04       	cpc	r14, r1
    291e:	f1 04       	cpc	r15, r1
    2920:	08 f4       	brcc	.+2      	; 0x2924 <remove_chain+0x3a>
    2922:	60 c0       	rjmp	.+192    	; 0x29e4 <remove_chain+0xfa>
    2924:	8c 89       	ldd	r24, Y+20	; 0x14
    2926:	9d 89       	ldd	r25, Y+21	; 0x15
    2928:	ae 89       	ldd	r26, Y+22	; 0x16
    292a:	bf 89       	ldd	r27, Y+23	; 0x17
    292c:	c8 16       	cp	r12, r24
    292e:	d9 06       	cpc	r13, r25
    2930:	ea 06       	cpc	r14, r26
    2932:	fb 06       	cpc	r15, r27
    2934:	08 f0       	brcs	.+2      	; 0x2938 <remove_chain+0x4e>
    2936:	58 c0       	rjmp	.+176    	; 0x29e8 <remove_chain+0xfe>
    2938:	01 2b       	or	r16, r17
    293a:	02 2b       	or	r16, r18
    293c:	03 2b       	or	r16, r19
    293e:	41 f0       	breq	.+16     	; 0x2950 <remove_chain+0x66>
    2940:	0f ef       	ldi	r16, 0xFF	; 255
    2942:	1f ef       	ldi	r17, 0xFF	; 255
    2944:	98 01       	movw	r18, r16
    2946:	ce 01       	movw	r24, r28
    2948:	0e 94 32 10 	call	0x2064	; 0x2064 <put_fat>
    294c:	81 11       	cpse	r24, r1
    294e:	53 c0       	rjmp	.+166    	; 0x29f6 <remove_chain+0x10c>
    2950:	b7 01       	movw	r22, r14
    2952:	a6 01       	movw	r20, r12
    2954:	c5 01       	movw	r24, r10
    2956:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <get_fat>
    295a:	2b 01       	movw	r4, r22
    295c:	3c 01       	movw	r6, r24
    295e:	61 15       	cp	r22, r1
    2960:	71 05       	cpc	r23, r1
    2962:	81 05       	cpc	r24, r1
    2964:	91 05       	cpc	r25, r1
    2966:	09 f4       	brne	.+2      	; 0x296a <remove_chain+0x80>
    2968:	41 c0       	rjmp	.+130    	; 0x29ec <remove_chain+0x102>
    296a:	61 30       	cpi	r22, 0x01	; 1
    296c:	71 05       	cpc	r23, r1
    296e:	81 05       	cpc	r24, r1
    2970:	91 05       	cpc	r25, r1
    2972:	f1 f1       	breq	.+124    	; 0x29f0 <remove_chain+0x106>
    2974:	8f ef       	ldi	r24, 0xFF	; 255
    2976:	48 16       	cp	r4, r24
    2978:	58 06       	cpc	r5, r24
    297a:	68 06       	cpc	r6, r24
    297c:	78 06       	cpc	r7, r24
    297e:	d1 f1       	breq	.+116    	; 0x29f4 <remove_chain+0x10a>
    2980:	00 e0       	ldi	r16, 0x00	; 0
    2982:	10 e0       	ldi	r17, 0x00	; 0
    2984:	98 01       	movw	r18, r16
    2986:	b7 01       	movw	r22, r14
    2988:	a6 01       	movw	r20, r12
    298a:	ce 01       	movw	r24, r28
    298c:	0e 94 32 10 	call	0x2064	; 0x2064 <put_fat>
    2990:	81 11       	cpse	r24, r1
    2992:	31 c0       	rjmp	.+98     	; 0x29f6 <remove_chain+0x10c>
    2994:	88 89       	ldd	r24, Y+16	; 0x10
    2996:	99 89       	ldd	r25, Y+17	; 0x11
    2998:	aa 89       	ldd	r26, Y+18	; 0x12
    299a:	bb 89       	ldd	r27, Y+19	; 0x13
    299c:	4c 89       	ldd	r20, Y+20	; 0x14
    299e:	5d 89       	ldd	r21, Y+21	; 0x15
    29a0:	6e 89       	ldd	r22, Y+22	; 0x16
    29a2:	7f 89       	ldd	r23, Y+23	; 0x17
    29a4:	6a 01       	movw	r12, r20
    29a6:	7b 01       	movw	r14, r22
    29a8:	e2 e0       	ldi	r30, 0x02	; 2
    29aa:	ce 1a       	sub	r12, r30
    29ac:	d1 08       	sbc	r13, r1
    29ae:	e1 08       	sbc	r14, r1
    29b0:	f1 08       	sbc	r15, r1
    29b2:	8c 15       	cp	r24, r12
    29b4:	9d 05       	cpc	r25, r13
    29b6:	ae 05       	cpc	r26, r14
    29b8:	bf 05       	cpc	r27, r15
    29ba:	50 f4       	brcc	.+20     	; 0x29d0 <remove_chain+0xe6>
    29bc:	01 96       	adiw	r24, 0x01	; 1
    29be:	a1 1d       	adc	r26, r1
    29c0:	b1 1d       	adc	r27, r1
    29c2:	88 8b       	std	Y+16, r24	; 0x10
    29c4:	99 8b       	std	Y+17, r25	; 0x11
    29c6:	aa 8b       	std	Y+18, r26	; 0x12
    29c8:	bb 8b       	std	Y+19, r27	; 0x13
    29ca:	8d 81       	ldd	r24, Y+5	; 0x05
    29cc:	81 60       	ori	r24, 0x01	; 1
    29ce:	8d 83       	std	Y+5, r24	; 0x05
    29d0:	73 01       	movw	r14, r6
    29d2:	62 01       	movw	r12, r4
    29d4:	44 16       	cp	r4, r20
    29d6:	55 06       	cpc	r5, r21
    29d8:	66 06       	cpc	r6, r22
    29da:	77 06       	cpc	r7, r23
    29dc:	08 f4       	brcc	.+2      	; 0x29e0 <remove_chain+0xf6>
    29de:	b8 cf       	rjmp	.-144    	; 0x2950 <remove_chain+0x66>
    29e0:	80 e0       	ldi	r24, 0x00	; 0
    29e2:	09 c0       	rjmp	.+18     	; 0x29f6 <remove_chain+0x10c>
    29e4:	82 e0       	ldi	r24, 0x02	; 2
    29e6:	07 c0       	rjmp	.+14     	; 0x29f6 <remove_chain+0x10c>
    29e8:	82 e0       	ldi	r24, 0x02	; 2
    29ea:	05 c0       	rjmp	.+10     	; 0x29f6 <remove_chain+0x10c>
    29ec:	80 e0       	ldi	r24, 0x00	; 0
    29ee:	03 c0       	rjmp	.+6      	; 0x29f6 <remove_chain+0x10c>
    29f0:	82 e0       	ldi	r24, 0x02	; 2
    29f2:	01 c0       	rjmp	.+2      	; 0x29f6 <remove_chain+0x10c>
    29f4:	81 e0       	ldi	r24, 0x01	; 1
    29f6:	df 91       	pop	r29
    29f8:	cf 91       	pop	r28
    29fa:	1f 91       	pop	r17
    29fc:	0f 91       	pop	r16
    29fe:	ff 90       	pop	r15
    2a00:	ef 90       	pop	r14
    2a02:	df 90       	pop	r13
    2a04:	cf 90       	pop	r12
    2a06:	bf 90       	pop	r11
    2a08:	af 90       	pop	r10
    2a0a:	7f 90       	pop	r7
    2a0c:	6f 90       	pop	r6
    2a0e:	5f 90       	pop	r5
    2a10:	4f 90       	pop	r4
    2a12:	08 95       	ret

00002a14 <dir_clear>:
    2a14:	8f 92       	push	r8
    2a16:	9f 92       	push	r9
    2a18:	af 92       	push	r10
    2a1a:	bf 92       	push	r11
    2a1c:	cf 92       	push	r12
    2a1e:	df 92       	push	r13
    2a20:	ef 92       	push	r14
    2a22:	ff 92       	push	r15
    2a24:	0f 93       	push	r16
    2a26:	1f 93       	push	r17
    2a28:	cf 93       	push	r28
    2a2a:	df 93       	push	r29
    2a2c:	ec 01       	movw	r28, r24
    2a2e:	6a 01       	movw	r12, r20
    2a30:	7b 01       	movw	r14, r22
    2a32:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <sync_window>
    2a36:	81 11       	cpse	r24, r1
    2a38:	38 c0       	rjmp	.+112    	; 0x2aaa <dir_clear+0x96>
    2a3a:	b7 01       	movw	r22, r14
    2a3c:	a6 01       	movw	r20, r12
    2a3e:	ce 01       	movw	r24, r28
    2a40:	0e 94 be 08 	call	0x117c	; 0x117c <clst2sect>
    2a44:	4b 01       	movw	r8, r22
    2a46:	5c 01       	movw	r10, r24
    2a48:	6c a7       	std	Y+44, r22	; 0x2c
    2a4a:	7d a7       	std	Y+45, r23	; 0x2d
    2a4c:	8e a7       	std	Y+46, r24	; 0x2e
    2a4e:	9f a7       	std	Y+47, r25	; 0x2f
    2a50:	6e 01       	movw	r12, r28
    2a52:	20 e3       	ldi	r18, 0x30	; 48
    2a54:	c2 0e       	add	r12, r18
    2a56:	d1 1c       	adc	r13, r1
    2a58:	80 e0       	ldi	r24, 0x00	; 0
    2a5a:	92 e0       	ldi	r25, 0x02	; 2
    2a5c:	f6 01       	movw	r30, r12
    2a5e:	9c 01       	movw	r18, r24
    2a60:	11 92       	st	Z+, r1
    2a62:	21 50       	subi	r18, 0x01	; 1
    2a64:	30 40       	sbci	r19, 0x00	; 0
    2a66:	e1 f7       	brne	.-8      	; 0x2a60 <dir_clear+0x4c>
    2a68:	e1 2c       	mov	r14, r1
    2a6a:	f1 2c       	mov	r15, r1
    2a6c:	03 c0       	rjmp	.+6      	; 0x2a74 <dir_clear+0x60>
    2a6e:	3f ef       	ldi	r19, 0xFF	; 255
    2a70:	e3 1a       	sub	r14, r19
    2a72:	f3 0a       	sbc	r15, r19
    2a74:	8a 85       	ldd	r24, Y+10	; 0x0a
    2a76:	9b 85       	ldd	r25, Y+11	; 0x0b
    2a78:	e8 16       	cp	r14, r24
    2a7a:	f9 06       	cpc	r15, r25
    2a7c:	70 f4       	brcc	.+28     	; 0x2a9a <dir_clear+0x86>
    2a7e:	01 e0       	ldi	r16, 0x01	; 1
    2a80:	10 e0       	ldi	r17, 0x00	; 0
    2a82:	a5 01       	movw	r20, r10
    2a84:	94 01       	movw	r18, r8
    2a86:	2e 0d       	add	r18, r14
    2a88:	3f 1d       	adc	r19, r15
    2a8a:	41 1d       	adc	r20, r1
    2a8c:	51 1d       	adc	r21, r1
    2a8e:	b6 01       	movw	r22, r12
    2a90:	89 81       	ldd	r24, Y+1	; 0x01
    2a92:	0e 94 3f 07 	call	0xe7e	; 0xe7e <disk_write>
    2a96:	88 23       	and	r24, r24
    2a98:	51 f3       	breq	.-44     	; 0x2a6e <dir_clear+0x5a>
    2a9a:	2a 85       	ldd	r18, Y+10	; 0x0a
    2a9c:	3b 85       	ldd	r19, Y+11	; 0x0b
    2a9e:	81 e0       	ldi	r24, 0x01	; 1
    2aa0:	e2 16       	cp	r14, r18
    2aa2:	f3 06       	cpc	r15, r19
    2aa4:	19 f4       	brne	.+6      	; 0x2aac <dir_clear+0x98>
    2aa6:	80 e0       	ldi	r24, 0x00	; 0
    2aa8:	01 c0       	rjmp	.+2      	; 0x2aac <dir_clear+0x98>
    2aaa:	81 e0       	ldi	r24, 0x01	; 1
    2aac:	df 91       	pop	r29
    2aae:	cf 91       	pop	r28
    2ab0:	1f 91       	pop	r17
    2ab2:	0f 91       	pop	r16
    2ab4:	ff 90       	pop	r15
    2ab6:	ef 90       	pop	r14
    2ab8:	df 90       	pop	r13
    2aba:	cf 90       	pop	r12
    2abc:	bf 90       	pop	r11
    2abe:	af 90       	pop	r10
    2ac0:	9f 90       	pop	r9
    2ac2:	8f 90       	pop	r8
    2ac4:	08 95       	ret

00002ac6 <dir_next>:
    2ac6:	4f 92       	push	r4
    2ac8:	5f 92       	push	r5
    2aca:	6f 92       	push	r6
    2acc:	7f 92       	push	r7
    2ace:	af 92       	push	r10
    2ad0:	bf 92       	push	r11
    2ad2:	cf 92       	push	r12
    2ad4:	df 92       	push	r13
    2ad6:	ef 92       	push	r14
    2ad8:	ff 92       	push	r15
    2ada:	0f 93       	push	r16
    2adc:	1f 93       	push	r17
    2ade:	cf 93       	push	r28
    2ae0:	df 93       	push	r29
    2ae2:	fc 01       	movw	r30, r24
    2ae4:	c0 81       	ld	r28, Z
    2ae6:	d1 81       	ldd	r29, Z+1	; 0x01
    2ae8:	c6 84       	ldd	r12, Z+14	; 0x0e
    2aea:	d7 84       	ldd	r13, Z+15	; 0x0f
    2aec:	e0 88       	ldd	r14, Z+16	; 0x10
    2aee:	f1 88       	ldd	r15, Z+17	; 0x11
    2af0:	80 e2       	ldi	r24, 0x20	; 32
    2af2:	c8 0e       	add	r12, r24
    2af4:	d1 1c       	adc	r13, r1
    2af6:	e1 1c       	adc	r14, r1
    2af8:	f1 1c       	adc	r15, r1
    2afa:	c1 14       	cp	r12, r1
    2afc:	d1 04       	cpc	r13, r1
    2afe:	80 e2       	ldi	r24, 0x20	; 32
    2b00:	e8 06       	cpc	r14, r24
    2b02:	f1 04       	cpc	r15, r1
    2b04:	20 f0       	brcs	.+8      	; 0x2b0e <dir_next+0x48>
    2b06:	16 8a       	std	Z+22, r1	; 0x16
    2b08:	17 8a       	std	Z+23, r1	; 0x17
    2b0a:	10 8e       	std	Z+24, r1	; 0x18
    2b0c:	11 8e       	std	Z+25, r1	; 0x19
    2b0e:	86 89       	ldd	r24, Z+22	; 0x16
    2b10:	97 89       	ldd	r25, Z+23	; 0x17
    2b12:	a0 8d       	ldd	r26, Z+24	; 0x18
    2b14:	b1 8d       	ldd	r27, Z+25	; 0x19
    2b16:	00 97       	sbiw	r24, 0x00	; 0
    2b18:	a1 05       	cpc	r26, r1
    2b1a:	b1 05       	cpc	r27, r1
    2b1c:	09 f4       	brne	.+2      	; 0x2b20 <dir_next+0x5a>
    2b1e:	b3 c0       	rjmp	.+358    	; 0x2c86 <dir_next+0x1c0>
    2b20:	8b 01       	movw	r16, r22
    2b22:	5f 01       	movw	r10, r30
    2b24:	b7 01       	movw	r22, r14
    2b26:	a6 01       	movw	r20, r12
    2b28:	51 70       	andi	r21, 0x01	; 1
    2b2a:	66 27       	eor	r22, r22
    2b2c:	77 27       	eor	r23, r23
    2b2e:	45 2b       	or	r20, r21
    2b30:	46 2b       	or	r20, r22
    2b32:	47 2b       	or	r20, r23
    2b34:	09 f0       	breq	.+2      	; 0x2b38 <dir_next+0x72>
    2b36:	98 c0       	rjmp	.+304    	; 0x2c68 <dir_next+0x1a2>
    2b38:	01 96       	adiw	r24, 0x01	; 1
    2b3a:	a1 1d       	adc	r26, r1
    2b3c:	b1 1d       	adc	r27, r1
    2b3e:	86 8b       	std	Z+22, r24	; 0x16
    2b40:	97 8b       	std	Z+23, r25	; 0x17
    2b42:	a0 8f       	std	Z+24, r26	; 0x18
    2b44:	b1 8f       	std	Z+25, r27	; 0x19
    2b46:	42 89       	ldd	r20, Z+18	; 0x12
    2b48:	53 89       	ldd	r21, Z+19	; 0x13
    2b4a:	64 89       	ldd	r22, Z+20	; 0x14
    2b4c:	75 89       	ldd	r23, Z+21	; 0x15
    2b4e:	41 15       	cp	r20, r1
    2b50:	51 05       	cpc	r21, r1
    2b52:	61 05       	cpc	r22, r1
    2b54:	71 05       	cpc	r23, r1
    2b56:	d1 f4       	brne	.+52     	; 0x2b8c <dir_next+0xc6>
    2b58:	88 85       	ldd	r24, Y+8	; 0x08
    2b5a:	99 85       	ldd	r25, Y+9	; 0x09
    2b5c:	a0 e0       	ldi	r26, 0x00	; 0
    2b5e:	b0 e0       	ldi	r27, 0x00	; 0
    2b60:	b7 01       	movw	r22, r14
    2b62:	a6 01       	movw	r20, r12
    2b64:	68 94       	set
    2b66:	14 f8       	bld	r1, 4
    2b68:	76 95       	lsr	r23
    2b6a:	67 95       	ror	r22
    2b6c:	57 95       	ror	r21
    2b6e:	47 95       	ror	r20
    2b70:	16 94       	lsr	r1
    2b72:	d1 f7       	brne	.-12     	; 0x2b68 <dir_next+0xa2>
    2b74:	48 17       	cp	r20, r24
    2b76:	59 07       	cpc	r21, r25
    2b78:	6a 07       	cpc	r22, r26
    2b7a:	7b 07       	cpc	r23, r27
    2b7c:	08 f4       	brcc	.+2      	; 0x2b80 <dir_next+0xba>
    2b7e:	74 c0       	rjmp	.+232    	; 0x2c68 <dir_next+0x1a2>
    2b80:	16 8a       	std	Z+22, r1	; 0x16
    2b82:	17 8a       	std	Z+23, r1	; 0x17
    2b84:	10 8e       	std	Z+24, r1	; 0x18
    2b86:	11 8e       	std	Z+25, r1	; 0x19
    2b88:	84 e0       	ldi	r24, 0x04	; 4
    2b8a:	8a c0       	rjmp	.+276    	; 0x2ca0 <dir_next+0x1da>
    2b8c:	8a 85       	ldd	r24, Y+10	; 0x0a
    2b8e:	9b 85       	ldd	r25, Y+11	; 0x0b
    2b90:	01 97       	sbiw	r24, 0x01	; 1
    2b92:	2c 01       	movw	r4, r24
    2b94:	61 2c       	mov	r6, r1
    2b96:	71 2c       	mov	r7, r1
    2b98:	d7 01       	movw	r26, r14
    2b9a:	c6 01       	movw	r24, r12
    2b9c:	07 2e       	mov	r0, r23
    2b9e:	79 e0       	ldi	r23, 0x09	; 9
    2ba0:	b6 95       	lsr	r27
    2ba2:	a7 95       	ror	r26
    2ba4:	97 95       	ror	r25
    2ba6:	87 95       	ror	r24
    2ba8:	7a 95       	dec	r23
    2baa:	d1 f7       	brne	.-12     	; 0x2ba0 <dir_next+0xda>
    2bac:	70 2d       	mov	r23, r0
    2bae:	84 21       	and	r24, r4
    2bb0:	95 21       	and	r25, r5
    2bb2:	a6 21       	and	r26, r6
    2bb4:	b7 21       	and	r27, r7
    2bb6:	89 2b       	or	r24, r25
    2bb8:	8a 2b       	or	r24, r26
    2bba:	8b 2b       	or	r24, r27
    2bbc:	09 f0       	breq	.+2      	; 0x2bc0 <dir_next+0xfa>
    2bbe:	54 c0       	rjmp	.+168    	; 0x2c68 <dir_next+0x1a2>
    2bc0:	cf 01       	movw	r24, r30
    2bc2:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <get_fat>
    2bc6:	2b 01       	movw	r4, r22
    2bc8:	3c 01       	movw	r6, r24
    2bca:	62 30       	cpi	r22, 0x02	; 2
    2bcc:	71 05       	cpc	r23, r1
    2bce:	81 05       	cpc	r24, r1
    2bd0:	91 05       	cpc	r25, r1
    2bd2:	08 f4       	brcc	.+2      	; 0x2bd6 <dir_next+0x110>
    2bd4:	5a c0       	rjmp	.+180    	; 0x2c8a <dir_next+0x1c4>
    2bd6:	8f ef       	ldi	r24, 0xFF	; 255
    2bd8:	48 16       	cp	r4, r24
    2bda:	58 06       	cpc	r5, r24
    2bdc:	68 06       	cpc	r6, r24
    2bde:	78 06       	cpc	r7, r24
    2be0:	09 f4       	brne	.+2      	; 0x2be4 <dir_next+0x11e>
    2be2:	55 c0       	rjmp	.+170    	; 0x2c8e <dir_next+0x1c8>
    2be4:	8c 89       	ldd	r24, Y+20	; 0x14
    2be6:	9d 89       	ldd	r25, Y+21	; 0x15
    2be8:	ae 89       	ldd	r26, Y+22	; 0x16
    2bea:	bf 89       	ldd	r27, Y+23	; 0x17
    2bec:	48 16       	cp	r4, r24
    2bee:	59 06       	cpc	r5, r25
    2bf0:	6a 06       	cpc	r6, r26
    2bf2:	7b 06       	cpc	r7, r27
    2bf4:	50 f1       	brcs	.+84     	; 0x2c4a <dir_next+0x184>
    2bf6:	01 2b       	or	r16, r17
    2bf8:	39 f4       	brne	.+14     	; 0x2c08 <dir_next+0x142>
    2bfa:	f5 01       	movw	r30, r10
    2bfc:	16 8a       	std	Z+22, r1	; 0x16
    2bfe:	17 8a       	std	Z+23, r1	; 0x17
    2c00:	10 8e       	std	Z+24, r1	; 0x18
    2c02:	11 8e       	std	Z+25, r1	; 0x19
    2c04:	84 e0       	ldi	r24, 0x04	; 4
    2c06:	4c c0       	rjmp	.+152    	; 0x2ca0 <dir_next+0x1da>
    2c08:	f5 01       	movw	r30, r10
    2c0a:	42 89       	ldd	r20, Z+18	; 0x12
    2c0c:	53 89       	ldd	r21, Z+19	; 0x13
    2c0e:	64 89       	ldd	r22, Z+20	; 0x14
    2c10:	75 89       	ldd	r23, Z+21	; 0x15
    2c12:	c5 01       	movw	r24, r10
    2c14:	0e 94 24 13 	call	0x2648	; 0x2648 <create_chain>
    2c18:	2b 01       	movw	r4, r22
    2c1a:	3c 01       	movw	r6, r24
    2c1c:	61 15       	cp	r22, r1
    2c1e:	71 05       	cpc	r23, r1
    2c20:	81 05       	cpc	r24, r1
    2c22:	91 05       	cpc	r25, r1
    2c24:	b1 f1       	breq	.+108    	; 0x2c92 <dir_next+0x1cc>
    2c26:	61 30       	cpi	r22, 0x01	; 1
    2c28:	71 05       	cpc	r23, r1
    2c2a:	81 05       	cpc	r24, r1
    2c2c:	91 05       	cpc	r25, r1
    2c2e:	99 f1       	breq	.+102    	; 0x2c96 <dir_next+0x1d0>
    2c30:	8f ef       	ldi	r24, 0xFF	; 255
    2c32:	48 16       	cp	r4, r24
    2c34:	58 06       	cpc	r5, r24
    2c36:	68 06       	cpc	r6, r24
    2c38:	78 06       	cpc	r7, r24
    2c3a:	79 f1       	breq	.+94     	; 0x2c9a <dir_next+0x1d4>
    2c3c:	b3 01       	movw	r22, r6
    2c3e:	a2 01       	movw	r20, r4
    2c40:	ce 01       	movw	r24, r28
    2c42:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <dir_clear>
    2c46:	81 11       	cpse	r24, r1
    2c48:	2a c0       	rjmp	.+84     	; 0x2c9e <dir_next+0x1d8>
    2c4a:	f5 01       	movw	r30, r10
    2c4c:	42 8a       	std	Z+18, r4	; 0x12
    2c4e:	53 8a       	std	Z+19, r5	; 0x13
    2c50:	64 8a       	std	Z+20, r6	; 0x14
    2c52:	75 8a       	std	Z+21, r7	; 0x15
    2c54:	b3 01       	movw	r22, r6
    2c56:	a2 01       	movw	r20, r4
    2c58:	ce 01       	movw	r24, r28
    2c5a:	0e 94 be 08 	call	0x117c	; 0x117c <clst2sect>
    2c5e:	f5 01       	movw	r30, r10
    2c60:	66 8b       	std	Z+22, r22	; 0x16
    2c62:	77 8b       	std	Z+23, r23	; 0x17
    2c64:	80 8f       	std	Z+24, r24	; 0x18
    2c66:	91 8f       	std	Z+25, r25	; 0x19
    2c68:	f5 01       	movw	r30, r10
    2c6a:	c6 86       	std	Z+14, r12	; 0x0e
    2c6c:	d7 86       	std	Z+15, r13	; 0x0f
    2c6e:	e0 8a       	std	Z+16, r14	; 0x10
    2c70:	f1 8a       	std	Z+17, r15	; 0x11
    2c72:	e0 96       	adiw	r28, 0x30	; 48
    2c74:	f1 e0       	ldi	r31, 0x01	; 1
    2c76:	df 22       	and	r13, r31
    2c78:	cc 0e       	add	r12, r28
    2c7a:	dd 1e       	adc	r13, r29
    2c7c:	f5 01       	movw	r30, r10
    2c7e:	d3 8e       	std	Z+27, r13	; 0x1b
    2c80:	c2 8e       	std	Z+26, r12	; 0x1a
    2c82:	80 e0       	ldi	r24, 0x00	; 0
    2c84:	0d c0       	rjmp	.+26     	; 0x2ca0 <dir_next+0x1da>
    2c86:	84 e0       	ldi	r24, 0x04	; 4
    2c88:	0b c0       	rjmp	.+22     	; 0x2ca0 <dir_next+0x1da>
    2c8a:	82 e0       	ldi	r24, 0x02	; 2
    2c8c:	09 c0       	rjmp	.+18     	; 0x2ca0 <dir_next+0x1da>
    2c8e:	81 e0       	ldi	r24, 0x01	; 1
    2c90:	07 c0       	rjmp	.+14     	; 0x2ca0 <dir_next+0x1da>
    2c92:	87 e0       	ldi	r24, 0x07	; 7
    2c94:	05 c0       	rjmp	.+10     	; 0x2ca0 <dir_next+0x1da>
    2c96:	82 e0       	ldi	r24, 0x02	; 2
    2c98:	03 c0       	rjmp	.+6      	; 0x2ca0 <dir_next+0x1da>
    2c9a:	81 e0       	ldi	r24, 0x01	; 1
    2c9c:	01 c0       	rjmp	.+2      	; 0x2ca0 <dir_next+0x1da>
    2c9e:	81 e0       	ldi	r24, 0x01	; 1
    2ca0:	df 91       	pop	r29
    2ca2:	cf 91       	pop	r28
    2ca4:	1f 91       	pop	r17
    2ca6:	0f 91       	pop	r16
    2ca8:	ff 90       	pop	r15
    2caa:	ef 90       	pop	r14
    2cac:	df 90       	pop	r13
    2cae:	cf 90       	pop	r12
    2cb0:	bf 90       	pop	r11
    2cb2:	af 90       	pop	r10
    2cb4:	7f 90       	pop	r7
    2cb6:	6f 90       	pop	r6
    2cb8:	5f 90       	pop	r5
    2cba:	4f 90       	pop	r4
    2cbc:	08 95       	ret

00002cbe <dir_find>:
    2cbe:	ef 92       	push	r14
    2cc0:	ff 92       	push	r15
    2cc2:	1f 93       	push	r17
    2cc4:	cf 93       	push	r28
    2cc6:	df 93       	push	r29
    2cc8:	ec 01       	movw	r28, r24
    2cca:	e8 80       	ld	r14, Y
    2ccc:	f9 80       	ldd	r15, Y+1	; 0x01
    2cce:	40 e0       	ldi	r20, 0x00	; 0
    2cd0:	50 e0       	ldi	r21, 0x00	; 0
    2cd2:	ba 01       	movw	r22, r20
    2cd4:	0e 94 3e 12 	call	0x247c	; 0x247c <dir_sdi>
    2cd8:	81 11       	cpse	r24, r1
    2cda:	2b c0       	rjmp	.+86     	; 0x2d32 <dir_find+0x74>
    2cdc:	4e 89       	ldd	r20, Y+22	; 0x16
    2cde:	5f 89       	ldd	r21, Y+23	; 0x17
    2ce0:	68 8d       	ldd	r22, Y+24	; 0x18
    2ce2:	79 8d       	ldd	r23, Y+25	; 0x19
    2ce4:	c7 01       	movw	r24, r14
    2ce6:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    2cea:	18 2f       	mov	r17, r24
    2cec:	81 11       	cpse	r24, r1
    2cee:	1d c0       	rjmp	.+58     	; 0x2d2a <dir_find+0x6c>
    2cf0:	ea 8d       	ldd	r30, Y+26	; 0x1a
    2cf2:	fb 8d       	ldd	r31, Y+27	; 0x1b
    2cf4:	80 81       	ld	r24, Z
    2cf6:	88 23       	and	r24, r24
    2cf8:	c9 f0       	breq	.+50     	; 0x2d2c <dir_find+0x6e>
    2cfa:	83 85       	ldd	r24, Z+11	; 0x0b
    2cfc:	8f 73       	andi	r24, 0x3F	; 63
    2cfe:	8c 83       	std	Y+4, r24	; 0x04
    2d00:	83 85       	ldd	r24, Z+11	; 0x0b
    2d02:	83 fd       	sbrc	r24, 3
    2d04:	0a c0       	rjmp	.+20     	; 0x2d1a <dir_find+0x5c>
    2d06:	4b e0       	ldi	r20, 0x0B	; 11
    2d08:	50 e0       	ldi	r21, 0x00	; 0
    2d0a:	be 01       	movw	r22, r28
    2d0c:	64 5e       	subi	r22, 0xE4	; 228
    2d0e:	7f 4f       	sbci	r23, 0xFF	; 255
    2d10:	cf 01       	movw	r24, r30
    2d12:	0e 94 d7 23 	call	0x47ae	; 0x47ae <memcmp>
    2d16:	89 2b       	or	r24, r25
    2d18:	59 f0       	breq	.+22     	; 0x2d30 <dir_find+0x72>
    2d1a:	60 e0       	ldi	r22, 0x00	; 0
    2d1c:	70 e0       	ldi	r23, 0x00	; 0
    2d1e:	ce 01       	movw	r24, r28
    2d20:	0e 94 63 15 	call	0x2ac6	; 0x2ac6 <dir_next>
    2d24:	88 23       	and	r24, r24
    2d26:	d1 f2       	breq	.-76     	; 0x2cdc <dir_find+0x1e>
    2d28:	04 c0       	rjmp	.+8      	; 0x2d32 <dir_find+0x74>
    2d2a:	03 c0       	rjmp	.+6      	; 0x2d32 <dir_find+0x74>
    2d2c:	84 e0       	ldi	r24, 0x04	; 4
    2d2e:	01 c0       	rjmp	.+2      	; 0x2d32 <dir_find+0x74>
    2d30:	81 2f       	mov	r24, r17
    2d32:	df 91       	pop	r29
    2d34:	cf 91       	pop	r28
    2d36:	1f 91       	pop	r17
    2d38:	ff 90       	pop	r15
    2d3a:	ef 90       	pop	r14
    2d3c:	08 95       	ret

00002d3e <dir_alloc>:
    2d3e:	cf 92       	push	r12
    2d40:	df 92       	push	r13
    2d42:	ef 92       	push	r14
    2d44:	ff 92       	push	r15
    2d46:	0f 93       	push	r16
    2d48:	1f 93       	push	r17
    2d4a:	cf 93       	push	r28
    2d4c:	df 93       	push	r29
    2d4e:	ec 01       	movw	r28, r24
    2d50:	6b 01       	movw	r12, r22
    2d52:	e8 80       	ld	r14, Y
    2d54:	f9 80       	ldd	r15, Y+1	; 0x01
    2d56:	40 e0       	ldi	r20, 0x00	; 0
    2d58:	50 e0       	ldi	r21, 0x00	; 0
    2d5a:	ba 01       	movw	r22, r20
    2d5c:	0e 94 3e 12 	call	0x247c	; 0x247c <dir_sdi>
    2d60:	81 11       	cpse	r24, r1
    2d62:	21 c0       	rjmp	.+66     	; 0x2da6 <dir_alloc+0x68>
    2d64:	00 e0       	ldi	r16, 0x00	; 0
    2d66:	10 e0       	ldi	r17, 0x00	; 0
    2d68:	4e 89       	ldd	r20, Y+22	; 0x16
    2d6a:	5f 89       	ldd	r21, Y+23	; 0x17
    2d6c:	68 8d       	ldd	r22, Y+24	; 0x18
    2d6e:	79 8d       	ldd	r23, Y+25	; 0x19
    2d70:	c7 01       	movw	r24, r14
    2d72:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    2d76:	81 11       	cpse	r24, r1
    2d78:	16 c0       	rjmp	.+44     	; 0x2da6 <dir_alloc+0x68>
    2d7a:	ea 8d       	ldd	r30, Y+26	; 0x1a
    2d7c:	fb 8d       	ldd	r31, Y+27	; 0x1b
    2d7e:	90 81       	ld	r25, Z
    2d80:	95 3e       	cpi	r25, 0xE5	; 229
    2d82:	11 f0       	breq	.+4      	; 0x2d88 <dir_alloc+0x4a>
    2d84:	91 11       	cpse	r25, r1
    2d86:	06 c0       	rjmp	.+12     	; 0x2d94 <dir_alloc+0x56>
    2d88:	0f 5f       	subi	r16, 0xFF	; 255
    2d8a:	1f 4f       	sbci	r17, 0xFF	; 255
    2d8c:	0c 15       	cp	r16, r12
    2d8e:	1d 05       	cpc	r17, r13
    2d90:	19 f4       	brne	.+6      	; 0x2d98 <dir_alloc+0x5a>
    2d92:	09 c0       	rjmp	.+18     	; 0x2da6 <dir_alloc+0x68>
    2d94:	00 e0       	ldi	r16, 0x00	; 0
    2d96:	10 e0       	ldi	r17, 0x00	; 0
    2d98:	61 e0       	ldi	r22, 0x01	; 1
    2d9a:	70 e0       	ldi	r23, 0x00	; 0
    2d9c:	ce 01       	movw	r24, r28
    2d9e:	0e 94 63 15 	call	0x2ac6	; 0x2ac6 <dir_next>
    2da2:	88 23       	and	r24, r24
    2da4:	09 f3       	breq	.-62     	; 0x2d68 <dir_alloc+0x2a>
    2da6:	84 30       	cpi	r24, 0x04	; 4
    2da8:	09 f4       	brne	.+2      	; 0x2dac <dir_alloc+0x6e>
    2daa:	87 e0       	ldi	r24, 0x07	; 7
    2dac:	df 91       	pop	r29
    2dae:	cf 91       	pop	r28
    2db0:	1f 91       	pop	r17
    2db2:	0f 91       	pop	r16
    2db4:	ff 90       	pop	r15
    2db6:	ef 90       	pop	r14
    2db8:	df 90       	pop	r13
    2dba:	cf 90       	pop	r12
    2dbc:	08 95       	ret

00002dbe <putc_init>:
    2dbe:	26 e4       	ldi	r18, 0x46	; 70
    2dc0:	fc 01       	movw	r30, r24
    2dc2:	11 92       	st	Z+, r1
    2dc4:	2a 95       	dec	r18
    2dc6:	e9 f7       	brne	.-6      	; 0x2dc2 <putc_init+0x4>
    2dc8:	fc 01       	movw	r30, r24
    2dca:	71 83       	std	Z+1, r23	; 0x01
    2dcc:	60 83       	st	Z, r22
    2dce:	08 95       	ret

00002dd0 <create_name>:
    2dd0:	3f 92       	push	r3
    2dd2:	4f 92       	push	r4
    2dd4:	5f 92       	push	r5
    2dd6:	6f 92       	push	r6
    2dd8:	7f 92       	push	r7
    2dda:	8f 92       	push	r8
    2ddc:	9f 92       	push	r9
    2dde:	af 92       	push	r10
    2de0:	bf 92       	push	r11
    2de2:	cf 92       	push	r12
    2de4:	df 92       	push	r13
    2de6:	ef 92       	push	r14
    2de8:	ff 92       	push	r15
    2dea:	0f 93       	push	r16
    2dec:	1f 93       	push	r17
    2dee:	cf 93       	push	r28
    2df0:	df 93       	push	r29
    2df2:	3c 01       	movw	r6, r24
    2df4:	2b 01       	movw	r4, r22
    2df6:	fb 01       	movw	r30, r22
    2df8:	c0 80       	ld	r12, Z
    2dfa:	d1 80       	ldd	r13, Z+1	; 0x01
    2dfc:	5c 01       	movw	r10, r24
    2dfe:	fc e1       	ldi	r31, 0x1C	; 28
    2e00:	af 0e       	add	r10, r31
    2e02:	b1 1c       	adc	r11, r1
    2e04:	4b e0       	ldi	r20, 0x0B	; 11
    2e06:	50 e0       	ldi	r21, 0x00	; 0
    2e08:	60 e2       	ldi	r22, 0x20	; 32
    2e0a:	70 e0       	ldi	r23, 0x00	; 0
    2e0c:	c5 01       	movw	r24, r10
    2e0e:	0e 94 ed 23 	call	0x47da	; 0x47da <memset>
    2e12:	e1 2c       	mov	r14, r1
    2e14:	f1 2c       	mov	r15, r1
    2e16:	00 e0       	ldi	r16, 0x00	; 0
    2e18:	10 e0       	ldi	r17, 0x00	; 0
    2e1a:	68 94       	set
    2e1c:	88 24       	eor	r8, r8
    2e1e:	83 f8       	bld	r8, 3
    2e20:	91 2c       	mov	r9, r1
    2e22:	e8 01       	movw	r28, r16
    2e24:	21 96       	adiw	r28, 0x01	; 1
    2e26:	f6 01       	movw	r30, r12
    2e28:	e0 0f       	add	r30, r16
    2e2a:	f1 1f       	adc	r31, r17
    2e2c:	30 80       	ld	r3, Z
    2e2e:	80 e2       	ldi	r24, 0x20	; 32
    2e30:	83 15       	cp	r24, r3
    2e32:	08 f0       	brcs	.+2      	; 0x2e36 <create_name+0x66>
    2e34:	64 c0       	rjmp	.+200    	; 0x2efe <create_name+0x12e>
    2e36:	9f e2       	ldi	r25, 0x2F	; 47
    2e38:	39 16       	cp	r3, r25
    2e3a:	29 f0       	breq	.+10     	; 0x2e46 <create_name+0x76>
    2e3c:	ec e5       	ldi	r30, 0x5C	; 92
    2e3e:	3e 12       	cpse	r3, r30
    2e40:	0b c0       	rjmp	.+22     	; 0x2e58 <create_name+0x88>
    2e42:	01 c0       	rjmp	.+2      	; 0x2e46 <create_name+0x76>
    2e44:	21 96       	adiw	r28, 0x01	; 1
    2e46:	f6 01       	movw	r30, r12
    2e48:	ec 0f       	add	r30, r28
    2e4a:	fd 1f       	adc	r31, r29
    2e4c:	80 81       	ld	r24, Z
    2e4e:	8f 32       	cpi	r24, 0x2F	; 47
    2e50:	c9 f3       	breq	.-14     	; 0x2e44 <create_name+0x74>
    2e52:	8c 35       	cpi	r24, 0x5C	; 92
    2e54:	b9 f3       	breq	.-18     	; 0x2e44 <create_name+0x74>
    2e56:	53 c0       	rjmp	.+166    	; 0x2efe <create_name+0x12e>
    2e58:	fe e2       	ldi	r31, 0x2E	; 46
    2e5a:	3f 16       	cp	r3, r31
    2e5c:	19 f0       	breq	.+6      	; 0x2e64 <create_name+0x94>
    2e5e:	e8 14       	cp	r14, r8
    2e60:	f9 04       	cpc	r15, r9
    2e62:	98 f0       	brcs	.+38     	; 0x2e8a <create_name+0xba>
    2e64:	8b e0       	ldi	r24, 0x0B	; 11
    2e66:	88 16       	cp	r8, r24
    2e68:	91 04       	cpc	r9, r1
    2e6a:	09 f4       	brne	.+2      	; 0x2e6e <create_name+0x9e>
    2e6c:	64 c0       	rjmp	.+200    	; 0x2f36 <create_name+0x166>
    2e6e:	9e e2       	ldi	r25, 0x2E	; 46
    2e70:	39 12       	cpse	r3, r25
    2e72:	63 c0       	rjmp	.+198    	; 0x2f3a <create_name+0x16a>
    2e74:	8e 01       	movw	r16, r28
    2e76:	68 94       	set
    2e78:	ee 24       	eor	r14, r14
    2e7a:	e3 f8       	bld	r14, 3
    2e7c:	f1 2c       	mov	r15, r1
    2e7e:	0f 2e       	mov	r0, r31
    2e80:	fb e0       	ldi	r31, 0x0B	; 11
    2e82:	8f 2e       	mov	r8, r31
    2e84:	91 2c       	mov	r9, r1
    2e86:	f0 2d       	mov	r31, r0
    2e88:	cc cf       	rjmp	.-104    	; 0x2e22 <create_name+0x52>
    2e8a:	83 2d       	mov	r24, r3
    2e8c:	0e 94 8e 08 	call	0x111c	; 0x111c <dbc_1st>
    2e90:	89 2b       	or	r24, r25
    2e92:	f1 f0       	breq	.+60     	; 0x2ed0 <create_name+0x100>
    2e94:	0e 5f       	subi	r16, 0xFE	; 254
    2e96:	1f 4f       	sbci	r17, 0xFF	; 255
    2e98:	cc 0d       	add	r28, r12
    2e9a:	dd 1d       	adc	r29, r13
    2e9c:	c8 81       	ld	r28, Y
    2e9e:	8c 2f       	mov	r24, r28
    2ea0:	0e 94 a5 08 	call	0x114a	; 0x114a <dbc_2nd>
    2ea4:	89 2b       	or	r24, r25
    2ea6:	09 f4       	brne	.+2      	; 0x2eaa <create_name+0xda>
    2ea8:	4a c0       	rjmp	.+148    	; 0x2f3e <create_name+0x16e>
    2eaa:	c4 01       	movw	r24, r8
    2eac:	01 97       	sbiw	r24, 0x01	; 1
    2eae:	e8 16       	cp	r14, r24
    2eb0:	f9 06       	cpc	r15, r25
    2eb2:	08 f0       	brcs	.+2      	; 0x2eb6 <create_name+0xe6>
    2eb4:	46 c0       	rjmp	.+140    	; 0x2f42 <create_name+0x172>
    2eb6:	f5 01       	movw	r30, r10
    2eb8:	ee 0d       	add	r30, r14
    2eba:	ff 1d       	adc	r31, r15
    2ebc:	30 82       	st	Z, r3
    2ebe:	f7 01       	movw	r30, r14
    2ec0:	31 96       	adiw	r30, 0x01	; 1
    2ec2:	ea 0d       	add	r30, r10
    2ec4:	fb 1d       	adc	r31, r11
    2ec6:	82 e0       	ldi	r24, 0x02	; 2
    2ec8:	e8 0e       	add	r14, r24
    2eca:	f1 1c       	adc	r15, r1
    2ecc:	c0 83       	st	Z, r28
    2ece:	a9 cf       	rjmp	.-174    	; 0x2e22 <create_name+0x52>
    2ed0:	63 2d       	mov	r22, r3
    2ed2:	70 e0       	ldi	r23, 0x00	; 0
    2ed4:	86 ec       	ldi	r24, 0xC6	; 198
    2ed6:	92 e0       	ldi	r25, 0x02	; 2
    2ed8:	0e 94 f4 23 	call	0x47e8	; 0x47e8 <strchr>
    2edc:	89 2b       	or	r24, r25
    2ede:	99 f5       	brne	.+102    	; 0x2f46 <create_name+0x176>
    2ee0:	8f e9       	ldi	r24, 0x9F	; 159
    2ee2:	83 0d       	add	r24, r3
    2ee4:	8a 31       	cpi	r24, 0x1A	; 26
    2ee6:	10 f4       	brcc	.+4      	; 0x2eec <create_name+0x11c>
    2ee8:	90 ee       	ldi	r25, 0xE0	; 224
    2eea:	39 0e       	add	r3, r25
    2eec:	f5 01       	movw	r30, r10
    2eee:	ee 0d       	add	r30, r14
    2ef0:	ff 1d       	adc	r31, r15
    2ef2:	30 82       	st	Z, r3
    2ef4:	f7 01       	movw	r30, r14
    2ef6:	31 96       	adiw	r30, 0x01	; 1
    2ef8:	7f 01       	movw	r14, r30
    2efa:	8e 01       	movw	r16, r28
    2efc:	92 cf       	rjmp	.-220    	; 0x2e22 <create_name+0x52>
    2efe:	cc 0d       	add	r28, r12
    2f00:	dd 1d       	adc	r29, r13
    2f02:	f2 01       	movw	r30, r4
    2f04:	d1 83       	std	Z+1, r29	; 0x01
    2f06:	c0 83       	st	Z, r28
    2f08:	ef 28       	or	r14, r15
    2f0a:	f9 f0       	breq	.+62     	; 0x2f4a <create_name+0x17a>
    2f0c:	f3 01       	movw	r30, r6
    2f0e:	84 8d       	ldd	r24, Z+28	; 0x1c
    2f10:	85 3e       	cpi	r24, 0xE5	; 229
    2f12:	11 f4       	brne	.+4      	; 0x2f18 <create_name+0x148>
    2f14:	85 e0       	ldi	r24, 0x05	; 5
    2f16:	84 8f       	std	Z+28, r24	; 0x1c
    2f18:	f0 e2       	ldi	r31, 0x20	; 32
    2f1a:	f3 15       	cp	r31, r3
    2f1c:	28 f4       	brcc	.+10     	; 0x2f28 <create_name+0x158>
    2f1e:	88 81       	ld	r24, Y
    2f20:	81 32       	cpi	r24, 0x21	; 33
    2f22:	20 f4       	brcc	.+8      	; 0x2f2c <create_name+0x15c>
    2f24:	84 e0       	ldi	r24, 0x04	; 4
    2f26:	03 c0       	rjmp	.+6      	; 0x2f2e <create_name+0x15e>
    2f28:	84 e0       	ldi	r24, 0x04	; 4
    2f2a:	01 c0       	rjmp	.+2      	; 0x2f2e <create_name+0x15e>
    2f2c:	80 e0       	ldi	r24, 0x00	; 0
    2f2e:	f3 01       	movw	r30, r6
    2f30:	87 a3       	std	Z+39, r24	; 0x27
    2f32:	80 e0       	ldi	r24, 0x00	; 0
    2f34:	0b c0       	rjmp	.+22     	; 0x2f4c <create_name+0x17c>
    2f36:	86 e0       	ldi	r24, 0x06	; 6
    2f38:	09 c0       	rjmp	.+18     	; 0x2f4c <create_name+0x17c>
    2f3a:	86 e0       	ldi	r24, 0x06	; 6
    2f3c:	07 c0       	rjmp	.+14     	; 0x2f4c <create_name+0x17c>
    2f3e:	86 e0       	ldi	r24, 0x06	; 6
    2f40:	05 c0       	rjmp	.+10     	; 0x2f4c <create_name+0x17c>
    2f42:	86 e0       	ldi	r24, 0x06	; 6
    2f44:	03 c0       	rjmp	.+6      	; 0x2f4c <create_name+0x17c>
    2f46:	86 e0       	ldi	r24, 0x06	; 6
    2f48:	01 c0       	rjmp	.+2      	; 0x2f4c <create_name+0x17c>
    2f4a:	86 e0       	ldi	r24, 0x06	; 6
    2f4c:	df 91       	pop	r29
    2f4e:	cf 91       	pop	r28
    2f50:	1f 91       	pop	r17
    2f52:	0f 91       	pop	r16
    2f54:	ff 90       	pop	r15
    2f56:	ef 90       	pop	r14
    2f58:	df 90       	pop	r13
    2f5a:	cf 90       	pop	r12
    2f5c:	bf 90       	pop	r11
    2f5e:	af 90       	pop	r10
    2f60:	9f 90       	pop	r9
    2f62:	8f 90       	pop	r8
    2f64:	7f 90       	pop	r7
    2f66:	6f 90       	pop	r6
    2f68:	5f 90       	pop	r5
    2f6a:	4f 90       	pop	r4
    2f6c:	3f 90       	pop	r3
    2f6e:	08 95       	ret

00002f70 <follow_path>:
    2f70:	ef 92       	push	r14
    2f72:	ff 92       	push	r15
    2f74:	0f 93       	push	r16
    2f76:	1f 93       	push	r17
    2f78:	cf 93       	push	r28
    2f7a:	df 93       	push	r29
    2f7c:	00 d0       	rcall	.+0      	; 0x2f7e <follow_path+0xe>
    2f7e:	cd b7       	in	r28, 0x3d	; 61
    2f80:	de b7       	in	r29, 0x3e	; 62
    2f82:	8c 01       	movw	r16, r24
    2f84:	7a 83       	std	Y+2, r23	; 0x02
    2f86:	69 83       	std	Y+1, r22	; 0x01
    2f88:	dc 01       	movw	r26, r24
    2f8a:	ed 90       	ld	r14, X+
    2f8c:	fc 90       	ld	r15, X
    2f8e:	03 c0       	rjmp	.+6      	; 0x2f96 <follow_path+0x26>
    2f90:	31 96       	adiw	r30, 0x01	; 1
    2f92:	fa 83       	std	Y+2, r31	; 0x02
    2f94:	e9 83       	std	Y+1, r30	; 0x01
    2f96:	e9 81       	ldd	r30, Y+1	; 0x01
    2f98:	fa 81       	ldd	r31, Y+2	; 0x02
    2f9a:	80 81       	ld	r24, Z
    2f9c:	8f 32       	cpi	r24, 0x2F	; 47
    2f9e:	c1 f3       	breq	.-16     	; 0x2f90 <follow_path+0x20>
    2fa0:	8c 35       	cpi	r24, 0x5C	; 92
    2fa2:	b1 f3       	breq	.-20     	; 0x2f90 <follow_path+0x20>
    2fa4:	d8 01       	movw	r26, r16
    2fa6:	16 96       	adiw	r26, 0x06	; 6
    2fa8:	1d 92       	st	X+, r1
    2faa:	1d 92       	st	X+, r1
    2fac:	1d 92       	st	X+, r1
    2fae:	1c 92       	st	X, r1
    2fb0:	19 97       	sbiw	r26, 0x09	; 9
    2fb2:	80 81       	ld	r24, Z
    2fb4:	80 32       	cpi	r24, 0x20	; 32
    2fb6:	50 f4       	brcc	.+20     	; 0x2fcc <follow_path+0x5c>
    2fb8:	80 e8       	ldi	r24, 0x80	; 128
    2fba:	97 96       	adiw	r26, 0x27	; 39
    2fbc:	8c 93       	st	X, r24
    2fbe:	40 e0       	ldi	r20, 0x00	; 0
    2fc0:	50 e0       	ldi	r21, 0x00	; 0
    2fc2:	ba 01       	movw	r22, r20
    2fc4:	c8 01       	movw	r24, r16
    2fc6:	0e 94 3e 12 	call	0x247c	; 0x247c <dir_sdi>
    2fca:	32 c0       	rjmp	.+100    	; 0x3030 <follow_path+0xc0>
    2fcc:	be 01       	movw	r22, r28
    2fce:	6f 5f       	subi	r22, 0xFF	; 255
    2fd0:	7f 4f       	sbci	r23, 0xFF	; 255
    2fd2:	c8 01       	movw	r24, r16
    2fd4:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <create_name>
    2fd8:	81 11       	cpse	r24, r1
    2fda:	2a c0       	rjmp	.+84     	; 0x3030 <follow_path+0xc0>
    2fdc:	c8 01       	movw	r24, r16
    2fde:	0e 94 5f 16 	call	0x2cbe	; 0x2cbe <dir_find>
    2fe2:	f8 01       	movw	r30, r16
    2fe4:	97 a1       	ldd	r25, Z+39	; 0x27
    2fe6:	88 23       	and	r24, r24
    2fe8:	29 f0       	breq	.+10     	; 0x2ff4 <follow_path+0x84>
    2fea:	84 30       	cpi	r24, 0x04	; 4
    2fec:	09 f5       	brne	.+66     	; 0x3030 <follow_path+0xc0>
    2fee:	92 ff       	sbrs	r25, 2
    2ff0:	1c c0       	rjmp	.+56     	; 0x302a <follow_path+0xba>
    2ff2:	1e c0       	rjmp	.+60     	; 0x3030 <follow_path+0xc0>
    2ff4:	92 fd       	sbrc	r25, 2
    2ff6:	1c c0       	rjmp	.+56     	; 0x3030 <follow_path+0xc0>
    2ff8:	d8 01       	movw	r26, r16
    2ffa:	84 81       	ldd	r24, Z+4	; 0x04
    2ffc:	84 ff       	sbrs	r24, 4
    2ffe:	17 c0       	rjmp	.+46     	; 0x302e <follow_path+0xbe>
    3000:	1e 96       	adiw	r26, 0x0e	; 14
    3002:	8d 91       	ld	r24, X+
    3004:	9d 91       	ld	r25, X+
    3006:	0d 90       	ld	r0, X+
    3008:	bc 91       	ld	r27, X
    300a:	a0 2d       	mov	r26, r0
    300c:	91 70       	andi	r25, 0x01	; 1
    300e:	b7 01       	movw	r22, r14
    3010:	60 5d       	subi	r22, 0xD0	; 208
    3012:	7f 4f       	sbci	r23, 0xFF	; 255
    3014:	68 0f       	add	r22, r24
    3016:	79 1f       	adc	r23, r25
    3018:	c7 01       	movw	r24, r14
    301a:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <ld_clust>
    301e:	f8 01       	movw	r30, r16
    3020:	66 83       	std	Z+6, r22	; 0x06
    3022:	77 83       	std	Z+7, r23	; 0x07
    3024:	80 87       	std	Z+8, r24	; 0x08
    3026:	91 87       	std	Z+9, r25	; 0x09
    3028:	d1 cf       	rjmp	.-94     	; 0x2fcc <follow_path+0x5c>
    302a:	85 e0       	ldi	r24, 0x05	; 5
    302c:	01 c0       	rjmp	.+2      	; 0x3030 <follow_path+0xc0>
    302e:	85 e0       	ldi	r24, 0x05	; 5
    3030:	0f 90       	pop	r0
    3032:	0f 90       	pop	r0
    3034:	df 91       	pop	r29
    3036:	cf 91       	pop	r28
    3038:	1f 91       	pop	r17
    303a:	0f 91       	pop	r16
    303c:	ff 90       	pop	r15
    303e:	ef 90       	pop	r14
    3040:	08 95       	ret

00003042 <dir_register>:
    3042:	0f 93       	push	r16
    3044:	1f 93       	push	r17
    3046:	cf 93       	push	r28
    3048:	df 93       	push	r29
    304a:	ec 01       	movw	r28, r24
    304c:	08 81       	ld	r16, Y
    304e:	19 81       	ldd	r17, Y+1	; 0x01
    3050:	61 e0       	ldi	r22, 0x01	; 1
    3052:	70 e0       	ldi	r23, 0x00	; 0
    3054:	0e 94 9f 16 	call	0x2d3e	; 0x2d3e <dir_alloc>
    3058:	81 11       	cpse	r24, r1
    305a:	1c c0       	rjmp	.+56     	; 0x3094 <dir_register+0x52>
    305c:	4e 89       	ldd	r20, Y+22	; 0x16
    305e:	5f 89       	ldd	r21, Y+23	; 0x17
    3060:	68 8d       	ldd	r22, Y+24	; 0x18
    3062:	79 8d       	ldd	r23, Y+25	; 0x19
    3064:	c8 01       	movw	r24, r16
    3066:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    306a:	81 11       	cpse	r24, r1
    306c:	13 c0       	rjmp	.+38     	; 0x3094 <dir_register+0x52>
    306e:	ea 8d       	ldd	r30, Y+26	; 0x1a
    3070:	fb 8d       	ldd	r31, Y+27	; 0x1b
    3072:	90 e2       	ldi	r25, 0x20	; 32
    3074:	df 01       	movw	r26, r30
    3076:	1d 92       	st	X+, r1
    3078:	9a 95       	dec	r25
    307a:	e9 f7       	brne	.-6      	; 0x3076 <dir_register+0x34>
    307c:	fe 01       	movw	r30, r28
    307e:	7c 96       	adiw	r30, 0x1c	; 28
    3080:	aa 8d       	ldd	r26, Y+26	; 0x1a
    3082:	bb 8d       	ldd	r27, Y+27	; 0x1b
    3084:	9b e0       	ldi	r25, 0x0B	; 11
    3086:	01 90       	ld	r0, Z+
    3088:	0d 92       	st	X+, r0
    308a:	9a 95       	dec	r25
    308c:	e1 f7       	brne	.-8      	; 0x3086 <dir_register+0x44>
    308e:	91 e0       	ldi	r25, 0x01	; 1
    3090:	f8 01       	movw	r30, r16
    3092:	94 83       	std	Z+4, r25	; 0x04
    3094:	df 91       	pop	r29
    3096:	cf 91       	pop	r28
    3098:	1f 91       	pop	r17
    309a:	0f 91       	pop	r16
    309c:	08 95       	ret

0000309e <sync_fs>:
    309e:	cf 92       	push	r12
    30a0:	df 92       	push	r13
    30a2:	ff 92       	push	r15
    30a4:	0f 93       	push	r16
    30a6:	1f 93       	push	r17
    30a8:	cf 93       	push	r28
    30aa:	df 93       	push	r29
    30ac:	ec 01       	movw	r28, r24
    30ae:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <sync_window>
    30b2:	f8 2e       	mov	r15, r24
    30b4:	81 11       	cpse	r24, r1
    30b6:	5c c0       	rjmp	.+184    	; 0x3170 <sync_fs+0xd2>
    30b8:	88 81       	ld	r24, Y
    30ba:	83 30       	cpi	r24, 0x03	; 3
    30bc:	09 f0       	breq	.+2      	; 0x30c0 <sync_fs+0x22>
    30be:	4e c0       	rjmp	.+156    	; 0x315c <sync_fs+0xbe>
    30c0:	8d 81       	ldd	r24, Y+5	; 0x05
    30c2:	81 30       	cpi	r24, 0x01	; 1
    30c4:	09 f0       	breq	.+2      	; 0x30c8 <sync_fs+0x2a>
    30c6:	4a c0       	rjmp	.+148    	; 0x315c <sync_fs+0xbe>
    30c8:	80 e0       	ldi	r24, 0x00	; 0
    30ca:	92 e0       	ldi	r25, 0x02	; 2
    30cc:	6e 01       	movw	r12, r28
    30ce:	20 e3       	ldi	r18, 0x30	; 48
    30d0:	c2 0e       	add	r12, r18
    30d2:	d1 1c       	adc	r13, r1
    30d4:	f6 01       	movw	r30, r12
    30d6:	9c 01       	movw	r18, r24
    30d8:	11 92       	st	Z+, r1
    30da:	21 50       	subi	r18, 0x01	; 1
    30dc:	30 40       	sbci	r19, 0x00	; 0
    30de:	e1 f7       	brne	.-8      	; 0x30d8 <sync_fs+0x3a>
    30e0:	65 e5       	ldi	r22, 0x55	; 85
    30e2:	7a ea       	ldi	r23, 0xAA	; 170
    30e4:	ce 01       	movw	r24, r28
    30e6:	82 5d       	subi	r24, 0xD2	; 210
    30e8:	9d 4f       	sbci	r25, 0xFD	; 253
    30ea:	0e 94 84 08 	call	0x1108	; 0x1108 <st_word>
    30ee:	42 e5       	ldi	r20, 0x52	; 82
    30f0:	52 e5       	ldi	r21, 0x52	; 82
    30f2:	61 e6       	ldi	r22, 0x61	; 97
    30f4:	71 e4       	ldi	r23, 0x41	; 65
    30f6:	c6 01       	movw	r24, r12
    30f8:	0e 94 88 08 	call	0x1110	; 0x1110 <st_dword>
    30fc:	42 e7       	ldi	r20, 0x72	; 114
    30fe:	52 e7       	ldi	r21, 0x72	; 114
    3100:	61 e4       	ldi	r22, 0x41	; 65
    3102:	71 e6       	ldi	r23, 0x61	; 97
    3104:	ce 01       	movw	r24, r28
    3106:	8c 5e       	subi	r24, 0xEC	; 236
    3108:	9d 4f       	sbci	r25, 0xFD	; 253
    310a:	0e 94 88 08 	call	0x1110	; 0x1110 <st_dword>
    310e:	48 89       	ldd	r20, Y+16	; 0x10
    3110:	59 89       	ldd	r21, Y+17	; 0x11
    3112:	6a 89       	ldd	r22, Y+18	; 0x12
    3114:	7b 89       	ldd	r23, Y+19	; 0x13
    3116:	ce 01       	movw	r24, r28
    3118:	88 5e       	subi	r24, 0xE8	; 232
    311a:	9d 4f       	sbci	r25, 0xFD	; 253
    311c:	0e 94 88 08 	call	0x1110	; 0x1110 <st_dword>
    3120:	4c 85       	ldd	r20, Y+12	; 0x0c
    3122:	5d 85       	ldd	r21, Y+13	; 0x0d
    3124:	6e 85       	ldd	r22, Y+14	; 0x0e
    3126:	7f 85       	ldd	r23, Y+15	; 0x0f
    3128:	ce 01       	movw	r24, r28
    312a:	84 5e       	subi	r24, 0xE4	; 228
    312c:	9d 4f       	sbci	r25, 0xFD	; 253
    312e:	0e 94 88 08 	call	0x1110	; 0x1110 <st_dword>
    3132:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3134:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3136:	ae 8d       	ldd	r26, Y+30	; 0x1e
    3138:	bf 8d       	ldd	r27, Y+31	; 0x1f
    313a:	9c 01       	movw	r18, r24
    313c:	ad 01       	movw	r20, r26
    313e:	2f 5f       	subi	r18, 0xFF	; 255
    3140:	3f 4f       	sbci	r19, 0xFF	; 255
    3142:	4f 4f       	sbci	r20, 0xFF	; 255
    3144:	5f 4f       	sbci	r21, 0xFF	; 255
    3146:	2c a7       	std	Y+44, r18	; 0x2c
    3148:	3d a7       	std	Y+45, r19	; 0x2d
    314a:	4e a7       	std	Y+46, r20	; 0x2e
    314c:	5f a7       	std	Y+47, r21	; 0x2f
    314e:	01 e0       	ldi	r16, 0x01	; 1
    3150:	10 e0       	ldi	r17, 0x00	; 0
    3152:	b6 01       	movw	r22, r12
    3154:	89 81       	ldd	r24, Y+1	; 0x01
    3156:	0e 94 3f 07 	call	0xe7e	; 0xe7e <disk_write>
    315a:	1d 82       	std	Y+5, r1	; 0x05
    315c:	40 e0       	ldi	r20, 0x00	; 0
    315e:	50 e0       	ldi	r21, 0x00	; 0
    3160:	60 e0       	ldi	r22, 0x00	; 0
    3162:	89 81       	ldd	r24, Y+1	; 0x01
    3164:	0e 94 a3 07 	call	0xf46	; 0xf46 <disk_ioctl>
    3168:	88 23       	and	r24, r24
    316a:	11 f0       	breq	.+4      	; 0x3170 <sync_fs+0xd2>
    316c:	ff 24       	eor	r15, r15
    316e:	f3 94       	inc	r15
    3170:	8f 2d       	mov	r24, r15
    3172:	df 91       	pop	r29
    3174:	cf 91       	pop	r28
    3176:	1f 91       	pop	r17
    3178:	0f 91       	pop	r16
    317a:	ff 90       	pop	r15
    317c:	df 90       	pop	r13
    317e:	cf 90       	pop	r12
    3180:	08 95       	ret

00003182 <f_mount>:
    3182:	1f 93       	push	r17
    3184:	cf 93       	push	r28
    3186:	df 93       	push	r29
    3188:	00 d0       	rcall	.+0      	; 0x318a <f_mount+0x8>
    318a:	00 d0       	rcall	.+0      	; 0x318c <f_mount+0xa>
    318c:	00 d0       	rcall	.+0      	; 0x318e <f_mount+0xc>
    318e:	cd b7       	in	r28, 0x3d	; 61
    3190:	de b7       	in	r29, 0x3e	; 62
    3192:	9c 83       	std	Y+4, r25	; 0x04
    3194:	8b 83       	std	Y+3, r24	; 0x03
    3196:	7e 83       	std	Y+6, r23	; 0x06
    3198:	6d 83       	std	Y+5, r22	; 0x05
    319a:	14 2f       	mov	r17, r20
    319c:	7a 83       	std	Y+2, r23	; 0x02
    319e:	69 83       	std	Y+1, r22	; 0x01
    31a0:	ce 01       	movw	r24, r28
    31a2:	01 96       	adiw	r24, 0x01	; 1
    31a4:	0e 94 3e 09 	call	0x127c	; 0x127c <get_ldnumber>
    31a8:	99 23       	and	r25, r25
    31aa:	6c f1       	brlt	.+90     	; 0x3206 <f_mount+0x84>
    31ac:	fc 01       	movw	r30, r24
    31ae:	ee 0f       	add	r30, r30
    31b0:	ff 1f       	adc	r31, r31
    31b2:	e5 52       	subi	r30, 0x25	; 37
    31b4:	fd 4f       	sbci	r31, 0xFD	; 253
    31b6:	a0 81       	ld	r26, Z
    31b8:	b1 81       	ldd	r27, Z+1	; 0x01
    31ba:	10 97       	sbiw	r26, 0x00	; 0
    31bc:	41 f0       	breq	.+16     	; 0x31ce <f_mount+0x4c>
    31be:	fc 01       	movw	r30, r24
    31c0:	ee 0f       	add	r30, r30
    31c2:	ff 1f       	adc	r31, r31
    31c4:	e5 52       	subi	r30, 0x25	; 37
    31c6:	fd 4f       	sbci	r31, 0xFD	; 253
    31c8:	11 82       	std	Z+1, r1	; 0x01
    31ca:	10 82       	st	Z, r1
    31cc:	1c 92       	st	X, r1
    31ce:	eb 81       	ldd	r30, Y+3	; 0x03
    31d0:	fc 81       	ldd	r31, Y+4	; 0x04
    31d2:	30 97       	sbiw	r30, 0x00	; 0
    31d4:	69 f0       	breq	.+26     	; 0x31f0 <f_mount+0x6e>
    31d6:	81 83       	std	Z+1, r24	; 0x01
    31d8:	eb 81       	ldd	r30, Y+3	; 0x03
    31da:	fc 81       	ldd	r31, Y+4	; 0x04
    31dc:	10 82       	st	Z, r1
    31de:	88 0f       	add	r24, r24
    31e0:	99 1f       	adc	r25, r25
    31e2:	fc 01       	movw	r30, r24
    31e4:	e5 52       	subi	r30, 0x25	; 37
    31e6:	fd 4f       	sbci	r31, 0xFD	; 253
    31e8:	8b 81       	ldd	r24, Y+3	; 0x03
    31ea:	9c 81       	ldd	r25, Y+4	; 0x04
    31ec:	91 83       	std	Z+1, r25	; 0x01
    31ee:	80 83       	st	Z, r24
    31f0:	11 23       	and	r17, r17
    31f2:	59 f0       	breq	.+22     	; 0x320a <f_mount+0x88>
    31f4:	40 e0       	ldi	r20, 0x00	; 0
    31f6:	be 01       	movw	r22, r28
    31f8:	6d 5f       	subi	r22, 0xFD	; 253
    31fa:	7f 4f       	sbci	r23, 0xFF	; 255
    31fc:	ce 01       	movw	r24, r28
    31fe:	05 96       	adiw	r24, 0x05	; 5
    3200:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <mount_volume>
    3204:	03 c0       	rjmp	.+6      	; 0x320c <f_mount+0x8a>
    3206:	8b e0       	ldi	r24, 0x0B	; 11
    3208:	01 c0       	rjmp	.+2      	; 0x320c <f_mount+0x8a>
    320a:	80 e0       	ldi	r24, 0x00	; 0
    320c:	26 96       	adiw	r28, 0x06	; 6
    320e:	0f b6       	in	r0, 0x3f	; 63
    3210:	f8 94       	cli
    3212:	de bf       	out	0x3e, r29	; 62
    3214:	0f be       	out	0x3f, r0	; 63
    3216:	cd bf       	out	0x3d, r28	; 61
    3218:	df 91       	pop	r29
    321a:	cf 91       	pop	r28
    321c:	1f 91       	pop	r17
    321e:	08 95       	ret

00003220 <f_open>:
    3220:	2f 92       	push	r2
    3222:	3f 92       	push	r3
    3224:	4f 92       	push	r4
    3226:	5f 92       	push	r5
    3228:	6f 92       	push	r6
    322a:	7f 92       	push	r7
    322c:	8f 92       	push	r8
    322e:	9f 92       	push	r9
    3230:	af 92       	push	r10
    3232:	bf 92       	push	r11
    3234:	cf 92       	push	r12
    3236:	df 92       	push	r13
    3238:	ff 92       	push	r15
    323a:	0f 93       	push	r16
    323c:	1f 93       	push	r17
    323e:	cf 93       	push	r28
    3240:	df 93       	push	r29
    3242:	cd b7       	in	r28, 0x3d	; 61
    3244:	de b7       	in	r29, 0x3e	; 62
    3246:	e0 97       	sbiw	r28, 0x30	; 48
    3248:	0f b6       	in	r0, 0x3f	; 63
    324a:	f8 94       	cli
    324c:	de bf       	out	0x3e, r29	; 62
    324e:	0f be       	out	0x3f, r0	; 63
    3250:	cd bf       	out	0x3d, r28	; 61
    3252:	7c a7       	std	Y+44, r23	; 0x2c
    3254:	6b a7       	std	Y+43, r22	; 0x2b
    3256:	00 97       	sbiw	r24, 0x00	; 0
    3258:	09 f4       	brne	.+2      	; 0x325c <f_open+0x3c>
    325a:	a9 c1       	rjmp	.+850    	; 0x35ae <f_open+0x38e>
    325c:	14 2f       	mov	r17, r20
    325e:	6c 01       	movw	r12, r24
    3260:	24 2f       	mov	r18, r20
    3262:	2f 73       	andi	r18, 0x3F	; 63
    3264:	52 2e       	mov	r5, r18
    3266:	42 2f       	mov	r20, r18
    3268:	be 01       	movw	r22, r28
    326a:	67 5d       	subi	r22, 0xD7	; 215
    326c:	7f 4f       	sbci	r23, 0xFF	; 255
    326e:	ce 01       	movw	r24, r28
    3270:	8b 96       	adiw	r24, 0x2b	; 43
    3272:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <mount_volume>
    3276:	f8 2e       	mov	r15, r24
    3278:	81 11       	cpse	r24, r1
    327a:	92 c1       	rjmp	.+804    	; 0x35a0 <f_open+0x380>
    327c:	89 a5       	ldd	r24, Y+41	; 0x29
    327e:	9a a5       	ldd	r25, Y+42	; 0x2a
    3280:	9a 83       	std	Y+2, r25	; 0x02
    3282:	89 83       	std	Y+1, r24	; 0x01
    3284:	6b a5       	ldd	r22, Y+43	; 0x2b
    3286:	7c a5       	ldd	r23, Y+44	; 0x2c
    3288:	ce 01       	movw	r24, r28
    328a:	01 96       	adiw	r24, 0x01	; 1
    328c:	0e 94 b8 17 	call	0x2f70	; 0x2f70 <follow_path>
    3290:	f8 2e       	mov	r15, r24
    3292:	81 11       	cpse	r24, r1
    3294:	07 c0       	rjmp	.+14     	; 0x32a4 <f_open+0x84>
    3296:	88 a5       	ldd	r24, Y+40	; 0x28
    3298:	88 23       	and	r24, r24
    329a:	24 f4       	brge	.+8      	; 0x32a4 <f_open+0x84>
    329c:	0f 2e       	mov	r0, r31
    329e:	f6 e0       	ldi	r31, 0x06	; 6
    32a0:	ff 2e       	mov	r15, r31
    32a2:	f0 2d       	mov	r31, r0
    32a4:	81 2f       	mov	r24, r17
    32a6:	8c 71       	andi	r24, 0x1C	; 28
    32a8:	09 f4       	brne	.+2      	; 0x32ac <f_open+0x8c>
    32aa:	82 c0       	rjmp	.+260    	; 0x33b0 <f_open+0x190>
    32ac:	ff 20       	and	r15, r15
    32ae:	61 f0       	breq	.+24     	; 0x32c8 <f_open+0xa8>
    32b0:	34 e0       	ldi	r19, 0x04	; 4
    32b2:	f3 12       	cpse	r15, r19
    32b4:	05 c0       	rjmp	.+10     	; 0x32c0 <f_open+0xa0>
    32b6:	ce 01       	movw	r24, r28
    32b8:	01 96       	adiw	r24, 0x01	; 1
    32ba:	0e 94 21 18 	call	0x3042	; 0x3042 <dir_register>
    32be:	f8 2e       	mov	r15, r24
    32c0:	85 2d       	mov	r24, r5
    32c2:	88 60       	ori	r24, 0x08	; 8
    32c4:	58 2e       	mov	r5, r24
    32c6:	0e c0       	rjmp	.+28     	; 0x32e4 <f_open+0xc4>
    32c8:	8d 81       	ldd	r24, Y+5	; 0x05
    32ca:	81 71       	andi	r24, 0x11	; 17
    32cc:	19 f4       	brne	.+6      	; 0x32d4 <f_open+0xb4>
    32ce:	12 fd       	sbrc	r17, 2
    32d0:	06 c0       	rjmp	.+12     	; 0x32de <f_open+0xbe>
    32d2:	08 c0       	rjmp	.+16     	; 0x32e4 <f_open+0xc4>
    32d4:	0f 2e       	mov	r0, r31
    32d6:	f7 e0       	ldi	r31, 0x07	; 7
    32d8:	ff 2e       	mov	r15, r31
    32da:	f0 2d       	mov	r31, r0
    32dc:	03 c0       	rjmp	.+6      	; 0x32e4 <f_open+0xc4>
    32de:	68 94       	set
    32e0:	ff 24       	eor	r15, r15
    32e2:	f3 f8       	bld	r15, 3
    32e4:	f1 10       	cpse	r15, r1
    32e6:	76 c0       	rjmp	.+236    	; 0x33d4 <f_open+0x1b4>
    32e8:	53 fe       	sbrs	r5, 3
    32ea:	74 c0       	rjmp	.+232    	; 0x33d4 <f_open+0x1b4>
    32ec:	8b 8d       	ldd	r24, Y+27	; 0x1b
    32ee:	9c 8d       	ldd	r25, Y+28	; 0x1c
    32f0:	40 e0       	ldi	r20, 0x00	; 0
    32f2:	50 e0       	ldi	r21, 0x00	; 0
    32f4:	61 e2       	ldi	r22, 0x21	; 33
    32f6:	74 e5       	ldi	r23, 0x54	; 84
    32f8:	0e 96       	adiw	r24, 0x0e	; 14
    32fa:	0e 94 88 08 	call	0x1110	; 0x1110 <st_dword>
    32fe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3300:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3302:	40 e0       	ldi	r20, 0x00	; 0
    3304:	50 e0       	ldi	r21, 0x00	; 0
    3306:	61 e2       	ldi	r22, 0x21	; 33
    3308:	74 e5       	ldi	r23, 0x54	; 84
    330a:	46 96       	adiw	r24, 0x16	; 22
    330c:	0e 94 88 08 	call	0x1110	; 0x1110 <st_dword>
    3310:	ab 8c       	ldd	r10, Y+27	; 0x1b
    3312:	bc 8c       	ldd	r11, Y+28	; 0x1c
    3314:	09 a5       	ldd	r16, Y+41	; 0x29
    3316:	1a a5       	ldd	r17, Y+42	; 0x2a
    3318:	b5 01       	movw	r22, r10
    331a:	c8 01       	movw	r24, r16
    331c:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <ld_clust>
    3320:	3b 01       	movw	r6, r22
    3322:	4c 01       	movw	r8, r24
    3324:	80 e2       	ldi	r24, 0x20	; 32
    3326:	d5 01       	movw	r26, r10
    3328:	1b 96       	adiw	r26, 0x0b	; 11
    332a:	8c 93       	st	X, r24
    332c:	6b 8d       	ldd	r22, Y+27	; 0x1b
    332e:	7c 8d       	ldd	r23, Y+28	; 0x1c
    3330:	20 e0       	ldi	r18, 0x00	; 0
    3332:	30 e0       	ldi	r19, 0x00	; 0
    3334:	a9 01       	movw	r20, r18
    3336:	c8 01       	movw	r24, r16
    3338:	0e 94 19 09 	call	0x1232	; 0x1232 <st_clust>
    333c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    333e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3340:	40 e0       	ldi	r20, 0x00	; 0
    3342:	50 e0       	ldi	r21, 0x00	; 0
    3344:	ba 01       	movw	r22, r20
    3346:	4c 96       	adiw	r24, 0x1c	; 28
    3348:	0e 94 88 08 	call	0x1110	; 0x1110 <st_dword>
    334c:	e9 a5       	ldd	r30, Y+41	; 0x29
    334e:	fa a5       	ldd	r31, Y+42	; 0x2a
    3350:	81 e0       	ldi	r24, 0x01	; 1
    3352:	84 83       	std	Z+4, r24	; 0x04
    3354:	61 14       	cp	r6, r1
    3356:	71 04       	cpc	r7, r1
    3358:	81 04       	cpc	r8, r1
    335a:	91 04       	cpc	r9, r1
    335c:	d9 f1       	breq	.+118    	; 0x33d4 <f_open+0x1b4>
    335e:	84 a5       	ldd	r24, Z+44	; 0x2c
    3360:	95 a5       	ldd	r25, Z+45	; 0x2d
    3362:	a6 a5       	ldd	r26, Z+46	; 0x2e
    3364:	b7 a5       	ldd	r27, Z+47	; 0x2f
    3366:	8d a7       	std	Y+45, r24	; 0x2d
    3368:	9e a7       	std	Y+46, r25	; 0x2e
    336a:	af a7       	std	Y+47, r26	; 0x2f
    336c:	b8 ab       	std	Y+48, r27	; 0x30
    336e:	00 e0       	ldi	r16, 0x00	; 0
    3370:	10 e0       	ldi	r17, 0x00	; 0
    3372:	98 01       	movw	r18, r16
    3374:	b4 01       	movw	r22, r8
    3376:	a3 01       	movw	r20, r6
    3378:	ce 01       	movw	r24, r28
    337a:	01 96       	adiw	r24, 0x01	; 1
    337c:	0e 94 75 14 	call	0x28ea	; 0x28ea <remove_chain>
    3380:	f8 2e       	mov	r15, r24
    3382:	81 11       	cpse	r24, r1
    3384:	27 c0       	rjmp	.+78     	; 0x33d4 <f_open+0x1b4>
    3386:	4d a5       	ldd	r20, Y+45	; 0x2d
    3388:	5e a5       	ldd	r21, Y+46	; 0x2e
    338a:	6f a5       	ldd	r22, Y+47	; 0x2f
    338c:	78 a9       	ldd	r23, Y+48	; 0x30
    338e:	89 a5       	ldd	r24, Y+41	; 0x29
    3390:	9a a5       	ldd	r25, Y+42	; 0x2a
    3392:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    3396:	f8 2e       	mov	r15, r24
    3398:	e9 a5       	ldd	r30, Y+41	; 0x29
    339a:	fa a5       	ldd	r31, Y+42	; 0x2a
    339c:	d4 01       	movw	r26, r8
    339e:	c3 01       	movw	r24, r6
    33a0:	01 97       	sbiw	r24, 0x01	; 1
    33a2:	a1 09       	sbc	r26, r1
    33a4:	b1 09       	sbc	r27, r1
    33a6:	84 87       	std	Z+12, r24	; 0x0c
    33a8:	95 87       	std	Z+13, r25	; 0x0d
    33aa:	a6 87       	std	Z+14, r26	; 0x0e
    33ac:	b7 87       	std	Z+15, r27	; 0x0f
    33ae:	12 c0       	rjmp	.+36     	; 0x33d4 <f_open+0x1b4>
    33b0:	f1 10       	cpse	r15, r1
    33b2:	10 c0       	rjmp	.+32     	; 0x33d4 <f_open+0x1b4>
    33b4:	8d 81       	ldd	r24, Y+5	; 0x05
    33b6:	84 fd       	sbrc	r24, 4
    33b8:	05 c0       	rjmp	.+10     	; 0x33c4 <f_open+0x1a4>
    33ba:	11 ff       	sbrs	r17, 1
    33bc:	0b c0       	rjmp	.+22     	; 0x33d4 <f_open+0x1b4>
    33be:	80 fd       	sbrc	r24, 0
    33c0:	05 c0       	rjmp	.+10     	; 0x33cc <f_open+0x1ac>
    33c2:	08 c0       	rjmp	.+16     	; 0x33d4 <f_open+0x1b4>
    33c4:	68 94       	set
    33c6:	ff 24       	eor	r15, r15
    33c8:	f2 f8       	bld	r15, 2
    33ca:	04 c0       	rjmp	.+8      	; 0x33d4 <f_open+0x1b4>
    33cc:	0f 2e       	mov	r0, r31
    33ce:	f7 e0       	ldi	r31, 0x07	; 7
    33d0:	ff 2e       	mov	r15, r31
    33d2:	f0 2d       	mov	r31, r0
    33d4:	f1 10       	cpse	r15, r1
    33d6:	14 c0       	rjmp	.+40     	; 0x3400 <f_open+0x1e0>
    33d8:	53 fe       	sbrs	r5, 3
    33da:	03 c0       	rjmp	.+6      	; 0x33e2 <f_open+0x1c2>
    33dc:	95 2d       	mov	r25, r5
    33de:	90 64       	ori	r25, 0x40	; 64
    33e0:	59 2e       	mov	r5, r25
    33e2:	e9 a5       	ldd	r30, Y+41	; 0x29
    33e4:	fa a5       	ldd	r31, Y+42	; 0x2a
    33e6:	84 a5       	ldd	r24, Z+44	; 0x2c
    33e8:	95 a5       	ldd	r25, Z+45	; 0x2d
    33ea:	a6 a5       	ldd	r26, Z+46	; 0x2e
    33ec:	b7 a5       	ldd	r27, Z+47	; 0x2f
    33ee:	f6 01       	movw	r30, r12
    33f0:	84 8f       	std	Z+28, r24	; 0x1c
    33f2:	95 8f       	std	Z+29, r25	; 0x1d
    33f4:	a6 8f       	std	Z+30, r26	; 0x1e
    33f6:	b7 8f       	std	Z+31, r27	; 0x1f
    33f8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    33fa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    33fc:	91 a3       	std	Z+33, r25	; 0x21
    33fe:	80 a3       	std	Z+32, r24	; 0x20
    3400:	f1 10       	cpse	r15, r1
    3402:	ce c0       	rjmp	.+412    	; 0x35a0 <f_open+0x380>
    3404:	6b 8c       	ldd	r6, Y+27	; 0x1b
    3406:	7c 8c       	ldd	r7, Y+28	; 0x1c
    3408:	09 a5       	ldd	r16, Y+41	; 0x29
    340a:	1a a5       	ldd	r17, Y+42	; 0x2a
    340c:	b3 01       	movw	r22, r6
    340e:	c8 01       	movw	r24, r16
    3410:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <ld_clust>
    3414:	6d a7       	std	Y+45, r22	; 0x2d
    3416:	7e a7       	std	Y+46, r23	; 0x2e
    3418:	8f a7       	std	Y+47, r24	; 0x2f
    341a:	98 ab       	std	Y+48, r25	; 0x30
    341c:	d6 01       	movw	r26, r12
    341e:	16 96       	adiw	r26, 0x06	; 6
    3420:	6d 93       	st	X+, r22
    3422:	7d 93       	st	X+, r23
    3424:	8d 93       	st	X+, r24
    3426:	9c 93       	st	X, r25
    3428:	19 97       	sbiw	r26, 0x09	; 9
    342a:	c3 01       	movw	r24, r6
    342c:	4c 96       	adiw	r24, 0x1c	; 28
    342e:	0e 94 69 08 	call	0x10d2	; 0x10d2 <ld_dword>
    3432:	4b 01       	movw	r8, r22
    3434:	5c 01       	movw	r10, r24
    3436:	f6 01       	movw	r30, r12
    3438:	62 87       	std	Z+10, r22	; 0x0a
    343a:	73 87       	std	Z+11, r23	; 0x0b
    343c:	84 87       	std	Z+12, r24	; 0x0c
    343e:	95 87       	std	Z+13, r25	; 0x0d
    3440:	11 83       	std	Z+1, r17	; 0x01
    3442:	00 83       	st	Z, r16
    3444:	d8 01       	movw	r26, r16
    3446:	16 96       	adiw	r26, 0x06	; 6
    3448:	8d 91       	ld	r24, X+
    344a:	9c 91       	ld	r25, X
    344c:	17 97       	sbiw	r26, 0x07	; 7
    344e:	93 83       	std	Z+3, r25	; 0x03
    3450:	82 83       	std	Z+2, r24	; 0x02
    3452:	56 86       	std	Z+14, r5	; 0x0e
    3454:	17 86       	std	Z+15, r1	; 0x0f
    3456:	10 8e       	std	Z+24, r1	; 0x18
    3458:	11 8e       	std	Z+25, r1	; 0x19
    345a:	12 8e       	std	Z+26, r1	; 0x1a
    345c:	13 8e       	std	Z+27, r1	; 0x1b
    345e:	10 8a       	std	Z+16, r1	; 0x10
    3460:	11 8a       	std	Z+17, r1	; 0x11
    3462:	12 8a       	std	Z+18, r1	; 0x12
    3464:	13 8a       	std	Z+19, r1	; 0x13
    3466:	16 01       	movw	r2, r12
    3468:	b2 e2       	ldi	r27, 0x22	; 34
    346a:	2b 0e       	add	r2, r27
    346c:	31 1c       	adc	r3, r1
    346e:	80 e0       	ldi	r24, 0x00	; 0
    3470:	92 e0       	ldi	r25, 0x02	; 2
    3472:	f1 01       	movw	r30, r2
    3474:	9c 01       	movw	r18, r24
    3476:	11 92       	st	Z+, r1
    3478:	21 50       	subi	r18, 0x01	; 1
    347a:	30 40       	sbci	r19, 0x00	; 0
    347c:	e1 f7       	brne	.-8      	; 0x3476 <f_open+0x256>
    347e:	55 fe       	sbrs	r5, 5
    3480:	8f c0       	rjmp	.+286    	; 0x35a0 <f_open+0x380>
    3482:	81 14       	cp	r8, r1
    3484:	91 04       	cpc	r9, r1
    3486:	a1 04       	cpc	r10, r1
    3488:	b1 04       	cpc	r11, r1
    348a:	09 f4       	brne	.+2      	; 0x348e <f_open+0x26e>
    348c:	89 c0       	rjmp	.+274    	; 0x35a0 <f_open+0x380>
    348e:	d6 01       	movw	r26, r12
    3490:	50 96       	adiw	r26, 0x10	; 16
    3492:	8d 92       	st	X+, r8
    3494:	9d 92       	st	X+, r9
    3496:	ad 92       	st	X+, r10
    3498:	bc 92       	st	X, r11
    349a:	53 97       	sbiw	r26, 0x13	; 19
    349c:	f8 01       	movw	r30, r16
    349e:	42 84       	ldd	r4, Z+10	; 0x0a
    34a0:	53 84       	ldd	r5, Z+11	; 0x0b
    34a2:	61 2c       	mov	r6, r1
    34a4:	71 2c       	mov	r7, r1
    34a6:	03 2e       	mov	r0, r19
    34a8:	39 e0       	ldi	r19, 0x09	; 9
    34aa:	44 0c       	add	r4, r4
    34ac:	55 1c       	adc	r5, r5
    34ae:	66 1c       	adc	r6, r6
    34b0:	77 1c       	adc	r7, r7
    34b2:	3a 95       	dec	r19
    34b4:	d1 f7       	brne	.-12     	; 0x34aa <f_open+0x28a>
    34b6:	30 2d       	mov	r19, r0
    34b8:	22 c0       	rjmp	.+68     	; 0x34fe <f_open+0x2de>
    34ba:	4d a5       	ldd	r20, Y+45	; 0x2d
    34bc:	5e a5       	ldd	r21, Y+46	; 0x2e
    34be:	6f a5       	ldd	r22, Y+47	; 0x2f
    34c0:	78 a9       	ldd	r23, Y+48	; 0x30
    34c2:	c6 01       	movw	r24, r12
    34c4:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <get_fat>
    34c8:	6d a7       	std	Y+45, r22	; 0x2d
    34ca:	7e a7       	std	Y+46, r23	; 0x2e
    34cc:	8f a7       	std	Y+47, r24	; 0x2f
    34ce:	98 ab       	std	Y+48, r25	; 0x30
    34d0:	62 30       	cpi	r22, 0x02	; 2
    34d2:	71 05       	cpc	r23, r1
    34d4:	81 05       	cpc	r24, r1
    34d6:	91 05       	cpc	r25, r1
    34d8:	18 f4       	brcc	.+6      	; 0x34e0 <f_open+0x2c0>
    34da:	68 94       	set
    34dc:	ff 24       	eor	r15, r15
    34de:	f1 f8       	bld	r15, 1
    34e0:	8d a5       	ldd	r24, Y+45	; 0x2d
    34e2:	9e a5       	ldd	r25, Y+46	; 0x2e
    34e4:	af a5       	ldd	r26, Y+47	; 0x2f
    34e6:	b8 a9       	ldd	r27, Y+48	; 0x30
    34e8:	8f 3f       	cpi	r24, 0xFF	; 255
    34ea:	9f 4f       	sbci	r25, 0xFF	; 255
    34ec:	af 4f       	sbci	r26, 0xFF	; 255
    34ee:	bf 4f       	sbci	r27, 0xFF	; 255
    34f0:	11 f4       	brne	.+4      	; 0x34f6 <f_open+0x2d6>
    34f2:	ff 24       	eor	r15, r15
    34f4:	f3 94       	inc	r15
    34f6:	84 18       	sub	r8, r4
    34f8:	95 08       	sbc	r9, r5
    34fa:	a6 08       	sbc	r10, r6
    34fc:	b7 08       	sbc	r11, r7
    34fe:	f1 10       	cpse	r15, r1
    3500:	05 c0       	rjmp	.+10     	; 0x350c <f_open+0x2ec>
    3502:	48 14       	cp	r4, r8
    3504:	59 04       	cpc	r5, r9
    3506:	6a 04       	cpc	r6, r10
    3508:	7b 04       	cpc	r7, r11
    350a:	b8 f2       	brcs	.-82     	; 0x34ba <f_open+0x29a>
    350c:	8d a5       	ldd	r24, Y+45	; 0x2d
    350e:	9e a5       	ldd	r25, Y+46	; 0x2e
    3510:	af a5       	ldd	r26, Y+47	; 0x2f
    3512:	b8 a9       	ldd	r27, Y+48	; 0x30
    3514:	f6 01       	movw	r30, r12
    3516:	84 8b       	std	Z+20, r24	; 0x14
    3518:	95 8b       	std	Z+21, r25	; 0x15
    351a:	a6 8b       	std	Z+22, r26	; 0x16
    351c:	b7 8b       	std	Z+23, r27	; 0x17
    351e:	f1 10       	cpse	r15, r1
    3520:	3f c0       	rjmp	.+126    	; 0x35a0 <f_open+0x380>
    3522:	d5 01       	movw	r26, r10
    3524:	c4 01       	movw	r24, r8
    3526:	91 70       	andi	r25, 0x01	; 1
    3528:	aa 27       	eor	r26, r26
    352a:	bb 27       	eor	r27, r27
    352c:	89 2b       	or	r24, r25
    352e:	8a 2b       	or	r24, r26
    3530:	8b 2b       	or	r24, r27
    3532:	b1 f1       	breq	.+108    	; 0x35a0 <f_open+0x380>
    3534:	69 a4       	ldd	r6, Y+41	; 0x29
    3536:	7a a4       	ldd	r7, Y+42	; 0x2a
    3538:	4d a5       	ldd	r20, Y+45	; 0x2d
    353a:	5e a5       	ldd	r21, Y+46	; 0x2e
    353c:	6f a5       	ldd	r22, Y+47	; 0x2f
    353e:	78 a9       	ldd	r23, Y+48	; 0x30
    3540:	c3 01       	movw	r24, r6
    3542:	0e 94 be 08 	call	0x117c	; 0x117c <clst2sect>
    3546:	61 15       	cp	r22, r1
    3548:	71 05       	cpc	r23, r1
    354a:	81 05       	cpc	r24, r1
    354c:	91 05       	cpc	r25, r1
    354e:	11 f1       	breq	.+68     	; 0x3594 <f_open+0x374>
    3550:	95 01       	movw	r18, r10
    3552:	84 01       	movw	r16, r8
    3554:	0f 2e       	mov	r0, r31
    3556:	f9 e0       	ldi	r31, 0x09	; 9
    3558:	36 95       	lsr	r19
    355a:	27 95       	ror	r18
    355c:	17 95       	ror	r17
    355e:	07 95       	ror	r16
    3560:	fa 95       	dec	r31
    3562:	d1 f7       	brne	.-12     	; 0x3558 <f_open+0x338>
    3564:	f0 2d       	mov	r31, r0
    3566:	a9 01       	movw	r20, r18
    3568:	98 01       	movw	r18, r16
    356a:	26 0f       	add	r18, r22
    356c:	37 1f       	adc	r19, r23
    356e:	48 1f       	adc	r20, r24
    3570:	59 1f       	adc	r21, r25
    3572:	d6 01       	movw	r26, r12
    3574:	58 96       	adiw	r26, 0x18	; 24
    3576:	2d 93       	st	X+, r18
    3578:	3d 93       	st	X+, r19
    357a:	4d 93       	st	X+, r20
    357c:	5c 93       	st	X, r21
    357e:	5b 97       	sbiw	r26, 0x1b	; 27
    3580:	01 e0       	ldi	r16, 0x01	; 1
    3582:	10 e0       	ldi	r17, 0x00	; 0
    3584:	b1 01       	movw	r22, r2
    3586:	f3 01       	movw	r30, r6
    3588:	81 81       	ldd	r24, Z+1	; 0x01
    358a:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <disk_read>
    358e:	81 11       	cpse	r24, r1
    3590:	05 c0       	rjmp	.+10     	; 0x359c <f_open+0x37c>
    3592:	06 c0       	rjmp	.+12     	; 0x35a0 <f_open+0x380>
    3594:	68 94       	set
    3596:	ff 24       	eor	r15, r15
    3598:	f1 f8       	bld	r15, 1
    359a:	02 c0       	rjmp	.+4      	; 0x35a0 <f_open+0x380>
    359c:	ff 24       	eor	r15, r15
    359e:	f3 94       	inc	r15
    35a0:	ff 20       	and	r15, r15
    35a2:	39 f0       	breq	.+14     	; 0x35b2 <f_open+0x392>
    35a4:	d6 01       	movw	r26, r12
    35a6:	1d 92       	st	X+, r1
    35a8:	1c 92       	st	X, r1
    35aa:	8f 2d       	mov	r24, r15
    35ac:	03 c0       	rjmp	.+6      	; 0x35b4 <f_open+0x394>
    35ae:	89 e0       	ldi	r24, 0x09	; 9
    35b0:	01 c0       	rjmp	.+2      	; 0x35b4 <f_open+0x394>
    35b2:	8f 2d       	mov	r24, r15
    35b4:	e0 96       	adiw	r28, 0x30	; 48
    35b6:	0f b6       	in	r0, 0x3f	; 63
    35b8:	f8 94       	cli
    35ba:	de bf       	out	0x3e, r29	; 62
    35bc:	0f be       	out	0x3f, r0	; 63
    35be:	cd bf       	out	0x3d, r28	; 61
    35c0:	df 91       	pop	r29
    35c2:	cf 91       	pop	r28
    35c4:	1f 91       	pop	r17
    35c6:	0f 91       	pop	r16
    35c8:	ff 90       	pop	r15
    35ca:	df 90       	pop	r13
    35cc:	cf 90       	pop	r12
    35ce:	bf 90       	pop	r11
    35d0:	af 90       	pop	r10
    35d2:	9f 90       	pop	r9
    35d4:	8f 90       	pop	r8
    35d6:	7f 90       	pop	r7
    35d8:	6f 90       	pop	r6
    35da:	5f 90       	pop	r5
    35dc:	4f 90       	pop	r4
    35de:	3f 90       	pop	r3
    35e0:	2f 90       	pop	r2
    35e2:	08 95       	ret

000035e4 <f_write>:
    35e4:	2f 92       	push	r2
    35e6:	3f 92       	push	r3
    35e8:	4f 92       	push	r4
    35ea:	5f 92       	push	r5
    35ec:	6f 92       	push	r6
    35ee:	7f 92       	push	r7
    35f0:	8f 92       	push	r8
    35f2:	9f 92       	push	r9
    35f4:	af 92       	push	r10
    35f6:	bf 92       	push	r11
    35f8:	cf 92       	push	r12
    35fa:	df 92       	push	r13
    35fc:	ef 92       	push	r14
    35fe:	ff 92       	push	r15
    3600:	0f 93       	push	r16
    3602:	1f 93       	push	r17
    3604:	cf 93       	push	r28
    3606:	df 93       	push	r29
    3608:	cd b7       	in	r28, 0x3d	; 61
    360a:	de b7       	in	r29, 0x3e	; 62
    360c:	28 97       	sbiw	r28, 0x08	; 8
    360e:	0f b6       	in	r0, 0x3f	; 63
    3610:	f8 94       	cli
    3612:	de bf       	out	0x3e, r29	; 62
    3614:	0f be       	out	0x3f, r0	; 63
    3616:	cd bf       	out	0x3d, r28	; 61
    3618:	7c 01       	movw	r14, r24
    361a:	4b 01       	movw	r8, r22
    361c:	6a 01       	movw	r12, r20
    361e:	59 01       	movw	r10, r18
    3620:	d9 01       	movw	r26, r18
    3622:	1d 92       	st	X+, r1
    3624:	1c 92       	st	X, r1
    3626:	8f 83       	std	Y+7, r24	; 0x07
    3628:	f8 86       	std	Y+8, r15	; 0x08
    362a:	be 01       	movw	r22, r28
    362c:	6f 5f       	subi	r22, 0xFF	; 255
    362e:	7f 4f       	sbci	r23, 0xFF	; 255
    3630:	0e 94 c1 0b 	call	0x1782	; 0x1782 <validate>
    3634:	81 11       	cpse	r24, r1
    3636:	87 c1       	rjmp	.+782    	; 0x3946 <f_write+0x362>
    3638:	f7 01       	movw	r30, r14
    363a:	87 85       	ldd	r24, Z+15	; 0x0f
    363c:	81 11       	cpse	r24, r1
    363e:	83 c1       	rjmp	.+774    	; 0x3946 <f_write+0x362>
    3640:	86 85       	ldd	r24, Z+14	; 0x0e
    3642:	81 ff       	sbrs	r24, 1
    3644:	7f c1       	rjmp	.+766    	; 0x3944 <f_write+0x360>
    3646:	80 89       	ldd	r24, Z+16	; 0x10
    3648:	91 89       	ldd	r25, Z+17	; 0x11
    364a:	a2 89       	ldd	r26, Z+18	; 0x12
    364c:	b3 89       	ldd	r27, Z+19	; 0x13
    364e:	ac 01       	movw	r20, r24
    3650:	bd 01       	movw	r22, r26
    3652:	4c 0d       	add	r20, r12
    3654:	5d 1d       	adc	r21, r13
    3656:	61 1d       	adc	r22, r1
    3658:	71 1d       	adc	r23, r1
    365a:	48 17       	cp	r20, r24
    365c:	59 07       	cpc	r21, r25
    365e:	6a 07       	cpc	r22, r26
    3660:	7b 07       	cpc	r23, r27
    3662:	08 f0       	brcs	.+2      	; 0x3666 <f_write+0x82>
    3664:	62 c1       	rjmp	.+708    	; 0x392a <f_write+0x346>
    3666:	6c 01       	movw	r12, r24
    3668:	c0 94       	com	r12
    366a:	d0 94       	com	r13
    366c:	5e c1       	rjmp	.+700    	; 0x392a <f_write+0x346>
    366e:	f7 01       	movw	r30, r14
    3670:	80 89       	ldd	r24, Z+16	; 0x10
    3672:	91 89       	ldd	r25, Z+17	; 0x11
    3674:	a2 89       	ldd	r26, Z+18	; 0x12
    3676:	b3 89       	ldd	r27, Z+19	; 0x13
    3678:	ac 01       	movw	r20, r24
    367a:	bd 01       	movw	r22, r26
    367c:	51 70       	andi	r21, 0x01	; 1
    367e:	66 27       	eor	r22, r22
    3680:	77 27       	eor	r23, r23
    3682:	45 2b       	or	r20, r21
    3684:	46 2b       	or	r20, r22
    3686:	47 2b       	or	r20, r23
    3688:	09 f0       	breq	.+2      	; 0x368c <f_write+0xa8>
    368a:	08 c1       	rjmp	.+528    	; 0x389c <f_write+0x2b8>
    368c:	e9 81       	ldd	r30, Y+1	; 0x01
    368e:	fa 81       	ldd	r31, Y+2	; 0x02
    3690:	62 84       	ldd	r6, Z+10	; 0x0a
    3692:	73 84       	ldd	r7, Z+11	; 0x0b
    3694:	f1 e0       	ldi	r31, 0x01	; 1
    3696:	6f 1a       	sub	r6, r31
    3698:	71 08       	sbc	r7, r1
    369a:	ac 01       	movw	r20, r24
    369c:	bd 01       	movw	r22, r26
    369e:	03 2e       	mov	r0, r19
    36a0:	39 e0       	ldi	r19, 0x09	; 9
    36a2:	76 95       	lsr	r23
    36a4:	67 95       	ror	r22
    36a6:	57 95       	ror	r21
    36a8:	47 95       	ror	r20
    36aa:	3a 95       	dec	r19
    36ac:	d1 f7       	brne	.-12     	; 0x36a2 <f_write+0xbe>
    36ae:	30 2d       	mov	r19, r0
    36b0:	64 22       	and	r6, r20
    36b2:	75 22       	and	r7, r21
    36b4:	61 14       	cp	r6, r1
    36b6:	71 04       	cpc	r7, r1
    36b8:	09 f0       	breq	.+2      	; 0x36bc <f_write+0xd8>
    36ba:	51 c0       	rjmp	.+162    	; 0x375e <f_write+0x17a>
    36bc:	89 2b       	or	r24, r25
    36be:	8a 2b       	or	r24, r26
    36c0:	8b 2b       	or	r24, r27
    36c2:	a1 f4       	brne	.+40     	; 0x36ec <f_write+0x108>
    36c4:	d7 01       	movw	r26, r14
    36c6:	16 96       	adiw	r26, 0x06	; 6
    36c8:	6d 91       	ld	r22, X+
    36ca:	7d 91       	ld	r23, X+
    36cc:	8d 91       	ld	r24, X+
    36ce:	9c 91       	ld	r25, X
    36d0:	19 97       	sbiw	r26, 0x09	; 9
    36d2:	61 15       	cp	r22, r1
    36d4:	71 05       	cpc	r23, r1
    36d6:	81 05       	cpc	r24, r1
    36d8:	91 05       	cpc	r25, r1
    36da:	89 f4       	brne	.+34     	; 0x36fe <f_write+0x11a>
    36dc:	40 e0       	ldi	r20, 0x00	; 0
    36de:	50 e0       	ldi	r21, 0x00	; 0
    36e0:	ba 01       	movw	r22, r20
    36e2:	8f 81       	ldd	r24, Y+7	; 0x07
    36e4:	98 85       	ldd	r25, Y+8	; 0x08
    36e6:	0e 94 24 13 	call	0x2648	; 0x2648 <create_chain>
    36ea:	09 c0       	rjmp	.+18     	; 0x36fe <f_write+0x11a>
    36ec:	f7 01       	movw	r30, r14
    36ee:	44 89       	ldd	r20, Z+20	; 0x14
    36f0:	55 89       	ldd	r21, Z+21	; 0x15
    36f2:	66 89       	ldd	r22, Z+22	; 0x16
    36f4:	77 89       	ldd	r23, Z+23	; 0x17
    36f6:	8f 81       	ldd	r24, Y+7	; 0x07
    36f8:	98 85       	ldd	r25, Y+8	; 0x08
    36fa:	0e 94 24 13 	call	0x2648	; 0x2648 <create_chain>
    36fe:	61 15       	cp	r22, r1
    3700:	71 05       	cpc	r23, r1
    3702:	81 05       	cpc	r24, r1
    3704:	91 05       	cpc	r25, r1
    3706:	09 f4       	brne	.+2      	; 0x370a <f_write+0x126>
    3708:	14 c1       	rjmp	.+552    	; 0x3932 <f_write+0x34e>
    370a:	61 30       	cpi	r22, 0x01	; 1
    370c:	71 05       	cpc	r23, r1
    370e:	81 05       	cpc	r24, r1
    3710:	91 05       	cpc	r25, r1
    3712:	29 f4       	brne	.+10     	; 0x371e <f_write+0x13a>
    3714:	82 e0       	ldi	r24, 0x02	; 2
    3716:	d7 01       	movw	r26, r14
    3718:	1f 96       	adiw	r26, 0x0f	; 15
    371a:	8c 93       	st	X, r24
    371c:	14 c1       	rjmp	.+552    	; 0x3946 <f_write+0x362>
    371e:	6f 3f       	cpi	r22, 0xFF	; 255
    3720:	bf ef       	ldi	r27, 0xFF	; 255
    3722:	7b 07       	cpc	r23, r27
    3724:	8b 07       	cpc	r24, r27
    3726:	9b 07       	cpc	r25, r27
    3728:	21 f4       	brne	.+8      	; 0x3732 <f_write+0x14e>
    372a:	81 e0       	ldi	r24, 0x01	; 1
    372c:	f7 01       	movw	r30, r14
    372e:	87 87       	std	Z+15, r24	; 0x0f
    3730:	0a c1       	rjmp	.+532    	; 0x3946 <f_write+0x362>
    3732:	d7 01       	movw	r26, r14
    3734:	54 96       	adiw	r26, 0x14	; 20
    3736:	6d 93       	st	X+, r22
    3738:	7d 93       	st	X+, r23
    373a:	8d 93       	st	X+, r24
    373c:	9c 93       	st	X, r25
    373e:	57 97       	sbiw	r26, 0x17	; 23
    3740:	16 96       	adiw	r26, 0x06	; 6
    3742:	0d 91       	ld	r16, X+
    3744:	1d 91       	ld	r17, X+
    3746:	2d 91       	ld	r18, X+
    3748:	3c 91       	ld	r19, X
    374a:	19 97       	sbiw	r26, 0x09	; 9
    374c:	01 2b       	or	r16, r17
    374e:	02 2b       	or	r16, r18
    3750:	03 2b       	or	r16, r19
    3752:	29 f4       	brne	.+10     	; 0x375e <f_write+0x17a>
    3754:	f7 01       	movw	r30, r14
    3756:	66 83       	std	Z+6, r22	; 0x06
    3758:	77 83       	std	Z+7, r23	; 0x07
    375a:	80 87       	std	Z+8, r24	; 0x08
    375c:	91 87       	std	Z+9, r25	; 0x09
    375e:	d7 01       	movw	r26, r14
    3760:	1e 96       	adiw	r26, 0x0e	; 14
    3762:	8c 91       	ld	r24, X
    3764:	1e 97       	sbiw	r26, 0x0e	; 14
    3766:	88 23       	and	r24, r24
    3768:	ec f4       	brge	.+58     	; 0x37a4 <f_write+0x1c0>
    376a:	e9 81       	ldd	r30, Y+1	; 0x01
    376c:	fa 81       	ldd	r31, Y+2	; 0x02
    376e:	58 96       	adiw	r26, 0x18	; 24
    3770:	2d 91       	ld	r18, X+
    3772:	3d 91       	ld	r19, X+
    3774:	4d 91       	ld	r20, X+
    3776:	5c 91       	ld	r21, X
    3778:	5b 97       	sbiw	r26, 0x1b	; 27
    377a:	01 e0       	ldi	r16, 0x01	; 1
    377c:	10 e0       	ldi	r17, 0x00	; 0
    377e:	b7 01       	movw	r22, r14
    3780:	6e 5d       	subi	r22, 0xDE	; 222
    3782:	7f 4f       	sbci	r23, 0xFF	; 255
    3784:	81 81       	ldd	r24, Z+1	; 0x01
    3786:	0e 94 3f 07 	call	0xe7e	; 0xe7e <disk_write>
    378a:	88 23       	and	r24, r24
    378c:	21 f0       	breq	.+8      	; 0x3796 <f_write+0x1b2>
    378e:	81 e0       	ldi	r24, 0x01	; 1
    3790:	f7 01       	movw	r30, r14
    3792:	87 87       	std	Z+15, r24	; 0x0f
    3794:	d8 c0       	rjmp	.+432    	; 0x3946 <f_write+0x362>
    3796:	d7 01       	movw	r26, r14
    3798:	1e 96       	adiw	r26, 0x0e	; 14
    379a:	8c 91       	ld	r24, X
    379c:	1e 97       	sbiw	r26, 0x0e	; 14
    379e:	8f 77       	andi	r24, 0x7F	; 127
    37a0:	1e 96       	adiw	r26, 0x0e	; 14
    37a2:	8c 93       	st	X, r24
    37a4:	f7 01       	movw	r30, r14
    37a6:	44 89       	ldd	r20, Z+20	; 0x14
    37a8:	55 89       	ldd	r21, Z+21	; 0x15
    37aa:	66 89       	ldd	r22, Z+22	; 0x16
    37ac:	77 89       	ldd	r23, Z+23	; 0x17
    37ae:	89 81       	ldd	r24, Y+1	; 0x01
    37b0:	9a 81       	ldd	r25, Y+2	; 0x02
    37b2:	9e 83       	std	Y+6, r25	; 0x06
    37b4:	8d 83       	std	Y+5, r24	; 0x05
    37b6:	0e 94 be 08 	call	0x117c	; 0x117c <clst2sect>
    37ba:	61 15       	cp	r22, r1
    37bc:	71 05       	cpc	r23, r1
    37be:	81 05       	cpc	r24, r1
    37c0:	91 05       	cpc	r25, r1
    37c2:	29 f4       	brne	.+10     	; 0x37ce <f_write+0x1ea>
    37c4:	82 e0       	ldi	r24, 0x02	; 2
    37c6:	d7 01       	movw	r26, r14
    37c8:	1f 96       	adiw	r26, 0x0f	; 15
    37ca:	8c 93       	st	X, r24
    37cc:	bc c0       	rjmp	.+376    	; 0x3946 <f_write+0x362>
    37ce:	1b 01       	movw	r2, r22
    37d0:	2c 01       	movw	r4, r24
    37d2:	26 0c       	add	r2, r6
    37d4:	37 1c       	adc	r3, r7
    37d6:	41 1c       	adc	r4, r1
    37d8:	51 1c       	adc	r5, r1
    37da:	f6 01       	movw	r30, r12
    37dc:	ef 2f       	mov	r30, r31
    37de:	ff 27       	eor	r31, r31
    37e0:	e6 95       	lsr	r30
    37e2:	fc 83       	std	Y+4, r31	; 0x04
    37e4:	eb 83       	std	Y+3, r30	; 0x03
    37e6:	30 97       	sbiw	r30, 0x00	; 0
    37e8:	41 f1       	breq	.+80     	; 0x383a <f_write+0x256>
    37ea:	ad 81       	ldd	r26, Y+5	; 0x05
    37ec:	be 81       	ldd	r27, Y+6	; 0x06
    37ee:	1a 96       	adiw	r26, 0x0a	; 10
    37f0:	2d 91       	ld	r18, X+
    37f2:	3c 91       	ld	r19, X
    37f4:	1b 97       	sbiw	r26, 0x0b	; 11
    37f6:	cf 01       	movw	r24, r30
    37f8:	86 0d       	add	r24, r6
    37fa:	97 1d       	adc	r25, r7
    37fc:	28 17       	cp	r18, r24
    37fe:	39 07       	cpc	r19, r25
    3800:	28 f4       	brcc	.+10     	; 0x380c <f_write+0x228>
    3802:	f9 01       	movw	r30, r18
    3804:	e6 19       	sub	r30, r6
    3806:	f7 09       	sbc	r31, r7
    3808:	fc 83       	std	Y+4, r31	; 0x04
    380a:	eb 83       	std	Y+3, r30	; 0x03
    380c:	0b 81       	ldd	r16, Y+3	; 0x03
    380e:	1c 81       	ldd	r17, Y+4	; 0x04
    3810:	a2 01       	movw	r20, r4
    3812:	91 01       	movw	r18, r2
    3814:	b4 01       	movw	r22, r8
    3816:	ad 81       	ldd	r26, Y+5	; 0x05
    3818:	be 81       	ldd	r27, Y+6	; 0x06
    381a:	11 96       	adiw	r26, 0x01	; 1
    381c:	8c 91       	ld	r24, X
    381e:	0e 94 3f 07 	call	0xe7e	; 0xe7e <disk_write>
    3822:	88 23       	and	r24, r24
    3824:	21 f0       	breq	.+8      	; 0x382e <f_write+0x24a>
    3826:	81 e0       	ldi	r24, 0x01	; 1
    3828:	f7 01       	movw	r30, r14
    382a:	87 87       	std	Z+15, r24	; 0x0f
    382c:	8c c0       	rjmp	.+280    	; 0x3946 <f_write+0x362>
    382e:	6b 80       	ldd	r6, Y+3	; 0x03
    3830:	7c 80       	ldd	r7, Y+4	; 0x04
    3832:	76 2c       	mov	r7, r6
    3834:	66 24       	eor	r6, r6
    3836:	77 0c       	add	r7, r7
    3838:	50 c0       	rjmp	.+160    	; 0x38da <f_write+0x2f6>
    383a:	f7 01       	movw	r30, r14
    383c:	80 8d       	ldd	r24, Z+24	; 0x18
    383e:	91 8d       	ldd	r25, Z+25	; 0x19
    3840:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3842:	b3 8d       	ldd	r27, Z+27	; 0x1b
    3844:	28 16       	cp	r2, r24
    3846:	39 06       	cpc	r3, r25
    3848:	4a 06       	cpc	r4, r26
    384a:	5b 06       	cpc	r5, r27
    384c:	01 f1       	breq	.+64     	; 0x388e <f_write+0x2aa>
    384e:	40 89       	ldd	r20, Z+16	; 0x10
    3850:	51 89       	ldd	r21, Z+17	; 0x11
    3852:	62 89       	ldd	r22, Z+18	; 0x12
    3854:	73 89       	ldd	r23, Z+19	; 0x13
    3856:	82 85       	ldd	r24, Z+10	; 0x0a
    3858:	93 85       	ldd	r25, Z+11	; 0x0b
    385a:	a4 85       	ldd	r26, Z+12	; 0x0c
    385c:	b5 85       	ldd	r27, Z+13	; 0x0d
    385e:	48 17       	cp	r20, r24
    3860:	59 07       	cpc	r21, r25
    3862:	6a 07       	cpc	r22, r26
    3864:	7b 07       	cpc	r23, r27
    3866:	98 f4       	brcc	.+38     	; 0x388e <f_write+0x2aa>
    3868:	01 e0       	ldi	r16, 0x01	; 1
    386a:	10 e0       	ldi	r17, 0x00	; 0
    386c:	a2 01       	movw	r20, r4
    386e:	91 01       	movw	r18, r2
    3870:	b7 01       	movw	r22, r14
    3872:	6e 5d       	subi	r22, 0xDE	; 222
    3874:	7f 4f       	sbci	r23, 0xFF	; 255
    3876:	ad 81       	ldd	r26, Y+5	; 0x05
    3878:	be 81       	ldd	r27, Y+6	; 0x06
    387a:	11 96       	adiw	r26, 0x01	; 1
    387c:	8c 91       	ld	r24, X
    387e:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <disk_read>
    3882:	88 23       	and	r24, r24
    3884:	21 f0       	breq	.+8      	; 0x388e <f_write+0x2aa>
    3886:	81 e0       	ldi	r24, 0x01	; 1
    3888:	f7 01       	movw	r30, r14
    388a:	87 87       	std	Z+15, r24	; 0x0f
    388c:	5c c0       	rjmp	.+184    	; 0x3946 <f_write+0x362>
    388e:	d7 01       	movw	r26, r14
    3890:	58 96       	adiw	r26, 0x18	; 24
    3892:	2d 92       	st	X+, r2
    3894:	3d 92       	st	X+, r3
    3896:	4d 92       	st	X+, r4
    3898:	5c 92       	st	X, r5
    389a:	5b 97       	sbiw	r26, 0x1b	; 27
    389c:	f7 01       	movw	r30, r14
    389e:	80 89       	ldd	r24, Z+16	; 0x10
    38a0:	91 89       	ldd	r25, Z+17	; 0x11
    38a2:	a2 89       	ldd	r26, Z+18	; 0x12
    38a4:	b3 89       	ldd	r27, Z+19	; 0x13
    38a6:	91 70       	andi	r25, 0x01	; 1
    38a8:	20 e0       	ldi	r18, 0x00	; 0
    38aa:	32 e0       	ldi	r19, 0x02	; 2
    38ac:	39 01       	movw	r6, r18
    38ae:	68 1a       	sub	r6, r24
    38b0:	79 0a       	sbc	r7, r25
    38b2:	c6 14       	cp	r12, r6
    38b4:	d7 04       	cpc	r13, r7
    38b6:	08 f4       	brcc	.+2      	; 0x38ba <f_write+0x2d6>
    38b8:	36 01       	movw	r6, r12
    38ba:	a3 01       	movw	r20, r6
    38bc:	b4 01       	movw	r22, r8
    38be:	97 01       	movw	r18, r14
    38c0:	2e 5d       	subi	r18, 0xDE	; 222
    38c2:	3f 4f       	sbci	r19, 0xFF	; 255
    38c4:	82 0f       	add	r24, r18
    38c6:	93 1f       	adc	r25, r19
    38c8:	0e 94 e4 23 	call	0x47c8	; 0x47c8 <memcpy>
    38cc:	d7 01       	movw	r26, r14
    38ce:	1e 96       	adiw	r26, 0x0e	; 14
    38d0:	8c 91       	ld	r24, X
    38d2:	1e 97       	sbiw	r26, 0x0e	; 14
    38d4:	80 68       	ori	r24, 0x80	; 128
    38d6:	1e 96       	adiw	r26, 0x0e	; 14
    38d8:	8c 93       	st	X, r24
    38da:	c6 18       	sub	r12, r6
    38dc:	d7 08       	sbc	r13, r7
    38de:	f5 01       	movw	r30, r10
    38e0:	80 81       	ld	r24, Z
    38e2:	91 81       	ldd	r25, Z+1	; 0x01
    38e4:	86 0d       	add	r24, r6
    38e6:	97 1d       	adc	r25, r7
    38e8:	91 83       	std	Z+1, r25	; 0x01
    38ea:	80 83       	st	Z, r24
    38ec:	86 0c       	add	r8, r6
    38ee:	97 1c       	adc	r9, r7
    38f0:	f7 01       	movw	r30, r14
    38f2:	80 89       	ldd	r24, Z+16	; 0x10
    38f4:	91 89       	ldd	r25, Z+17	; 0x11
    38f6:	a2 89       	ldd	r26, Z+18	; 0x12
    38f8:	b3 89       	ldd	r27, Z+19	; 0x13
    38fa:	86 0d       	add	r24, r6
    38fc:	97 1d       	adc	r25, r7
    38fe:	a1 1d       	adc	r26, r1
    3900:	b1 1d       	adc	r27, r1
    3902:	80 8b       	std	Z+16, r24	; 0x10
    3904:	91 8b       	std	Z+17, r25	; 0x11
    3906:	a2 8b       	std	Z+18, r26	; 0x12
    3908:	b3 8b       	std	Z+19, r27	; 0x13
    390a:	42 85       	ldd	r20, Z+10	; 0x0a
    390c:	53 85       	ldd	r21, Z+11	; 0x0b
    390e:	64 85       	ldd	r22, Z+12	; 0x0c
    3910:	75 85       	ldd	r23, Z+13	; 0x0d
    3912:	84 17       	cp	r24, r20
    3914:	95 07       	cpc	r25, r21
    3916:	a6 07       	cpc	r26, r22
    3918:	b7 07       	cpc	r27, r23
    391a:	10 f4       	brcc	.+4      	; 0x3920 <f_write+0x33c>
    391c:	db 01       	movw	r26, r22
    391e:	ca 01       	movw	r24, r20
    3920:	f7 01       	movw	r30, r14
    3922:	82 87       	std	Z+10, r24	; 0x0a
    3924:	93 87       	std	Z+11, r25	; 0x0b
    3926:	a4 87       	std	Z+12, r26	; 0x0c
    3928:	b5 87       	std	Z+13, r27	; 0x0d
    392a:	c1 14       	cp	r12, r1
    392c:	d1 04       	cpc	r13, r1
    392e:	09 f0       	breq	.+2      	; 0x3932 <f_write+0x34e>
    3930:	9e ce       	rjmp	.-708    	; 0x366e <f_write+0x8a>
    3932:	d7 01       	movw	r26, r14
    3934:	1e 96       	adiw	r26, 0x0e	; 14
    3936:	8c 91       	ld	r24, X
    3938:	1e 97       	sbiw	r26, 0x0e	; 14
    393a:	80 64       	ori	r24, 0x40	; 64
    393c:	1e 96       	adiw	r26, 0x0e	; 14
    393e:	8c 93       	st	X, r24
    3940:	80 e0       	ldi	r24, 0x00	; 0
    3942:	01 c0       	rjmp	.+2      	; 0x3946 <f_write+0x362>
    3944:	87 e0       	ldi	r24, 0x07	; 7
    3946:	28 96       	adiw	r28, 0x08	; 8
    3948:	0f b6       	in	r0, 0x3f	; 63
    394a:	f8 94       	cli
    394c:	de bf       	out	0x3e, r29	; 62
    394e:	0f be       	out	0x3f, r0	; 63
    3950:	cd bf       	out	0x3d, r28	; 61
    3952:	df 91       	pop	r29
    3954:	cf 91       	pop	r28
    3956:	1f 91       	pop	r17
    3958:	0f 91       	pop	r16
    395a:	ff 90       	pop	r15
    395c:	ef 90       	pop	r14
    395e:	df 90       	pop	r13
    3960:	cf 90       	pop	r12
    3962:	bf 90       	pop	r11
    3964:	af 90       	pop	r10
    3966:	9f 90       	pop	r9
    3968:	8f 90       	pop	r8
    396a:	7f 90       	pop	r7
    396c:	6f 90       	pop	r6
    396e:	5f 90       	pop	r5
    3970:	4f 90       	pop	r4
    3972:	3f 90       	pop	r3
    3974:	2f 90       	pop	r2
    3976:	08 95       	ret

00003978 <putc_bfd>:
    3978:	cf 92       	push	r12
    397a:	df 92       	push	r13
    397c:	ef 92       	push	r14
    397e:	ff 92       	push	r15
    3980:	0f 93       	push	r16
    3982:	1f 93       	push	r17
    3984:	cf 93       	push	r28
    3986:	df 93       	push	r29
    3988:	00 d0       	rcall	.+0      	; 0x398a <putc_bfd+0x12>
    398a:	cd b7       	in	r28, 0x3d	; 61
    398c:	de b7       	in	r29, 0x3e	; 62
    398e:	fc 01       	movw	r30, r24
    3990:	22 81       	ldd	r18, Z+2	; 0x02
    3992:	33 81       	ldd	r19, Z+3	; 0x03
    3994:	33 23       	and	r19, r19
    3996:	7c f1       	brlt	.+94     	; 0x39f6 <putc_bfd+0x7e>
    3998:	8c 01       	movw	r16, r24
    399a:	c4 80       	ldd	r12, Z+4	; 0x04
    399c:	d5 80       	ldd	r13, Z+5	; 0x05
    399e:	79 01       	movw	r14, r18
    39a0:	ff ef       	ldi	r31, 0xFF	; 255
    39a2:	ef 1a       	sub	r14, r31
    39a4:	ff 0a       	sbc	r15, r31
    39a6:	fc 01       	movw	r30, r24
    39a8:	e2 0f       	add	r30, r18
    39aa:	f3 1f       	adc	r31, r19
    39ac:	66 83       	std	Z+6, r22	; 0x06
    39ae:	8c e3       	ldi	r24, 0x3C	; 60
    39b0:	e8 16       	cp	r14, r24
    39b2:	f1 04       	cpc	r15, r1
    39b4:	bc f0       	brlt	.+46     	; 0x39e4 <putc_bfd+0x6c>
    39b6:	9e 01       	movw	r18, r28
    39b8:	2f 5f       	subi	r18, 0xFF	; 255
    39ba:	3f 4f       	sbci	r19, 0xFF	; 255
    39bc:	a7 01       	movw	r20, r14
    39be:	b8 01       	movw	r22, r16
    39c0:	6a 5f       	subi	r22, 0xFA	; 250
    39c2:	7f 4f       	sbci	r23, 0xFF	; 255
    39c4:	f8 01       	movw	r30, r16
    39c6:	80 81       	ld	r24, Z
    39c8:	91 81       	ldd	r25, Z+1	; 0x01
    39ca:	0e 94 f2 1a 	call	0x35e4	; 0x35e4 <f_write>
    39ce:	89 81       	ldd	r24, Y+1	; 0x01
    39d0:	9a 81       	ldd	r25, Y+2	; 0x02
    39d2:	e8 16       	cp	r14, r24
    39d4:	f9 06       	cpc	r15, r25
    39d6:	19 f4       	brne	.+6      	; 0x39de <putc_bfd+0x66>
    39d8:	e1 2c       	mov	r14, r1
    39da:	f1 2c       	mov	r15, r1
    39dc:	03 c0       	rjmp	.+6      	; 0x39e4 <putc_bfd+0x6c>
    39de:	ee 24       	eor	r14, r14
    39e0:	ea 94       	dec	r14
    39e2:	fe 2c       	mov	r15, r14
    39e4:	f8 01       	movw	r30, r16
    39e6:	f3 82       	std	Z+3, r15	; 0x03
    39e8:	e2 82       	std	Z+2, r14	; 0x02
    39ea:	ff ef       	ldi	r31, 0xFF	; 255
    39ec:	cf 1a       	sub	r12, r31
    39ee:	df 0a       	sbc	r13, r31
    39f0:	f8 01       	movw	r30, r16
    39f2:	d5 82       	std	Z+5, r13	; 0x05
    39f4:	c4 82       	std	Z+4, r12	; 0x04
    39f6:	0f 90       	pop	r0
    39f8:	0f 90       	pop	r0
    39fa:	df 91       	pop	r29
    39fc:	cf 91       	pop	r28
    39fe:	1f 91       	pop	r17
    3a00:	0f 91       	pop	r16
    3a02:	ff 90       	pop	r15
    3a04:	ef 90       	pop	r14
    3a06:	df 90       	pop	r13
    3a08:	cf 90       	pop	r12
    3a0a:	08 95       	ret

00003a0c <putc_flush>:
    3a0c:	0f 93       	push	r16
    3a0e:	1f 93       	push	r17
    3a10:	cf 93       	push	r28
    3a12:	df 93       	push	r29
    3a14:	00 d0       	rcall	.+0      	; 0x3a16 <putc_flush+0xa>
    3a16:	cd b7       	in	r28, 0x3d	; 61
    3a18:	de b7       	in	r29, 0x3e	; 62
    3a1a:	fc 01       	movw	r30, r24
    3a1c:	42 81       	ldd	r20, Z+2	; 0x02
    3a1e:	53 81       	ldd	r21, Z+3	; 0x03
    3a20:	55 23       	and	r21, r21
    3a22:	c4 f0       	brlt	.+48     	; 0x3a54 <putc_flush+0x48>
    3a24:	8c 01       	movw	r16, r24
    3a26:	bc 01       	movw	r22, r24
    3a28:	6a 5f       	subi	r22, 0xFA	; 250
    3a2a:	7f 4f       	sbci	r23, 0xFF	; 255
    3a2c:	9e 01       	movw	r18, r28
    3a2e:	2f 5f       	subi	r18, 0xFF	; 255
    3a30:	3f 4f       	sbci	r19, 0xFF	; 255
    3a32:	80 81       	ld	r24, Z
    3a34:	91 81       	ldd	r25, Z+1	; 0x01
    3a36:	0e 94 f2 1a 	call	0x35e4	; 0x35e4 <f_write>
    3a3a:	81 11       	cpse	r24, r1
    3a3c:	0e c0       	rjmp	.+28     	; 0x3a5a <putc_flush+0x4e>
    3a3e:	f8 01       	movw	r30, r16
    3a40:	22 81       	ldd	r18, Z+2	; 0x02
    3a42:	33 81       	ldd	r19, Z+3	; 0x03
    3a44:	89 81       	ldd	r24, Y+1	; 0x01
    3a46:	9a 81       	ldd	r25, Y+2	; 0x02
    3a48:	28 17       	cp	r18, r24
    3a4a:	39 07       	cpc	r19, r25
    3a4c:	49 f4       	brne	.+18     	; 0x3a60 <putc_flush+0x54>
    3a4e:	84 81       	ldd	r24, Z+4	; 0x04
    3a50:	95 81       	ldd	r25, Z+5	; 0x05
    3a52:	08 c0       	rjmp	.+16     	; 0x3a64 <putc_flush+0x58>
    3a54:	8f ef       	ldi	r24, 0xFF	; 255
    3a56:	9f ef       	ldi	r25, 0xFF	; 255
    3a58:	05 c0       	rjmp	.+10     	; 0x3a64 <putc_flush+0x58>
    3a5a:	8f ef       	ldi	r24, 0xFF	; 255
    3a5c:	9f ef       	ldi	r25, 0xFF	; 255
    3a5e:	02 c0       	rjmp	.+4      	; 0x3a64 <putc_flush+0x58>
    3a60:	8f ef       	ldi	r24, 0xFF	; 255
    3a62:	9f ef       	ldi	r25, 0xFF	; 255
    3a64:	0f 90       	pop	r0
    3a66:	0f 90       	pop	r0
    3a68:	df 91       	pop	r29
    3a6a:	cf 91       	pop	r28
    3a6c:	1f 91       	pop	r17
    3a6e:	0f 91       	pop	r16
    3a70:	08 95       	ret

00003a72 <f_sync>:
    3a72:	ef 92       	push	r14
    3a74:	ff 92       	push	r15
    3a76:	0f 93       	push	r16
    3a78:	1f 93       	push	r17
    3a7a:	cf 93       	push	r28
    3a7c:	df 93       	push	r29
    3a7e:	00 d0       	rcall	.+0      	; 0x3a80 <f_sync+0xe>
    3a80:	cd b7       	in	r28, 0x3d	; 61
    3a82:	de b7       	in	r29, 0x3e	; 62
    3a84:	7c 01       	movw	r14, r24
    3a86:	be 01       	movw	r22, r28
    3a88:	6f 5f       	subi	r22, 0xFF	; 255
    3a8a:	7f 4f       	sbci	r23, 0xFF	; 255
    3a8c:	0e 94 c1 0b 	call	0x1782	; 0x1782 <validate>
    3a90:	81 11       	cpse	r24, r1
    3a92:	63 c0       	rjmp	.+198    	; 0x3b5a <f_sync+0xe8>
    3a94:	d7 01       	movw	r26, r14
    3a96:	1e 96       	adiw	r26, 0x0e	; 14
    3a98:	9c 91       	ld	r25, X
    3a9a:	1e 97       	sbiw	r26, 0x0e	; 14
    3a9c:	96 ff       	sbrs	r25, 6
    3a9e:	5d c0       	rjmp	.+186    	; 0x3b5a <f_sync+0xe8>
    3aa0:	99 23       	and	r25, r25
    3aa2:	b4 f4       	brge	.+44     	; 0x3ad0 <f_sync+0x5e>
    3aa4:	e9 81       	ldd	r30, Y+1	; 0x01
    3aa6:	fa 81       	ldd	r31, Y+2	; 0x02
    3aa8:	58 96       	adiw	r26, 0x18	; 24
    3aaa:	2d 91       	ld	r18, X+
    3aac:	3d 91       	ld	r19, X+
    3aae:	4d 91       	ld	r20, X+
    3ab0:	5c 91       	ld	r21, X
    3ab2:	5b 97       	sbiw	r26, 0x1b	; 27
    3ab4:	01 e0       	ldi	r16, 0x01	; 1
    3ab6:	10 e0       	ldi	r17, 0x00	; 0
    3ab8:	b7 01       	movw	r22, r14
    3aba:	6e 5d       	subi	r22, 0xDE	; 222
    3abc:	7f 4f       	sbci	r23, 0xFF	; 255
    3abe:	81 81       	ldd	r24, Z+1	; 0x01
    3ac0:	0e 94 3f 07 	call	0xe7e	; 0xe7e <disk_write>
    3ac4:	81 11       	cpse	r24, r1
    3ac6:	48 c0       	rjmp	.+144    	; 0x3b58 <f_sync+0xe6>
    3ac8:	f7 01       	movw	r30, r14
    3aca:	86 85       	ldd	r24, Z+14	; 0x0e
    3acc:	8f 77       	andi	r24, 0x7F	; 127
    3ace:	86 87       	std	Z+14, r24	; 0x0e
    3ad0:	d7 01       	movw	r26, r14
    3ad2:	5c 96       	adiw	r26, 0x1c	; 28
    3ad4:	4d 91       	ld	r20, X+
    3ad6:	5d 91       	ld	r21, X+
    3ad8:	6d 91       	ld	r22, X+
    3ada:	7c 91       	ld	r23, X
    3adc:	5f 97       	sbiw	r26, 0x1f	; 31
    3ade:	89 81       	ldd	r24, Y+1	; 0x01
    3ae0:	9a 81       	ldd	r25, Y+2	; 0x02
    3ae2:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <move_window>
    3ae6:	81 11       	cpse	r24, r1
    3ae8:	38 c0       	rjmp	.+112    	; 0x3b5a <f_sync+0xe8>
    3aea:	f7 01       	movw	r30, r14
    3aec:	00 a1       	ldd	r16, Z+32	; 0x20
    3aee:	11 a1       	ldd	r17, Z+33	; 0x21
    3af0:	d8 01       	movw	r26, r16
    3af2:	1b 96       	adiw	r26, 0x0b	; 11
    3af4:	8c 91       	ld	r24, X
    3af6:	1b 97       	sbiw	r26, 0x0b	; 11
    3af8:	80 62       	ori	r24, 0x20	; 32
    3afa:	1b 96       	adiw	r26, 0x0b	; 11
    3afc:	8c 93       	st	X, r24
    3afe:	26 81       	ldd	r18, Z+6	; 0x06
    3b00:	37 81       	ldd	r19, Z+7	; 0x07
    3b02:	40 85       	ldd	r20, Z+8	; 0x08
    3b04:	51 85       	ldd	r21, Z+9	; 0x09
    3b06:	b8 01       	movw	r22, r16
    3b08:	80 81       	ld	r24, Z
    3b0a:	91 81       	ldd	r25, Z+1	; 0x01
    3b0c:	0e 94 19 09 	call	0x1232	; 0x1232 <st_clust>
    3b10:	f7 01       	movw	r30, r14
    3b12:	42 85       	ldd	r20, Z+10	; 0x0a
    3b14:	53 85       	ldd	r21, Z+11	; 0x0b
    3b16:	64 85       	ldd	r22, Z+12	; 0x0c
    3b18:	75 85       	ldd	r23, Z+13	; 0x0d
    3b1a:	c8 01       	movw	r24, r16
    3b1c:	4c 96       	adiw	r24, 0x1c	; 28
    3b1e:	0e 94 88 08 	call	0x1110	; 0x1110 <st_dword>
    3b22:	40 e0       	ldi	r20, 0x00	; 0
    3b24:	50 e0       	ldi	r21, 0x00	; 0
    3b26:	61 e2       	ldi	r22, 0x21	; 33
    3b28:	74 e5       	ldi	r23, 0x54	; 84
    3b2a:	c8 01       	movw	r24, r16
    3b2c:	46 96       	adiw	r24, 0x16	; 22
    3b2e:	0e 94 88 08 	call	0x1110	; 0x1110 <st_dword>
    3b32:	60 e0       	ldi	r22, 0x00	; 0
    3b34:	70 e0       	ldi	r23, 0x00	; 0
    3b36:	c8 01       	movw	r24, r16
    3b38:	42 96       	adiw	r24, 0x12	; 18
    3b3a:	0e 94 84 08 	call	0x1108	; 0x1108 <st_word>
    3b3e:	89 81       	ldd	r24, Y+1	; 0x01
    3b40:	9a 81       	ldd	r25, Y+2	; 0x02
    3b42:	21 e0       	ldi	r18, 0x01	; 1
    3b44:	dc 01       	movw	r26, r24
    3b46:	14 96       	adiw	r26, 0x04	; 4
    3b48:	2c 93       	st	X, r18
    3b4a:	0e 94 4f 18 	call	0x309e	; 0x309e <sync_fs>
    3b4e:	f7 01       	movw	r30, r14
    3b50:	96 85       	ldd	r25, Z+14	; 0x0e
    3b52:	9f 7b       	andi	r25, 0xBF	; 191
    3b54:	96 87       	std	Z+14, r25	; 0x0e
    3b56:	01 c0       	rjmp	.+2      	; 0x3b5a <f_sync+0xe8>
    3b58:	81 e0       	ldi	r24, 0x01	; 1
    3b5a:	0f 90       	pop	r0
    3b5c:	0f 90       	pop	r0
    3b5e:	df 91       	pop	r29
    3b60:	cf 91       	pop	r28
    3b62:	1f 91       	pop	r17
    3b64:	0f 91       	pop	r16
    3b66:	ff 90       	pop	r15
    3b68:	ef 90       	pop	r14
    3b6a:	08 95       	ret

00003b6c <f_close>:
    3b6c:	0f 93       	push	r16
    3b6e:	1f 93       	push	r17
    3b70:	cf 93       	push	r28
    3b72:	df 93       	push	r29
    3b74:	00 d0       	rcall	.+0      	; 0x3b76 <f_close+0xa>
    3b76:	cd b7       	in	r28, 0x3d	; 61
    3b78:	de b7       	in	r29, 0x3e	; 62
    3b7a:	8c 01       	movw	r16, r24
    3b7c:	0e 94 39 1d 	call	0x3a72	; 0x3a72 <f_sync>
    3b80:	81 11       	cpse	r24, r1
    3b82:	0b c0       	rjmp	.+22     	; 0x3b9a <f_close+0x2e>
    3b84:	be 01       	movw	r22, r28
    3b86:	6f 5f       	subi	r22, 0xFF	; 255
    3b88:	7f 4f       	sbci	r23, 0xFF	; 255
    3b8a:	c8 01       	movw	r24, r16
    3b8c:	0e 94 c1 0b 	call	0x1782	; 0x1782 <validate>
    3b90:	81 11       	cpse	r24, r1
    3b92:	03 c0       	rjmp	.+6      	; 0x3b9a <f_close+0x2e>
    3b94:	f8 01       	movw	r30, r16
    3b96:	11 82       	std	Z+1, r1	; 0x01
    3b98:	10 82       	st	Z, r1
    3b9a:	0f 90       	pop	r0
    3b9c:	0f 90       	pop	r0
    3b9e:	df 91       	pop	r29
    3ba0:	cf 91       	pop	r28
    3ba2:	1f 91       	pop	r17
    3ba4:	0f 91       	pop	r16
    3ba6:	08 95       	ret

00003ba8 <f_printf>:
int f_printf (
	FIL* fp,			/* Pointer to the file object */
	const TCHAR* fmt,	/* Pointer to the format string */
	...					/* Optional arguments... */
)
{
    3ba8:	2f 92       	push	r2
    3baa:	3f 92       	push	r3
    3bac:	4f 92       	push	r4
    3bae:	5f 92       	push	r5
    3bb0:	6f 92       	push	r6
    3bb2:	7f 92       	push	r7
    3bb4:	8f 92       	push	r8
    3bb6:	9f 92       	push	r9
    3bb8:	af 92       	push	r10
    3bba:	bf 92       	push	r11
    3bbc:	cf 92       	push	r12
    3bbe:	df 92       	push	r13
    3bc0:	ef 92       	push	r14
    3bc2:	ff 92       	push	r15
    3bc4:	0f 93       	push	r16
    3bc6:	1f 93       	push	r17
    3bc8:	cf 93       	push	r28
    3bca:	df 93       	push	r29
    3bcc:	cd b7       	in	r28, 0x3d	; 61
    3bce:	de b7       	in	r29, 0x3e	; 62
    3bd0:	ca 56       	subi	r28, 0x6A	; 106
    3bd2:	d1 09       	sbc	r29, r1
    3bd4:	0f b6       	in	r0, 0x3f	; 63
    3bd6:	f8 94       	cli
    3bd8:	de bf       	out	0x3e, r29	; 62
    3bda:	0f be       	out	0x3f, r0	; 63
    3bdc:	cd bf       	out	0x3d, r28	; 61
    3bde:	cf 57       	subi	r28, 0x7F	; 127
    3be0:	df 4f       	sbci	r29, 0xFF	; 255
    3be2:	c8 80       	ld	r12, Y
    3be4:	d9 80       	ldd	r13, Y+1	; 0x01
    3be6:	c1 58       	subi	r28, 0x81	; 129
    3be8:	d0 40       	sbci	r29, 0x00	; 0
#else
	DWORD v;
#endif
	TCHAR *tp;
	TCHAR tc, pad;
	TCHAR nul = 0;
    3bea:	28 96       	adiw	r28, 0x08	; 8
    3bec:	1f ae       	std	Y+63, r1	; 0x3f
    3bee:	28 97       	sbiw	r28, 0x08	; 8
	char d, str[SZ_NUM_BUF];


	putc_init(&pb, fp);
    3bf0:	c1 58       	subi	r28, 0x81	; 129
    3bf2:	df 4f       	sbci	r29, 0xFF	; 255
    3bf4:	68 81       	ld	r22, Y
    3bf6:	79 81       	ldd	r23, Y+1	; 0x01
    3bf8:	cf 57       	subi	r28, 0x7F	; 127
    3bfa:	d0 40       	sbci	r29, 0x00	; 0
    3bfc:	ce 01       	movw	r24, r28
    3bfe:	01 96       	adiw	r24, 0x01	; 1
    3c00:	0e 94 df 16 	call	0x2dbe	; 0x2dbe <putc_init>

	va_start(arp, fmt);
    3c04:	1e 01       	movw	r2, r28
    3c06:	23 e8       	ldi	r18, 0x83	; 131
    3c08:	22 0e       	add	r2, r18
    3c0a:	31 1c       	adc	r3, r1

	for (;;) {
		tc = *fmt++;
    3c0c:	86 01       	movw	r16, r12
    3c0e:	0f 5f       	subi	r16, 0xFF	; 255
    3c10:	1f 4f       	sbci	r17, 0xFF	; 255
    3c12:	f6 01       	movw	r30, r12
    3c14:	60 81       	ld	r22, Z
		if (tc == 0) break;			/* End of format string */
    3c16:	66 23       	and	r22, r22
    3c18:	09 f4       	brne	.+2      	; 0x3c1c <f_printf+0x74>
    3c1a:	20 c2       	rjmp	.+1088   	; 0x405c <f_printf+0x4b4>
		if (tc != '%') {			/* Not an escape character (pass-through) */
    3c1c:	65 32       	cpi	r22, 0x25	; 37
    3c1e:	31 f0       	breq	.+12     	; 0x3c2c <f_printf+0x84>
			putc_bfd(&pb, tc);
    3c20:	ce 01       	movw	r24, r28
    3c22:	01 96       	adiw	r24, 0x01	; 1
    3c24:	0e 94 bc 1c 	call	0x3978	; 0x3978 <putc_bfd>
	putc_init(&pb, fp);

	va_start(arp, fmt);

	for (;;) {
		tc = *fmt++;
    3c28:	68 01       	movw	r12, r16
		if (tc == 0) break;			/* End of format string */
		if (tc != '%') {			/* Not an escape character (pass-through) */
			putc_bfd(&pb, tc);
			continue;
    3c2a:	f0 cf       	rjmp	.-32     	; 0x3c0c <f_printf+0x64>
		}
		f = w = 0; pad = ' '; prec = -1;	/* Initialize parms */
		tc = *fmt++;
    3c2c:	c6 01       	movw	r24, r12
    3c2e:	02 96       	adiw	r24, 0x02	; 2
    3c30:	f6 01       	movw	r30, r12
    3c32:	71 80       	ldd	r7, Z+1	; 0x01
		if (tc == '0') {			/* Flag: '0' padded */
    3c34:	f0 e3       	ldi	r31, 0x30	; 48
    3c36:	7f 12       	cpse	r7, r31
    3c38:	0d c0       	rjmp	.+26     	; 0x3c54 <f_printf+0xac>
			pad = '0'; tc = *fmt++;
    3c3a:	f6 01       	movw	r30, r12
    3c3c:	72 80       	ldd	r7, Z+2	; 0x02
    3c3e:	96 01       	movw	r18, r12
    3c40:	2d 5f       	subi	r18, 0xFD	; 253
    3c42:	3f 4f       	sbci	r19, 0xFF	; 255
    3c44:	69 01       	movw	r12, r18
    3c46:	30 e3       	ldi	r19, 0x30	; 48
    3c48:	a9 96       	adiw	r28, 0x29	; 41
    3c4a:	3f af       	std	Y+63, r19	; 0x3f
    3c4c:	a9 97       	sbiw	r28, 0x29	; 41
		if (tc == 0) break;			/* End of format string */
		if (tc != '%') {			/* Not an escape character (pass-through) */
			putc_bfd(&pb, tc);
			continue;
		}
		f = w = 0; pad = ' '; prec = -1;	/* Initialize parms */
    3c4e:	41 2c       	mov	r4, r1
    3c50:	51 2c       	mov	r5, r1
    3c52:	19 c0       	rjmp	.+50     	; 0x3c86 <f_printf+0xde>
		tc = *fmt++;
		if (tc == '0') {			/* Flag: '0' padded */
			pad = '0'; tc = *fmt++;
		} else if (tc == '-') {		/* Flag: Left aligned */
    3c54:	ed e2       	ldi	r30, 0x2D	; 45
    3c56:	7e 12       	cpse	r7, r30
    3c58:	0f c0       	rjmp	.+30     	; 0x3c78 <f_printf+0xd0>
			f = 2; tc = *fmt++;
    3c5a:	f6 01       	movw	r30, r12
    3c5c:	72 80       	ldd	r7, Z+2	; 0x02
    3c5e:	96 01       	movw	r18, r12
    3c60:	2d 5f       	subi	r18, 0xFD	; 253
    3c62:	3f 4f       	sbci	r19, 0xFF	; 255
    3c64:	69 01       	movw	r12, r18
		if (tc == 0) break;			/* End of format string */
		if (tc != '%') {			/* Not an escape character (pass-through) */
			putc_bfd(&pb, tc);
			continue;
		}
		f = w = 0; pad = ' '; prec = -1;	/* Initialize parms */
    3c66:	30 e2       	ldi	r19, 0x20	; 32
    3c68:	a9 96       	adiw	r28, 0x29	; 41
    3c6a:	3f af       	std	Y+63, r19	; 0x3f
    3c6c:	a9 97       	sbiw	r28, 0x29	; 41
		tc = *fmt++;
		if (tc == '0') {			/* Flag: '0' padded */
			pad = '0'; tc = *fmt++;
		} else if (tc == '-') {		/* Flag: Left aligned */
			f = 2; tc = *fmt++;
    3c6e:	68 94       	set
    3c70:	44 24       	eor	r4, r4
    3c72:	41 f8       	bld	r4, 1
    3c74:	51 2c       	mov	r5, r1
    3c76:	07 c0       	rjmp	.+14     	; 0x3c86 <f_printf+0xde>
		if (tc != '%') {			/* Not an escape character (pass-through) */
			putc_bfd(&pb, tc);
			continue;
		}
		f = w = 0; pad = ' '; prec = -1;	/* Initialize parms */
		tc = *fmt++;
    3c78:	6c 01       	movw	r12, r24
		if (tc == 0) break;			/* End of format string */
		if (tc != '%') {			/* Not an escape character (pass-through) */
			putc_bfd(&pb, tc);
			continue;
		}
		f = w = 0; pad = ' '; prec = -1;	/* Initialize parms */
    3c7a:	80 e2       	ldi	r24, 0x20	; 32
    3c7c:	a9 96       	adiw	r28, 0x29	; 41
    3c7e:	8f af       	std	Y+63, r24	; 0x3f
    3c80:	a9 97       	sbiw	r28, 0x29	; 41
    3c82:	41 2c       	mov	r4, r1
    3c84:	51 2c       	mov	r5, r1
		if (tc == '0') {			/* Flag: '0' padded */
			pad = '0'; tc = *fmt++;
		} else if (tc == '-') {		/* Flag: Left aligned */
			f = 2; tc = *fmt++;
		}
		if (tc == '*') {			/* Minimum width from an argument */
    3c86:	9a e2       	ldi	r25, 0x2A	; 42
    3c88:	79 12       	cpse	r7, r25
    3c8a:	24 c0       	rjmp	.+72     	; 0x3cd4 <f_printf+0x12c>
			w = va_arg(arp, int);
    3c8c:	f1 01       	movw	r30, r2
    3c8e:	e0 80       	ld	r14, Z
    3c90:	f1 80       	ldd	r15, Z+1	; 0x01
			tc = *fmt++;
    3c92:	f6 01       	movw	r30, r12
    3c94:	70 80       	ld	r7, Z
			pad = '0'; tc = *fmt++;
		} else if (tc == '-') {		/* Flag: Left aligned */
			f = 2; tc = *fmt++;
		}
		if (tc == '*') {			/* Minimum width from an argument */
			w = va_arg(arp, int);
    3c96:	91 01       	movw	r18, r2
    3c98:	2e 5f       	subi	r18, 0xFE	; 254
    3c9a:	3f 4f       	sbci	r19, 0xFF	; 255
    3c9c:	19 01       	movw	r2, r18
			tc = *fmt++;
    3c9e:	c6 01       	movw	r24, r12
    3ca0:	01 96       	adiw	r24, 0x01	; 1
    3ca2:	6c 01       	movw	r12, r24
    3ca4:	1d c0       	rjmp	.+58     	; 0x3ce0 <f_printf+0x138>
		} else {
			while (IsDigit(tc)) {	/* Minimum width */
				w = w * 10 + tc - '0';
    3ca6:	c7 01       	movw	r24, r14
    3ca8:	88 0f       	add	r24, r24
    3caa:	99 1f       	adc	r25, r25
    3cac:	ee 0c       	add	r14, r14
    3cae:	ff 1c       	adc	r15, r15
    3cb0:	ee 0c       	add	r14, r14
    3cb2:	ff 1c       	adc	r15, r15
    3cb4:	ee 0c       	add	r14, r14
    3cb6:	ff 1c       	adc	r15, r15
    3cb8:	e8 0e       	add	r14, r24
    3cba:	f9 1e       	adc	r15, r25
    3cbc:	e7 0c       	add	r14, r7
    3cbe:	f1 1c       	adc	r15, r1
    3cc0:	90 e3       	ldi	r25, 0x30	; 48
    3cc2:	e9 1a       	sub	r14, r25
    3cc4:	f1 08       	sbc	r15, r1
				tc = *fmt++;
    3cc6:	f6 01       	movw	r30, r12
    3cc8:	70 80       	ld	r7, Z
    3cca:	96 01       	movw	r18, r12
    3ccc:	2f 5f       	subi	r18, 0xFF	; 255
    3cce:	3f 4f       	sbci	r19, 0xFF	; 255
    3cd0:	69 01       	movw	r12, r18
    3cd2:	02 c0       	rjmp	.+4      	; 0x3cd8 <f_printf+0x130>
    3cd4:	e1 2c       	mov	r14, r1
    3cd6:	f1 2c       	mov	r15, r1
		}
		if (tc == '*') {			/* Minimum width from an argument */
			w = va_arg(arp, int);
			tc = *fmt++;
		} else {
			while (IsDigit(tc)) {	/* Minimum width */
    3cd8:	80 ed       	ldi	r24, 0xD0	; 208
    3cda:	87 0d       	add	r24, r7
    3cdc:	8a 30       	cpi	r24, 0x0A	; 10
    3cde:	18 f3       	brcs	.-58     	; 0x3ca6 <f_printf+0xfe>
				w = w * 10 + tc - '0';
				tc = *fmt++;
			}
		}
		if (tc == '.') {			/* Precision */
    3ce0:	3e e2       	ldi	r19, 0x2E	; 46
    3ce2:	73 12       	cpse	r7, r19
    3ce4:	32 c0       	rjmp	.+100    	; 0x3d4a <f_printf+0x1a2>
			tc = *fmt++;
    3ce6:	c6 01       	movw	r24, r12
    3ce8:	01 96       	adiw	r24, 0x01	; 1
    3cea:	f6 01       	movw	r30, r12
    3cec:	70 80       	ld	r7, Z
			if (tc == '*') {		/* Precision from an argument */
    3cee:	fa e2       	ldi	r31, 0x2A	; 42
    3cf0:	7f 12       	cpse	r7, r31
    3cf2:	23 c0       	rjmp	.+70     	; 0x3d3a <f_printf+0x192>
				prec = va_arg(arp, int);
    3cf4:	f1 01       	movw	r30, r2
    3cf6:	a0 80       	ld	r10, Z
    3cf8:	b1 80       	ldd	r11, Z+1	; 0x01
				tc = *fmt++;
    3cfa:	f6 01       	movw	r30, r12
    3cfc:	71 80       	ldd	r7, Z+1	; 0x01
			}
		}
		if (tc == '.') {			/* Precision */
			tc = *fmt++;
			if (tc == '*') {		/* Precision from an argument */
				prec = va_arg(arp, int);
    3cfe:	91 01       	movw	r18, r2
    3d00:	2e 5f       	subi	r18, 0xFE	; 254
    3d02:	3f 4f       	sbci	r19, 0xFF	; 255
    3d04:	19 01       	movw	r2, r18
				tc = *fmt++;
    3d06:	01 96       	adiw	r24, 0x01	; 1
    3d08:	6c 01       	movw	r12, r24
    3d0a:	22 c0       	rjmp	.+68     	; 0x3d50 <f_printf+0x1a8>
			} else {
				prec = 0;
				while (IsDigit(tc)) {	/* Precision */
					prec = prec * 10 + tc - '0';
    3d0c:	c5 01       	movw	r24, r10
    3d0e:	88 0f       	add	r24, r24
    3d10:	99 1f       	adc	r25, r25
    3d12:	aa 0c       	add	r10, r10
    3d14:	bb 1c       	adc	r11, r11
    3d16:	aa 0c       	add	r10, r10
    3d18:	bb 1c       	adc	r11, r11
    3d1a:	aa 0c       	add	r10, r10
    3d1c:	bb 1c       	adc	r11, r11
    3d1e:	a8 0e       	add	r10, r24
    3d20:	b9 1e       	adc	r11, r25
    3d22:	a7 0c       	add	r10, r7
    3d24:	b1 1c       	adc	r11, r1
    3d26:	90 e3       	ldi	r25, 0x30	; 48
    3d28:	a9 1a       	sub	r10, r25
    3d2a:	b1 08       	sbc	r11, r1
					tc = *fmt++;
    3d2c:	f6 01       	movw	r30, r12
    3d2e:	70 80       	ld	r7, Z
    3d30:	96 01       	movw	r18, r12
    3d32:	2f 5f       	subi	r18, 0xFF	; 255
    3d34:	3f 4f       	sbci	r19, 0xFF	; 255
    3d36:	69 01       	movw	r12, r18
    3d38:	03 c0       	rjmp	.+6      	; 0x3d40 <f_printf+0x198>
    3d3a:	6c 01       	movw	r12, r24
    3d3c:	a1 2c       	mov	r10, r1
    3d3e:	b1 2c       	mov	r11, r1
			if (tc == '*') {		/* Precision from an argument */
				prec = va_arg(arp, int);
				tc = *fmt++;
			} else {
				prec = 0;
				while (IsDigit(tc)) {	/* Precision */
    3d40:	80 ed       	ldi	r24, 0xD0	; 208
    3d42:	87 0d       	add	r24, r7
    3d44:	8a 30       	cpi	r24, 0x0A	; 10
    3d46:	10 f3       	brcs	.-60     	; 0x3d0c <f_printf+0x164>
    3d48:	03 c0       	rjmp	.+6      	; 0x3d50 <f_printf+0x1a8>
		if (tc == 0) break;			/* End of format string */
		if (tc != '%') {			/* Not an escape character (pass-through) */
			putc_bfd(&pb, tc);
			continue;
		}
		f = w = 0; pad = ' '; prec = -1;	/* Initialize parms */
    3d4a:	aa 24       	eor	r10, r10
    3d4c:	aa 94       	dec	r10
    3d4e:	ba 2c       	mov	r11, r10
					prec = prec * 10 + tc - '0';
					tc = *fmt++;
				}
			}
		}
		if (tc == 'l') {			/* Size: long int */
    3d50:	3c e6       	ldi	r19, 0x6C	; 108
    3d52:	73 12       	cpse	r7, r19
    3d54:	08 c0       	rjmp	.+16     	; 0x3d66 <f_printf+0x1be>
			f |= 4; tc = *fmt++;
    3d56:	68 94       	set
    3d58:	42 f8       	bld	r4, 2
    3d5a:	f6 01       	movw	r30, r12
    3d5c:	70 80       	ld	r7, Z
    3d5e:	96 01       	movw	r18, r12
    3d60:	2f 5f       	subi	r18, 0xFF	; 255
    3d62:	3f 4f       	sbci	r19, 0xFF	; 255
    3d64:	69 01       	movw	r12, r18
			if (tc == 'l') {		/* Size: long long int */
				f |= 8; tc = *fmt++;
			}
#endif
		}
		if (tc == 0) break;			/* End of format string */
    3d66:	77 20       	and	r7, r7
    3d68:	09 f4       	brne	.+2      	; 0x3d6c <f_printf+0x1c4>
    3d6a:	78 c1       	rjmp	.+752    	; 0x405c <f_printf+0x4b4>
		switch (tc) {				/* Atgument type is... */
    3d6c:	87 2d       	mov	r24, r7
    3d6e:	90 e0       	ldi	r25, 0x00	; 0
    3d70:	fc 01       	movw	r30, r24
    3d72:	e5 54       	subi	r30, 0x45	; 69
    3d74:	f1 09       	sbc	r31, r1
    3d76:	e4 33       	cpi	r30, 0x34	; 52
    3d78:	f1 05       	cpc	r31, r1
    3d7a:	08 f0       	brcs	.+2      	; 0x3d7e <f_printf+0x1d6>
    3d7c:	c5 c0       	rjmp	.+394    	; 0x3f08 <f_printf+0x360>
    3d7e:	e8 5b       	subi	r30, 0xB8	; 184
    3d80:	ff 4f       	sbci	r31, 0xFF	; 255
    3d82:	0c 94 04 23 	jmp	0x4608	; 0x4608 <__tablejump2__>
		case 'o':					/* Unsigned octal */
			r = 8; break;

		case 'd':					/* Signed decimal */
		case 'u': 					/* Unsigned decimal */
			r = 10; break;
    3d86:	0f 2e       	mov	r0, r31
    3d88:	fa e0       	ldi	r31, 0x0A	; 10
    3d8a:	8f 2e       	mov	r8, r31
    3d8c:	91 2c       	mov	r9, r1
    3d8e:	f0 2d       	mov	r31, r0
    3d90:	ca c0       	rjmp	.+404    	; 0x3f26 <f_printf+0x37e>

		case 'x':					/* Unsigned hexadecimal (lower case) */
		case 'X': 					/* Unsigned hexadecimal (upper case) */
			r = 16; break;
    3d92:	68 94       	set
    3d94:	88 24       	eor	r8, r8
    3d96:	84 f8       	bld	r8, 4
    3d98:	91 2c       	mov	r9, r1
    3d9a:	c5 c0       	rjmp	.+394    	; 0x3f26 <f_printf+0x37e>

		case 'c':					/* Character */
			putc_bfd(&pb, (TCHAR)va_arg(arp, int));
    3d9c:	81 01       	movw	r16, r2
    3d9e:	0e 5f       	subi	r16, 0xFE	; 254
    3da0:	1f 4f       	sbci	r17, 0xFF	; 255
    3da2:	f1 01       	movw	r30, r2
    3da4:	60 81       	ld	r22, Z
    3da6:	ce 01       	movw	r24, r28
    3da8:	01 96       	adiw	r24, 0x01	; 1
    3daa:	0e 94 bc 1c 	call	0x3978	; 0x3978 <putc_bfd>
    3dae:	18 01       	movw	r2, r16
			continue;
    3db0:	2d cf       	rjmp	.-422    	; 0x3c0c <f_printf+0x64>

		case 's':					/* String */
			tp = va_arg(arp, TCHAR*);	/* Get a pointer argument */
    3db2:	91 01       	movw	r18, r2
    3db4:	2e 5f       	subi	r18, 0xFE	; 254
    3db6:	3f 4f       	sbci	r19, 0xFF	; 255
    3db8:	ab 96       	adiw	r28, 0x2b	; 43
    3dba:	3f af       	std	Y+63, r19	; 0x3f
    3dbc:	2e af       	std	Y+62, r18	; 0x3e
    3dbe:	ab 97       	sbiw	r28, 0x2b	; 43
    3dc0:	f1 01       	movw	r30, r2
    3dc2:	60 80       	ld	r6, Z
    3dc4:	71 80       	ldd	r7, Z+1	; 0x01
			if (!tp) tp = &nul;		/* Null ptr generates a null string */
    3dc6:	61 14       	cp	r6, r1
    3dc8:	71 04       	cpc	r7, r1
    3dca:	21 f4       	brne	.+8      	; 0x3dd4 <f_printf+0x22c>
    3dcc:	3e 01       	movw	r6, r28
    3dce:	f7 e4       	ldi	r31, 0x47	; 71
    3dd0:	6f 0e       	add	r6, r31
    3dd2:	71 1c       	adc	r7, r1
			for (j = 0; tp[j]; j++) ;	/* j = tcslen(tp) */
    3dd4:	00 e0       	ldi	r16, 0x00	; 0
    3dd6:	10 e0       	ldi	r17, 0x00	; 0
    3dd8:	02 c0       	rjmp	.+4      	; 0x3dde <f_printf+0x236>
    3dda:	0f 5f       	subi	r16, 0xFF	; 255
    3ddc:	1f 4f       	sbci	r17, 0xFF	; 255
    3dde:	f3 01       	movw	r30, r6
    3de0:	e0 0f       	add	r30, r16
    3de2:	f1 1f       	adc	r31, r17
    3de4:	80 81       	ld	r24, Z
    3de6:	81 11       	cpse	r24, r1
    3de8:	f8 cf       	rjmp	.-16     	; 0x3dda <f_printf+0x232>
			if (prec >= 0 && j > (UINT)prec) j = prec;	/* Limited length of string body */
    3dea:	bb 20       	and	r11, r11
    3dec:	74 f0       	brlt	.+28     	; 0x3e0a <f_printf+0x262>
    3dee:	a0 16       	cp	r10, r16
    3df0:	b1 06       	cpc	r11, r17
    3df2:	58 f4       	brcc	.+22     	; 0x3e0a <f_printf+0x262>
    3df4:	85 01       	movw	r16, r10
    3df6:	09 c0       	rjmp	.+18     	; 0x3e0a <f_printf+0x262>
			for ( ; !(f & 2) && j < w; j++) putc_bfd(&pb, pad);	/* Left pads */
    3df8:	a9 96       	adiw	r28, 0x29	; 41
    3dfa:	6f ad       	ldd	r22, Y+63	; 0x3f
    3dfc:	a9 97       	sbiw	r28, 0x29	; 41
    3dfe:	ce 01       	movw	r24, r28
    3e00:	01 96       	adiw	r24, 0x01	; 1
    3e02:	0e 94 bc 1c 	call	0x3978	; 0x3978 <putc_bfd>
    3e06:	0f 5f       	subi	r16, 0xFF	; 255
    3e08:	1f 4f       	sbci	r17, 0xFF	; 255
    3e0a:	41 fc       	sbrc	r4, 1
    3e0c:	0c c0       	rjmp	.+24     	; 0x3e26 <f_printf+0x27e>
    3e0e:	0e 15       	cp	r16, r14
    3e10:	1f 05       	cpc	r17, r15
    3e12:	90 f3       	brcs	.-28     	; 0x3df8 <f_printf+0x250>
    3e14:	08 c0       	rjmp	.+16     	; 0x3e26 <f_printf+0x27e>
			while (*tp && prec--) putc_bfd(&pb, *tp++);	/* Body */
    3e16:	2f ef       	ldi	r18, 0xFF	; 255
    3e18:	62 1a       	sub	r6, r18
    3e1a:	72 0a       	sbc	r7, r18
    3e1c:	ce 01       	movw	r24, r28
    3e1e:	01 96       	adiw	r24, 0x01	; 1
    3e20:	0e 94 bc 1c 	call	0x3978	; 0x3978 <putc_bfd>
    3e24:	54 01       	movw	r10, r8
    3e26:	f3 01       	movw	r30, r6
    3e28:	60 81       	ld	r22, Z
    3e2a:	66 23       	and	r22, r22
    3e2c:	69 f0       	breq	.+26     	; 0x3e48 <f_printf+0x2a0>
    3e2e:	45 01       	movw	r8, r10
    3e30:	f1 e0       	ldi	r31, 0x01	; 1
    3e32:	8f 1a       	sub	r8, r31
    3e34:	91 08       	sbc	r9, r1
    3e36:	ab 28       	or	r10, r11
    3e38:	71 f7       	brne	.-36     	; 0x3e16 <f_printf+0x26e>
    3e3a:	06 c0       	rjmp	.+12     	; 0x3e48 <f_printf+0x2a0>
			while (j++ < w) putc_bfd(&pb, ' ');			/* Right pads */
    3e3c:	60 e2       	ldi	r22, 0x20	; 32
    3e3e:	ce 01       	movw	r24, r28
    3e40:	01 96       	adiw	r24, 0x01	; 1
    3e42:	0e 94 bc 1c 	call	0x3978	; 0x3978 <putc_bfd>
    3e46:	85 01       	movw	r16, r10
    3e48:	58 01       	movw	r10, r16
    3e4a:	2f ef       	ldi	r18, 0xFF	; 255
    3e4c:	a2 1a       	sub	r10, r18
    3e4e:	b2 0a       	sbc	r11, r18
    3e50:	0e 15       	cp	r16, r14
    3e52:	1f 05       	cpc	r17, r15
    3e54:	98 f3       	brcs	.-26     	; 0x3e3c <f_printf+0x294>
		case 'c':					/* Character */
			putc_bfd(&pb, (TCHAR)va_arg(arp, int));
			continue;

		case 's':					/* String */
			tp = va_arg(arp, TCHAR*);	/* Get a pointer argument */
    3e56:	ab 96       	adiw	r28, 0x2b	; 43
    3e58:	2e ac       	ldd	r2, Y+62	; 0x3e
    3e5a:	3f ac       	ldd	r3, Y+63	; 0x3f
    3e5c:	ab 97       	sbiw	r28, 0x2b	; 43
    3e5e:	d6 ce       	rjmp	.-596    	; 0x3c0c <f_printf+0x64>
			continue;
#if FF_PRINT_FLOAT && FF_INTDEF == 2
		case 'f':					/* Floating point (decimal) */
		case 'e':					/* Floating point (e) */
		case 'E':					/* Floating point (E) */
			ftoa(str, va_arg(arp, double), prec, tc);	/* Make a floating point string */
    3e60:	c1 01       	movw	r24, r2
    3e62:	04 96       	adiw	r24, 0x04	; 4
    3e64:	ab 96       	adiw	r28, 0x2b	; 43
    3e66:	9f af       	std	Y+63, r25	; 0x3f
    3e68:	8e af       	std	Y+62, r24	; 0x3e
    3e6a:	ab 97       	sbiw	r28, 0x2b	; 43
    3e6c:	f1 01       	movw	r30, r2
    3e6e:	40 81       	ld	r20, Z
    3e70:	51 81       	ldd	r21, Z+1	; 0x01
    3e72:	62 81       	ldd	r22, Z+2	; 0x02
    3e74:	73 81       	ldd	r23, Z+3	; 0x03
    3e76:	4e 01       	movw	r8, r28
    3e78:	f8 e4       	ldi	r31, 0x48	; 72
    3e7a:	8f 0e       	add	r8, r31
    3e7c:	91 1c       	adc	r9, r1
    3e7e:	07 2d       	mov	r16, r7
    3e80:	95 01       	movw	r18, r10
    3e82:	c4 01       	movw	r24, r8
    3e84:	0e 94 16 0a 	call	0x142c	; 0x142c <ftoa>
			for (j = strlen(str); !(f & 2) && j < w; j++) putc_bfd(&pb, pad);	/* Left pads */
    3e88:	f4 01       	movw	r30, r8
    3e8a:	01 90       	ld	r0, Z+
    3e8c:	00 20       	and	r0, r0
    3e8e:	e9 f7       	brne	.-6      	; 0x3e8a <f_printf+0x2e2>
    3e90:	31 97       	sbiw	r30, 0x01	; 1
    3e92:	8f 01       	movw	r16, r30
    3e94:	08 19       	sub	r16, r8
    3e96:	19 09       	sbc	r17, r9
    3e98:	09 c0       	rjmp	.+18     	; 0x3eac <f_printf+0x304>
    3e9a:	a9 96       	adiw	r28, 0x29	; 41
    3e9c:	6f ad       	ldd	r22, Y+63	; 0x3f
    3e9e:	a9 97       	sbiw	r28, 0x29	; 41
    3ea0:	ce 01       	movw	r24, r28
    3ea2:	01 96       	adiw	r24, 0x01	; 1
    3ea4:	0e 94 bc 1c 	call	0x3978	; 0x3978 <putc_bfd>
    3ea8:	0f 5f       	subi	r16, 0xFF	; 255
    3eaa:	1f 4f       	sbci	r17, 0xFF	; 255
    3eac:	41 fc       	sbrc	r4, 1
    3eae:	0e c0       	rjmp	.+28     	; 0x3ecc <f_printf+0x324>
    3eb0:	0e 15       	cp	r16, r14
    3eb2:	1f 05       	cpc	r17, r15
    3eb4:	90 f3       	brcs	.-28     	; 0x3e9a <f_printf+0x2f2>
    3eb6:	a1 2c       	mov	r10, r1
    3eb8:	b1 2c       	mov	r11, r1
    3eba:	0a c0       	rjmp	.+20     	; 0x3ed0 <f_printf+0x328>
			for (i = 0; str[i]; putc_bfd(&pb, str[i++])) ;	/* Body */
    3ebc:	2f ef       	ldi	r18, 0xFF	; 255
    3ebe:	a2 1a       	sub	r10, r18
    3ec0:	b2 0a       	sbc	r11, r18
    3ec2:	ce 01       	movw	r24, r28
    3ec4:	01 96       	adiw	r24, 0x01	; 1
    3ec6:	0e 94 bc 1c 	call	0x3978	; 0x3978 <putc_bfd>
    3eca:	02 c0       	rjmp	.+4      	; 0x3ed0 <f_printf+0x328>
    3ecc:	a1 2c       	mov	r10, r1
    3ece:	b1 2c       	mov	r11, r1
    3ed0:	e8 e4       	ldi	r30, 0x48	; 72
    3ed2:	f0 e0       	ldi	r31, 0x00	; 0
    3ed4:	ec 0f       	add	r30, r28
    3ed6:	fd 1f       	adc	r31, r29
    3ed8:	ea 0d       	add	r30, r10
    3eda:	fb 1d       	adc	r31, r11
    3edc:	60 81       	ld	r22, Z
    3ede:	61 11       	cpse	r22, r1
    3ee0:	ed cf       	rjmp	.-38     	; 0x3ebc <f_printf+0x314>
    3ee2:	06 c0       	rjmp	.+12     	; 0x3ef0 <f_printf+0x348>
			while (j++ < w) putc_bfd(&pb, ' ');	/* Right pads */
    3ee4:	60 e2       	ldi	r22, 0x20	; 32
    3ee6:	ce 01       	movw	r24, r28
    3ee8:	01 96       	adiw	r24, 0x01	; 1
    3eea:	0e 94 bc 1c 	call	0x3978	; 0x3978 <putc_bfd>
    3eee:	85 01       	movw	r16, r10
    3ef0:	58 01       	movw	r10, r16
    3ef2:	3f ef       	ldi	r19, 0xFF	; 255
    3ef4:	a3 1a       	sub	r10, r19
    3ef6:	b3 0a       	sbc	r11, r19
    3ef8:	0e 15       	cp	r16, r14
    3efa:	1f 05       	cpc	r17, r15
    3efc:	98 f3       	brcs	.-26     	; 0x3ee4 <f_printf+0x33c>
			continue;
#if FF_PRINT_FLOAT && FF_INTDEF == 2
		case 'f':					/* Floating point (decimal) */
		case 'e':					/* Floating point (e) */
		case 'E':					/* Floating point (E) */
			ftoa(str, va_arg(arp, double), prec, tc);	/* Make a floating point string */
    3efe:	ab 96       	adiw	r28, 0x2b	; 43
    3f00:	2e ac       	ldd	r2, Y+62	; 0x3e
    3f02:	3f ac       	ldd	r3, Y+63	; 0x3f
    3f04:	ab 97       	sbiw	r28, 0x2b	; 43
    3f06:	82 ce       	rjmp	.-764    	; 0x3c0c <f_printf+0x64>
			for (i = 0; str[i]; putc_bfd(&pb, str[i++])) ;	/* Body */
			while (j++ < w) putc_bfd(&pb, ' ');	/* Right pads */
			continue;
#endif
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, tc); continue;
    3f08:	67 2d       	mov	r22, r7
    3f0a:	ce 01       	movw	r24, r28
    3f0c:	01 96       	adiw	r24, 0x01	; 1
    3f0e:	0e 94 bc 1c 	call	0x3978	; 0x3978 <putc_bfd>
    3f12:	7c ce       	rjmp	.-776    	; 0x3c0c <f_printf+0x64>
#endif
		}
		if (tc == 0) break;			/* End of format string */
		switch (tc) {				/* Atgument type is... */
		case 'b':					/* Unsigned binary */
			r = 2; break;
    3f14:	68 94       	set
    3f16:	88 24       	eor	r8, r8
    3f18:	81 f8       	bld	r8, 1
    3f1a:	91 2c       	mov	r9, r1
    3f1c:	04 c0       	rjmp	.+8      	; 0x3f26 <f_printf+0x37e>

		case 'o':					/* Unsigned octal */
			r = 8; break;
    3f1e:	68 94       	set
    3f20:	88 24       	eor	r8, r8
    3f22:	83 f8       	bld	r8, 3
    3f24:	91 2c       	mov	r9, r1
		}
		if (tc == 'd' && (v & 0x8000000000000000)) {	/* Negative value? */
			v = 0 - v; f |= 1;
		}
#else
		if (f & 4) {	/* long argument? */
    3f26:	42 fe       	sbrs	r4, 2
    3f28:	0a c0       	rjmp	.+20     	; 0x3f3e <f_printf+0x396>
			v = (DWORD)va_arg(arp, long);
    3f2a:	f1 01       	movw	r30, r2
    3f2c:	60 81       	ld	r22, Z
    3f2e:	71 81       	ldd	r23, Z+1	; 0x01
    3f30:	82 81       	ldd	r24, Z+2	; 0x02
    3f32:	93 81       	ldd	r25, Z+3	; 0x03
    3f34:	91 01       	movw	r18, r2
    3f36:	2c 5f       	subi	r18, 0xFC	; 252
    3f38:	3f 4f       	sbci	r19, 0xFF	; 255
    3f3a:	19 01       	movw	r2, r18
    3f3c:	18 c0       	rjmp	.+48     	; 0x3f6e <f_printf+0x3c6>
		} else {		/* int/short/char argument */
			v = (tc == 'd') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int);
    3f3e:	34 e6       	ldi	r19, 0x64	; 100
    3f40:	73 12       	cpse	r7, r19
    3f42:	0c c0       	rjmp	.+24     	; 0x3f5c <f_printf+0x3b4>
    3f44:	f1 01       	movw	r30, r2
    3f46:	60 81       	ld	r22, Z
    3f48:	71 81       	ldd	r23, Z+1	; 0x01
    3f4a:	07 2e       	mov	r0, r23
    3f4c:	00 0c       	add	r0, r0
    3f4e:	88 0b       	sbc	r24, r24
    3f50:	99 0b       	sbc	r25, r25
    3f52:	91 01       	movw	r18, r2
    3f54:	2e 5f       	subi	r18, 0xFE	; 254
    3f56:	3f 4f       	sbci	r19, 0xFF	; 255
    3f58:	19 01       	movw	r2, r18
    3f5a:	09 c0       	rjmp	.+18     	; 0x3f6e <f_printf+0x3c6>
    3f5c:	f1 01       	movw	r30, r2
    3f5e:	60 81       	ld	r22, Z
    3f60:	71 81       	ldd	r23, Z+1	; 0x01
    3f62:	80 e0       	ldi	r24, 0x00	; 0
    3f64:	90 e0       	ldi	r25, 0x00	; 0
    3f66:	91 01       	movw	r18, r2
    3f68:	2e 5f       	subi	r18, 0xFE	; 254
    3f6a:	3f 4f       	sbci	r19, 0xFF	; 255
    3f6c:	19 01       	movw	r2, r18
		}
		if (tc == 'd' && (v & 0x80000000)) {	/* Negative value? */
    3f6e:	34 e6       	ldi	r19, 0x64	; 100
    3f70:	73 12       	cpse	r7, r19
    3f72:	0b c0       	rjmp	.+22     	; 0x3f8a <f_printf+0x3e2>
    3f74:	99 23       	and	r25, r25
    3f76:	4c f4       	brge	.+18     	; 0x3f8a <f_printf+0x3e2>
			v = 0 - v; f |= 1;
    3f78:	90 95       	com	r25
    3f7a:	80 95       	com	r24
    3f7c:	70 95       	com	r23
    3f7e:	61 95       	neg	r22
    3f80:	7f 4f       	sbci	r23, 0xFF	; 255
    3f82:	8f 4f       	sbci	r24, 0xFF	; 255
    3f84:	9f 4f       	sbci	r25, 0xFF	; 255
    3f86:	68 94       	set
    3f88:	40 f8       	bld	r4, 0
		}
#endif
		i = 0;
    3f8a:	a1 2c       	mov	r10, r1
    3f8c:	b1 2c       	mov	r11, r1
    3f8e:	01 c0       	rjmp	.+2      	; 0x3f92 <f_printf+0x3ea>
		do {	/* Make an integer number string */
			d = (char)(v % r); v /= r;
			if (d > 9) d += (tc == 'x') ? 0x27 : 0x07;
			str[i++] = d + '0';
    3f90:	58 01       	movw	r10, r16
			v = 0 - v; f |= 1;
		}
#endif
		i = 0;
		do {	/* Make an integer number string */
			d = (char)(v % r); v /= r;
    3f92:	84 01       	movw	r16, r8
    3f94:	20 e0       	ldi	r18, 0x00	; 0
    3f96:	30 e0       	ldi	r19, 0x00	; 0
    3f98:	a9 01       	movw	r20, r18
    3f9a:	98 01       	movw	r18, r16
    3f9c:	0e 94 e2 22 	call	0x45c4	; 0x45c4 <__udivmodsi4>
    3fa0:	f6 2f       	mov	r31, r22
    3fa2:	e6 2f       	mov	r30, r22
    3fa4:	62 2f       	mov	r22, r18
    3fa6:	73 2f       	mov	r23, r19
    3fa8:	84 2f       	mov	r24, r20
    3faa:	95 2f       	mov	r25, r21
			if (d > 9) d += (tc == 'x') ? 0x27 : 0x07;
    3fac:	fa 30       	cpi	r31, 0x0A	; 10
    3fae:	38 f0       	brcs	.+14     	; 0x3fbe <f_printf+0x416>
    3fb0:	e8 e7       	ldi	r30, 0x78	; 120
    3fb2:	7e 12       	cpse	r7, r30
    3fb4:	02 c0       	rjmp	.+4      	; 0x3fba <f_printf+0x412>
    3fb6:	e7 e2       	ldi	r30, 0x27	; 39
    3fb8:	01 c0       	rjmp	.+2      	; 0x3fbc <f_printf+0x414>
    3fba:	e7 e0       	ldi	r30, 0x07	; 7
    3fbc:	ef 0f       	add	r30, r31
			str[i++] = d + '0';
    3fbe:	85 01       	movw	r16, r10
    3fc0:	0f 5f       	subi	r16, 0xFF	; 255
    3fc2:	1f 4f       	sbci	r17, 0xFF	; 255
    3fc4:	a8 e4       	ldi	r26, 0x48	; 72
    3fc6:	b0 e0       	ldi	r27, 0x00	; 0
    3fc8:	ac 0f       	add	r26, r28
    3fca:	bd 1f       	adc	r27, r29
    3fcc:	aa 0d       	add	r26, r10
    3fce:	bb 1d       	adc	r27, r11
    3fd0:	e0 5d       	subi	r30, 0xD0	; 208
    3fd2:	ec 93       	st	X, r30
		} while (v && i < SZ_NUM_BUF);
    3fd4:	61 15       	cp	r22, r1
    3fd6:	71 05       	cpc	r23, r1
    3fd8:	81 05       	cpc	r24, r1
    3fda:	91 05       	cpc	r25, r1
    3fdc:	19 f0       	breq	.+6      	; 0x3fe4 <f_printf+0x43c>
    3fde:	00 32       	cpi	r16, 0x20	; 32
    3fe0:	11 05       	cpc	r17, r1
    3fe2:	b0 f2       	brcs	.-84     	; 0x3f90 <f_printf+0x3e8>
		if (f & 1) str[i++] = '-';	/* Sign */
    3fe4:	40 fe       	sbrs	r4, 0
    3fe6:	0b c0       	rjmp	.+22     	; 0x3ffe <f_printf+0x456>
    3fe8:	e8 e4       	ldi	r30, 0x48	; 72
    3fea:	f0 e0       	ldi	r31, 0x00	; 0
    3fec:	ec 0f       	add	r30, r28
    3fee:	fd 1f       	adc	r31, r29
    3ff0:	e0 0f       	add	r30, r16
    3ff2:	f1 1f       	adc	r31, r17
    3ff4:	8d e2       	ldi	r24, 0x2D	; 45
    3ff6:	80 83       	st	Z, r24
    3ff8:	85 01       	movw	r16, r10
    3ffa:	0e 5f       	subi	r16, 0xFE	; 254
    3ffc:	1f 4f       	sbci	r17, 0xFF	; 255
		/* Write it */
		for (j = i; !(f & 2) && j < w; j++) {	/* Left pads */
    3ffe:	58 01       	movw	r10, r16
    4000:	0a c0       	rjmp	.+20     	; 0x4016 <f_printf+0x46e>
			putc_bfd(&pb, pad);
    4002:	a9 96       	adiw	r28, 0x29	; 41
    4004:	6f ad       	ldd	r22, Y+63	; 0x3f
    4006:	a9 97       	sbiw	r28, 0x29	; 41
    4008:	ce 01       	movw	r24, r28
    400a:	01 96       	adiw	r24, 0x01	; 1
    400c:	0e 94 bc 1c 	call	0x3978	; 0x3978 <putc_bfd>
			if (d > 9) d += (tc == 'x') ? 0x27 : 0x07;
			str[i++] = d + '0';
		} while (v && i < SZ_NUM_BUF);
		if (f & 1) str[i++] = '-';	/* Sign */
		/* Write it */
		for (j = i; !(f & 2) && j < w; j++) {	/* Left pads */
    4010:	ff ef       	ldi	r31, 0xFF	; 255
    4012:	af 1a       	sub	r10, r31
    4014:	bf 0a       	sbc	r11, r31
    4016:	41 fc       	sbrc	r4, 1
    4018:	03 c0       	rjmp	.+6      	; 0x4020 <f_printf+0x478>
    401a:	ae 14       	cp	r10, r14
    401c:	bf 04       	cpc	r11, r15
    401e:	88 f3       	brcs	.-30     	; 0x4002 <f_printf+0x45a>
			putc_bfd(&pb, pad);
		}
		do {				/* Body */
			putc_bfd(&pb, (TCHAR)str[--i]);
    4020:	01 50       	subi	r16, 0x01	; 1
    4022:	11 09       	sbc	r17, r1
    4024:	e8 e4       	ldi	r30, 0x48	; 72
    4026:	f0 e0       	ldi	r31, 0x00	; 0
    4028:	ec 0f       	add	r30, r28
    402a:	fd 1f       	adc	r31, r29
    402c:	e0 0f       	add	r30, r16
    402e:	f1 1f       	adc	r31, r17
    4030:	60 81       	ld	r22, Z
    4032:	ce 01       	movw	r24, r28
    4034:	01 96       	adiw	r24, 0x01	; 1
    4036:	0e 94 bc 1c 	call	0x3978	; 0x3978 <putc_bfd>
		} while (i);
    403a:	01 15       	cp	r16, r1
    403c:	11 05       	cpc	r17, r1
    403e:	81 f7       	brne	.-32     	; 0x4020 <f_printf+0x478>
    4040:	06 c0       	rjmp	.+12     	; 0x404e <f_printf+0x4a6>
		while (j++ < w) {	/* Right pads */
			putc_bfd(&pb, ' ');
    4042:	60 e2       	ldi	r22, 0x20	; 32
    4044:	ce 01       	movw	r24, r28
    4046:	01 96       	adiw	r24, 0x01	; 1
    4048:	0e 94 bc 1c 	call	0x3978	; 0x3978 <putc_bfd>
			putc_bfd(&pb, pad);
		}
		do {				/* Body */
			putc_bfd(&pb, (TCHAR)str[--i]);
		} while (i);
		while (j++ < w) {	/* Right pads */
    404c:	58 01       	movw	r10, r16
    404e:	85 01       	movw	r16, r10
    4050:	0f 5f       	subi	r16, 0xFF	; 255
    4052:	1f 4f       	sbci	r17, 0xFF	; 255
    4054:	ae 14       	cp	r10, r14
    4056:	bf 04       	cpc	r11, r15
    4058:	a0 f3       	brcs	.-24     	; 0x4042 <f_printf+0x49a>
    405a:	d8 cd       	rjmp	.-1104   	; 0x3c0c <f_printf+0x64>
		}
	}

	va_end(arp);

	return putc_flush(&pb);
    405c:	ce 01       	movw	r24, r28
    405e:	01 96       	adiw	r24, 0x01	; 1
    4060:	0e 94 06 1d 	call	0x3a0c	; 0x3a0c <putc_flush>
}
    4064:	c6 59       	subi	r28, 0x96	; 150
    4066:	df 4f       	sbci	r29, 0xFF	; 255
    4068:	0f b6       	in	r0, 0x3f	; 63
    406a:	f8 94       	cli
    406c:	de bf       	out	0x3e, r29	; 62
    406e:	0f be       	out	0x3f, r0	; 63
    4070:	cd bf       	out	0x3d, r28	; 61
    4072:	df 91       	pop	r29
    4074:	cf 91       	pop	r28
    4076:	1f 91       	pop	r17
    4078:	0f 91       	pop	r16
    407a:	ff 90       	pop	r15
    407c:	ef 90       	pop	r14
    407e:	df 90       	pop	r13
    4080:	cf 90       	pop	r12
    4082:	bf 90       	pop	r11
    4084:	af 90       	pop	r10
    4086:	9f 90       	pop	r9
    4088:	8f 90       	pop	r8
    408a:	7f 90       	pop	r7
    408c:	6f 90       	pop	r6
    408e:	5f 90       	pop	r5
    4090:	4f 90       	pop	r4
    4092:	3f 90       	pop	r3
    4094:	2f 90       	pop	r2
    4096:	08 95       	ret

00004098 <spi_init>:
uint8_t spi_rx()
{
	SPDR = 0xFF;
	while(!(SPSR & (1<<SPIF)));
	return SPDR;
}
    4098:	84 b1       	in	r24, 0x04	; 4
    409a:	80 6b       	ori	r24, 0xB0	; 176
    409c:	84 b9       	out	0x04, r24	; 4
    409e:	81 b1       	in	r24, 0x01	; 1
    40a0:	80 64       	ori	r24, 0x40	; 64
    40a2:	81 b9       	out	0x01, r24	; 1
    40a4:	82 b1       	in	r24, 0x02	; 2
    40a6:	80 64       	ori	r24, 0x40	; 64
    40a8:	82 b9       	out	0x02, r24	; 2
    40aa:	8c b5       	in	r24, 0x2c	; 44
    40ac:	80 65       	ori	r24, 0x50	; 80
    40ae:	8c bd       	out	0x2c, r24	; 44
    40b0:	08 95       	ret

000040b2 <spi_tx>:
    40b2:	8e bd       	out	0x2e, r24	; 46
    40b4:	0d b4       	in	r0, 0x2d	; 45
    40b6:	07 fe       	sbrs	r0, 7
    40b8:	fd cf       	rjmp	.-6      	; 0x40b4 <spi_tx+0x2>
    40ba:	08 95       	ret

000040bc <spi_x>:

uint8_t spi_x(uint8_t data)
{
	SPDR = data;
    40bc:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
    40be:	0d b4       	in	r0, 0x2d	; 45
    40c0:	07 fe       	sbrs	r0, 7
    40c2:	fd cf       	rjmp	.-6      	; 0x40be <spi_x+0x2>
	return SPDR;
    40c4:	8e b5       	in	r24, 0x2e	; 46
}
    40c6:	08 95       	ret

000040c8 <uart_init>:

void uart_init()
{
	int ubrr = 12;
	// Set baud rate
	UBRR1H = (ubrr>>8);
    40c8:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7f00cd>
	UBRR1L = ubrr;
    40cc:	8c e0       	ldi	r24, 0x0C	; 12
    40ce:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7f00cc>

	// Enable receiver and transmitter
	UCSR1B = (1<<RXEN1)|(1<<TXEN1);
    40d2:	88 e1       	ldi	r24, 0x18	; 24
    40d4:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7f00c9>

	// Enable receive complete interrupt
	//UCSR1B |= (1 << RXCIE1);

	// Set frame format: 8 data, 1 stop bit
	UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
    40d8:	86 e0       	ldi	r24, 0x06	; 6
    40da:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7f00ca>
    40de:	08 95       	ret

000040e0 <uart_receive>:


char uart_receive()
{
	// Wait for data to be received
	while (!(UCSR1A & (1 << RXC1)));
    40e0:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7f00c8>
    40e4:	88 23       	and	r24, r24
    40e6:	e4 f7       	brge	.-8      	; 0x40e0 <uart_receive>
	// Return received data
	return UDR1;
    40e8:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
}
    40ec:	08 95       	ret

000040ee <uart_transmit>:

void uart_transmit(char data)
{
	while (!(UCSR1A & (1 << UDRE1)));
    40ee:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7f00c8>
    40f2:	95 ff       	sbrs	r25, 5
    40f4:	fc cf       	rjmp	.-8      	; 0x40ee <uart_transmit>
	UDR1 = data;
    40f6:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
    40fa:	08 95       	ret

000040fc <uart_sendStr>:
}

void uart_sendStr(const char *data)
{
    40fc:	cf 93       	push	r28
    40fe:	df 93       	push	r29
    4100:	ec 01       	movw	r28, r24
	while (*data != '\0')
    4102:	03 c0       	rjmp	.+6      	; 0x410a <uart_sendStr+0xe>
	{
		uart_transmit(*data);
    4104:	0e 94 77 20 	call	0x40ee	; 0x40ee <uart_transmit>
		data++;
    4108:	21 96       	adiw	r28, 0x01	; 1
	UDR1 = data;
}

void uart_sendStr(const char *data)
{
	while (*data != '\0')
    410a:	88 81       	ld	r24, Y
    410c:	81 11       	cpse	r24, r1
    410e:	fa cf       	rjmp	.-12     	; 0x4104 <uart_sendStr+0x8>
	{
		uart_transmit(*data);
		data++;
	}
    4110:	df 91       	pop	r29
    4112:	cf 91       	pop	r28
    4114:	08 95       	ret

00004116 <__subsf3>:
    4116:	50 58       	subi	r21, 0x80	; 128

00004118 <__addsf3>:
    4118:	bb 27       	eor	r27, r27
    411a:	aa 27       	eor	r26, r26
    411c:	0e 94 a3 20 	call	0x4146	; 0x4146 <__addsf3x>
    4120:	0c 94 1d 22 	jmp	0x443a	; 0x443a <__fp_round>
    4124:	0e 94 0f 22 	call	0x441e	; 0x441e <__fp_pscA>
    4128:	38 f0       	brcs	.+14     	; 0x4138 <__addsf3+0x20>
    412a:	0e 94 16 22 	call	0x442c	; 0x442c <__fp_pscB>
    412e:	20 f0       	brcs	.+8      	; 0x4138 <__addsf3+0x20>
    4130:	39 f4       	brne	.+14     	; 0x4140 <__addsf3+0x28>
    4132:	9f 3f       	cpi	r25, 0xFF	; 255
    4134:	19 f4       	brne	.+6      	; 0x413c <__addsf3+0x24>
    4136:	26 f4       	brtc	.+8      	; 0x4140 <__addsf3+0x28>
    4138:	0c 94 0c 22 	jmp	0x4418	; 0x4418 <__fp_nan>
    413c:	0e f4       	brtc	.+2      	; 0x4140 <__addsf3+0x28>
    413e:	e0 95       	com	r30
    4140:	e7 fb       	bst	r30, 7
    4142:	0c 94 06 22 	jmp	0x440c	; 0x440c <__fp_inf>

00004146 <__addsf3x>:
    4146:	e9 2f       	mov	r30, r25
    4148:	0e 94 2e 22 	call	0x445c	; 0x445c <__fp_split3>
    414c:	58 f3       	brcs	.-42     	; 0x4124 <__addsf3+0xc>
    414e:	ba 17       	cp	r27, r26
    4150:	62 07       	cpc	r22, r18
    4152:	73 07       	cpc	r23, r19
    4154:	84 07       	cpc	r24, r20
    4156:	95 07       	cpc	r25, r21
    4158:	20 f0       	brcs	.+8      	; 0x4162 <__addsf3x+0x1c>
    415a:	79 f4       	brne	.+30     	; 0x417a <__addsf3x+0x34>
    415c:	a6 f5       	brtc	.+104    	; 0x41c6 <__addsf3x+0x80>
    415e:	0c 94 50 22 	jmp	0x44a0	; 0x44a0 <__fp_zero>
    4162:	0e f4       	brtc	.+2      	; 0x4166 <__addsf3x+0x20>
    4164:	e0 95       	com	r30
    4166:	0b 2e       	mov	r0, r27
    4168:	ba 2f       	mov	r27, r26
    416a:	a0 2d       	mov	r26, r0
    416c:	0b 01       	movw	r0, r22
    416e:	b9 01       	movw	r22, r18
    4170:	90 01       	movw	r18, r0
    4172:	0c 01       	movw	r0, r24
    4174:	ca 01       	movw	r24, r20
    4176:	a0 01       	movw	r20, r0
    4178:	11 24       	eor	r1, r1
    417a:	ff 27       	eor	r31, r31
    417c:	59 1b       	sub	r21, r25
    417e:	99 f0       	breq	.+38     	; 0x41a6 <__addsf3x+0x60>
    4180:	59 3f       	cpi	r21, 0xF9	; 249
    4182:	50 f4       	brcc	.+20     	; 0x4198 <__addsf3x+0x52>
    4184:	50 3e       	cpi	r21, 0xE0	; 224
    4186:	68 f1       	brcs	.+90     	; 0x41e2 <__addsf3x+0x9c>
    4188:	1a 16       	cp	r1, r26
    418a:	f0 40       	sbci	r31, 0x00	; 0
    418c:	a2 2f       	mov	r26, r18
    418e:	23 2f       	mov	r18, r19
    4190:	34 2f       	mov	r19, r20
    4192:	44 27       	eor	r20, r20
    4194:	58 5f       	subi	r21, 0xF8	; 248
    4196:	f3 cf       	rjmp	.-26     	; 0x417e <__addsf3x+0x38>
    4198:	46 95       	lsr	r20
    419a:	37 95       	ror	r19
    419c:	27 95       	ror	r18
    419e:	a7 95       	ror	r26
    41a0:	f0 40       	sbci	r31, 0x00	; 0
    41a2:	53 95       	inc	r21
    41a4:	c9 f7       	brne	.-14     	; 0x4198 <__addsf3x+0x52>
    41a6:	7e f4       	brtc	.+30     	; 0x41c6 <__addsf3x+0x80>
    41a8:	1f 16       	cp	r1, r31
    41aa:	ba 0b       	sbc	r27, r26
    41ac:	62 0b       	sbc	r22, r18
    41ae:	73 0b       	sbc	r23, r19
    41b0:	84 0b       	sbc	r24, r20
    41b2:	ba f0       	brmi	.+46     	; 0x41e2 <__addsf3x+0x9c>
    41b4:	91 50       	subi	r25, 0x01	; 1
    41b6:	a1 f0       	breq	.+40     	; 0x41e0 <__addsf3x+0x9a>
    41b8:	ff 0f       	add	r31, r31
    41ba:	bb 1f       	adc	r27, r27
    41bc:	66 1f       	adc	r22, r22
    41be:	77 1f       	adc	r23, r23
    41c0:	88 1f       	adc	r24, r24
    41c2:	c2 f7       	brpl	.-16     	; 0x41b4 <__addsf3x+0x6e>
    41c4:	0e c0       	rjmp	.+28     	; 0x41e2 <__addsf3x+0x9c>
    41c6:	ba 0f       	add	r27, r26
    41c8:	62 1f       	adc	r22, r18
    41ca:	73 1f       	adc	r23, r19
    41cc:	84 1f       	adc	r24, r20
    41ce:	48 f4       	brcc	.+18     	; 0x41e2 <__addsf3x+0x9c>
    41d0:	87 95       	ror	r24
    41d2:	77 95       	ror	r23
    41d4:	67 95       	ror	r22
    41d6:	b7 95       	ror	r27
    41d8:	f7 95       	ror	r31
    41da:	9e 3f       	cpi	r25, 0xFE	; 254
    41dc:	08 f0       	brcs	.+2      	; 0x41e0 <__addsf3x+0x9a>
    41de:	b0 cf       	rjmp	.-160    	; 0x4140 <__addsf3+0x28>
    41e0:	93 95       	inc	r25
    41e2:	88 0f       	add	r24, r24
    41e4:	08 f0       	brcs	.+2      	; 0x41e8 <__addsf3x+0xa2>
    41e6:	99 27       	eor	r25, r25
    41e8:	ee 0f       	add	r30, r30
    41ea:	97 95       	ror	r25
    41ec:	87 95       	ror	r24
    41ee:	08 95       	ret

000041f0 <__cmpsf2>:
    41f0:	0e 94 e2 21 	call	0x43c4	; 0x43c4 <__fp_cmp>
    41f4:	08 f4       	brcc	.+2      	; 0x41f8 <__cmpsf2+0x8>
    41f6:	81 e0       	ldi	r24, 0x01	; 1
    41f8:	08 95       	ret

000041fa <__divsf3>:
    41fa:	0e 94 11 21 	call	0x4222	; 0x4222 <__divsf3x>
    41fe:	0c 94 1d 22 	jmp	0x443a	; 0x443a <__fp_round>
    4202:	0e 94 16 22 	call	0x442c	; 0x442c <__fp_pscB>
    4206:	58 f0       	brcs	.+22     	; 0x421e <__divsf3+0x24>
    4208:	0e 94 0f 22 	call	0x441e	; 0x441e <__fp_pscA>
    420c:	40 f0       	brcs	.+16     	; 0x421e <__divsf3+0x24>
    420e:	29 f4       	brne	.+10     	; 0x421a <__divsf3+0x20>
    4210:	5f 3f       	cpi	r21, 0xFF	; 255
    4212:	29 f0       	breq	.+10     	; 0x421e <__divsf3+0x24>
    4214:	0c 94 06 22 	jmp	0x440c	; 0x440c <__fp_inf>
    4218:	51 11       	cpse	r21, r1
    421a:	0c 94 51 22 	jmp	0x44a2	; 0x44a2 <__fp_szero>
    421e:	0c 94 0c 22 	jmp	0x4418	; 0x4418 <__fp_nan>

00004222 <__divsf3x>:
    4222:	0e 94 2e 22 	call	0x445c	; 0x445c <__fp_split3>
    4226:	68 f3       	brcs	.-38     	; 0x4202 <__divsf3+0x8>

00004228 <__divsf3_pse>:
    4228:	99 23       	and	r25, r25
    422a:	b1 f3       	breq	.-20     	; 0x4218 <__divsf3+0x1e>
    422c:	55 23       	and	r21, r21
    422e:	91 f3       	breq	.-28     	; 0x4214 <__divsf3+0x1a>
    4230:	95 1b       	sub	r25, r21
    4232:	55 0b       	sbc	r21, r21
    4234:	bb 27       	eor	r27, r27
    4236:	aa 27       	eor	r26, r26
    4238:	62 17       	cp	r22, r18
    423a:	73 07       	cpc	r23, r19
    423c:	84 07       	cpc	r24, r20
    423e:	38 f0       	brcs	.+14     	; 0x424e <__divsf3_pse+0x26>
    4240:	9f 5f       	subi	r25, 0xFF	; 255
    4242:	5f 4f       	sbci	r21, 0xFF	; 255
    4244:	22 0f       	add	r18, r18
    4246:	33 1f       	adc	r19, r19
    4248:	44 1f       	adc	r20, r20
    424a:	aa 1f       	adc	r26, r26
    424c:	a9 f3       	breq	.-22     	; 0x4238 <__divsf3_pse+0x10>
    424e:	35 d0       	rcall	.+106    	; 0x42ba <__divsf3_pse+0x92>
    4250:	0e 2e       	mov	r0, r30
    4252:	3a f0       	brmi	.+14     	; 0x4262 <__divsf3_pse+0x3a>
    4254:	e0 e8       	ldi	r30, 0x80	; 128
    4256:	32 d0       	rcall	.+100    	; 0x42bc <__divsf3_pse+0x94>
    4258:	91 50       	subi	r25, 0x01	; 1
    425a:	50 40       	sbci	r21, 0x00	; 0
    425c:	e6 95       	lsr	r30
    425e:	00 1c       	adc	r0, r0
    4260:	ca f7       	brpl	.-14     	; 0x4254 <__divsf3_pse+0x2c>
    4262:	2b d0       	rcall	.+86     	; 0x42ba <__divsf3_pse+0x92>
    4264:	fe 2f       	mov	r31, r30
    4266:	29 d0       	rcall	.+82     	; 0x42ba <__divsf3_pse+0x92>
    4268:	66 0f       	add	r22, r22
    426a:	77 1f       	adc	r23, r23
    426c:	88 1f       	adc	r24, r24
    426e:	bb 1f       	adc	r27, r27
    4270:	26 17       	cp	r18, r22
    4272:	37 07       	cpc	r19, r23
    4274:	48 07       	cpc	r20, r24
    4276:	ab 07       	cpc	r26, r27
    4278:	b0 e8       	ldi	r27, 0x80	; 128
    427a:	09 f0       	breq	.+2      	; 0x427e <__divsf3_pse+0x56>
    427c:	bb 0b       	sbc	r27, r27
    427e:	80 2d       	mov	r24, r0
    4280:	bf 01       	movw	r22, r30
    4282:	ff 27       	eor	r31, r31
    4284:	93 58       	subi	r25, 0x83	; 131
    4286:	5f 4f       	sbci	r21, 0xFF	; 255
    4288:	3a f0       	brmi	.+14     	; 0x4298 <__divsf3_pse+0x70>
    428a:	9e 3f       	cpi	r25, 0xFE	; 254
    428c:	51 05       	cpc	r21, r1
    428e:	78 f0       	brcs	.+30     	; 0x42ae <__divsf3_pse+0x86>
    4290:	0c 94 06 22 	jmp	0x440c	; 0x440c <__fp_inf>
    4294:	0c 94 51 22 	jmp	0x44a2	; 0x44a2 <__fp_szero>
    4298:	5f 3f       	cpi	r21, 0xFF	; 255
    429a:	e4 f3       	brlt	.-8      	; 0x4294 <__divsf3_pse+0x6c>
    429c:	98 3e       	cpi	r25, 0xE8	; 232
    429e:	d4 f3       	brlt	.-12     	; 0x4294 <__divsf3_pse+0x6c>
    42a0:	86 95       	lsr	r24
    42a2:	77 95       	ror	r23
    42a4:	67 95       	ror	r22
    42a6:	b7 95       	ror	r27
    42a8:	f7 95       	ror	r31
    42aa:	9f 5f       	subi	r25, 0xFF	; 255
    42ac:	c9 f7       	brne	.-14     	; 0x42a0 <__divsf3_pse+0x78>
    42ae:	88 0f       	add	r24, r24
    42b0:	91 1d       	adc	r25, r1
    42b2:	96 95       	lsr	r25
    42b4:	87 95       	ror	r24
    42b6:	97 f9       	bld	r25, 7
    42b8:	08 95       	ret
    42ba:	e1 e0       	ldi	r30, 0x01	; 1
    42bc:	66 0f       	add	r22, r22
    42be:	77 1f       	adc	r23, r23
    42c0:	88 1f       	adc	r24, r24
    42c2:	bb 1f       	adc	r27, r27
    42c4:	62 17       	cp	r22, r18
    42c6:	73 07       	cpc	r23, r19
    42c8:	84 07       	cpc	r24, r20
    42ca:	ba 07       	cpc	r27, r26
    42cc:	20 f0       	brcs	.+8      	; 0x42d6 <__divsf3_pse+0xae>
    42ce:	62 1b       	sub	r22, r18
    42d0:	73 0b       	sbc	r23, r19
    42d2:	84 0b       	sbc	r24, r20
    42d4:	ba 0b       	sbc	r27, r26
    42d6:	ee 1f       	adc	r30, r30
    42d8:	88 f7       	brcc	.-30     	; 0x42bc <__divsf3_pse+0x94>
    42da:	e0 95       	com	r30
    42dc:	08 95       	ret

000042de <__fixsfsi>:
    42de:	0e 94 76 21 	call	0x42ec	; 0x42ec <__fixunssfsi>
    42e2:	68 94       	set
    42e4:	b1 11       	cpse	r27, r1
    42e6:	0c 94 51 22 	jmp	0x44a2	; 0x44a2 <__fp_szero>
    42ea:	08 95       	ret

000042ec <__fixunssfsi>:
    42ec:	0e 94 36 22 	call	0x446c	; 0x446c <__fp_splitA>
    42f0:	88 f0       	brcs	.+34     	; 0x4314 <__fixunssfsi+0x28>
    42f2:	9f 57       	subi	r25, 0x7F	; 127
    42f4:	98 f0       	brcs	.+38     	; 0x431c <__fixunssfsi+0x30>
    42f6:	b9 2f       	mov	r27, r25
    42f8:	99 27       	eor	r25, r25
    42fa:	b7 51       	subi	r27, 0x17	; 23
    42fc:	b0 f0       	brcs	.+44     	; 0x432a <__fixunssfsi+0x3e>
    42fe:	e1 f0       	breq	.+56     	; 0x4338 <__fixunssfsi+0x4c>
    4300:	66 0f       	add	r22, r22
    4302:	77 1f       	adc	r23, r23
    4304:	88 1f       	adc	r24, r24
    4306:	99 1f       	adc	r25, r25
    4308:	1a f0       	brmi	.+6      	; 0x4310 <__fixunssfsi+0x24>
    430a:	ba 95       	dec	r27
    430c:	c9 f7       	brne	.-14     	; 0x4300 <__fixunssfsi+0x14>
    430e:	14 c0       	rjmp	.+40     	; 0x4338 <__fixunssfsi+0x4c>
    4310:	b1 30       	cpi	r27, 0x01	; 1
    4312:	91 f0       	breq	.+36     	; 0x4338 <__fixunssfsi+0x4c>
    4314:	0e 94 50 22 	call	0x44a0	; 0x44a0 <__fp_zero>
    4318:	b1 e0       	ldi	r27, 0x01	; 1
    431a:	08 95       	ret
    431c:	0c 94 50 22 	jmp	0x44a0	; 0x44a0 <__fp_zero>
    4320:	67 2f       	mov	r22, r23
    4322:	78 2f       	mov	r23, r24
    4324:	88 27       	eor	r24, r24
    4326:	b8 5f       	subi	r27, 0xF8	; 248
    4328:	39 f0       	breq	.+14     	; 0x4338 <__fixunssfsi+0x4c>
    432a:	b9 3f       	cpi	r27, 0xF9	; 249
    432c:	cc f3       	brlt	.-14     	; 0x4320 <__fixunssfsi+0x34>
    432e:	86 95       	lsr	r24
    4330:	77 95       	ror	r23
    4332:	67 95       	ror	r22
    4334:	b3 95       	inc	r27
    4336:	d9 f7       	brne	.-10     	; 0x432e <__fixunssfsi+0x42>
    4338:	3e f4       	brtc	.+14     	; 0x4348 <__fixunssfsi+0x5c>
    433a:	90 95       	com	r25
    433c:	80 95       	com	r24
    433e:	70 95       	com	r23
    4340:	61 95       	neg	r22
    4342:	7f 4f       	sbci	r23, 0xFF	; 255
    4344:	8f 4f       	sbci	r24, 0xFF	; 255
    4346:	9f 4f       	sbci	r25, 0xFF	; 255
    4348:	08 95       	ret

0000434a <__floatunsisf>:
    434a:	e8 94       	clt
    434c:	09 c0       	rjmp	.+18     	; 0x4360 <__floatsisf+0x12>

0000434e <__floatsisf>:
    434e:	97 fb       	bst	r25, 7
    4350:	3e f4       	brtc	.+14     	; 0x4360 <__floatsisf+0x12>
    4352:	90 95       	com	r25
    4354:	80 95       	com	r24
    4356:	70 95       	com	r23
    4358:	61 95       	neg	r22
    435a:	7f 4f       	sbci	r23, 0xFF	; 255
    435c:	8f 4f       	sbci	r24, 0xFF	; 255
    435e:	9f 4f       	sbci	r25, 0xFF	; 255
    4360:	99 23       	and	r25, r25
    4362:	a9 f0       	breq	.+42     	; 0x438e <__floatsisf+0x40>
    4364:	f9 2f       	mov	r31, r25
    4366:	96 e9       	ldi	r25, 0x96	; 150
    4368:	bb 27       	eor	r27, r27
    436a:	93 95       	inc	r25
    436c:	f6 95       	lsr	r31
    436e:	87 95       	ror	r24
    4370:	77 95       	ror	r23
    4372:	67 95       	ror	r22
    4374:	b7 95       	ror	r27
    4376:	f1 11       	cpse	r31, r1
    4378:	f8 cf       	rjmp	.-16     	; 0x436a <__floatsisf+0x1c>
    437a:	fa f4       	brpl	.+62     	; 0x43ba <__floatsisf+0x6c>
    437c:	bb 0f       	add	r27, r27
    437e:	11 f4       	brne	.+4      	; 0x4384 <__floatsisf+0x36>
    4380:	60 ff       	sbrs	r22, 0
    4382:	1b c0       	rjmp	.+54     	; 0x43ba <__floatsisf+0x6c>
    4384:	6f 5f       	subi	r22, 0xFF	; 255
    4386:	7f 4f       	sbci	r23, 0xFF	; 255
    4388:	8f 4f       	sbci	r24, 0xFF	; 255
    438a:	9f 4f       	sbci	r25, 0xFF	; 255
    438c:	16 c0       	rjmp	.+44     	; 0x43ba <__floatsisf+0x6c>
    438e:	88 23       	and	r24, r24
    4390:	11 f0       	breq	.+4      	; 0x4396 <__floatsisf+0x48>
    4392:	96 e9       	ldi	r25, 0x96	; 150
    4394:	11 c0       	rjmp	.+34     	; 0x43b8 <__floatsisf+0x6a>
    4396:	77 23       	and	r23, r23
    4398:	21 f0       	breq	.+8      	; 0x43a2 <__floatsisf+0x54>
    439a:	9e e8       	ldi	r25, 0x8E	; 142
    439c:	87 2f       	mov	r24, r23
    439e:	76 2f       	mov	r23, r22
    43a0:	05 c0       	rjmp	.+10     	; 0x43ac <__floatsisf+0x5e>
    43a2:	66 23       	and	r22, r22
    43a4:	71 f0       	breq	.+28     	; 0x43c2 <__floatsisf+0x74>
    43a6:	96 e8       	ldi	r25, 0x86	; 134
    43a8:	86 2f       	mov	r24, r22
    43aa:	70 e0       	ldi	r23, 0x00	; 0
    43ac:	60 e0       	ldi	r22, 0x00	; 0
    43ae:	2a f0       	brmi	.+10     	; 0x43ba <__floatsisf+0x6c>
    43b0:	9a 95       	dec	r25
    43b2:	66 0f       	add	r22, r22
    43b4:	77 1f       	adc	r23, r23
    43b6:	88 1f       	adc	r24, r24
    43b8:	da f7       	brpl	.-10     	; 0x43b0 <__floatsisf+0x62>
    43ba:	88 0f       	add	r24, r24
    43bc:	96 95       	lsr	r25
    43be:	87 95       	ror	r24
    43c0:	97 f9       	bld	r25, 7
    43c2:	08 95       	ret

000043c4 <__fp_cmp>:
    43c4:	99 0f       	add	r25, r25
    43c6:	00 08       	sbc	r0, r0
    43c8:	55 0f       	add	r21, r21
    43ca:	aa 0b       	sbc	r26, r26
    43cc:	e0 e8       	ldi	r30, 0x80	; 128
    43ce:	fe ef       	ldi	r31, 0xFE	; 254
    43d0:	16 16       	cp	r1, r22
    43d2:	17 06       	cpc	r1, r23
    43d4:	e8 07       	cpc	r30, r24
    43d6:	f9 07       	cpc	r31, r25
    43d8:	c0 f0       	brcs	.+48     	; 0x440a <__fp_cmp+0x46>
    43da:	12 16       	cp	r1, r18
    43dc:	13 06       	cpc	r1, r19
    43de:	e4 07       	cpc	r30, r20
    43e0:	f5 07       	cpc	r31, r21
    43e2:	98 f0       	brcs	.+38     	; 0x440a <__fp_cmp+0x46>
    43e4:	62 1b       	sub	r22, r18
    43e6:	73 0b       	sbc	r23, r19
    43e8:	84 0b       	sbc	r24, r20
    43ea:	95 0b       	sbc	r25, r21
    43ec:	39 f4       	brne	.+14     	; 0x43fc <__fp_cmp+0x38>
    43ee:	0a 26       	eor	r0, r26
    43f0:	61 f0       	breq	.+24     	; 0x440a <__fp_cmp+0x46>
    43f2:	23 2b       	or	r18, r19
    43f4:	24 2b       	or	r18, r20
    43f6:	25 2b       	or	r18, r21
    43f8:	21 f4       	brne	.+8      	; 0x4402 <__fp_cmp+0x3e>
    43fa:	08 95       	ret
    43fc:	0a 26       	eor	r0, r26
    43fe:	09 f4       	brne	.+2      	; 0x4402 <__fp_cmp+0x3e>
    4400:	a1 40       	sbci	r26, 0x01	; 1
    4402:	a6 95       	lsr	r26
    4404:	8f ef       	ldi	r24, 0xFF	; 255
    4406:	81 1d       	adc	r24, r1
    4408:	81 1d       	adc	r24, r1
    440a:	08 95       	ret

0000440c <__fp_inf>:
    440c:	97 f9       	bld	r25, 7
    440e:	9f 67       	ori	r25, 0x7F	; 127
    4410:	80 e8       	ldi	r24, 0x80	; 128
    4412:	70 e0       	ldi	r23, 0x00	; 0
    4414:	60 e0       	ldi	r22, 0x00	; 0
    4416:	08 95       	ret

00004418 <__fp_nan>:
    4418:	9f ef       	ldi	r25, 0xFF	; 255
    441a:	80 ec       	ldi	r24, 0xC0	; 192
    441c:	08 95       	ret

0000441e <__fp_pscA>:
    441e:	00 24       	eor	r0, r0
    4420:	0a 94       	dec	r0
    4422:	16 16       	cp	r1, r22
    4424:	17 06       	cpc	r1, r23
    4426:	18 06       	cpc	r1, r24
    4428:	09 06       	cpc	r0, r25
    442a:	08 95       	ret

0000442c <__fp_pscB>:
    442c:	00 24       	eor	r0, r0
    442e:	0a 94       	dec	r0
    4430:	12 16       	cp	r1, r18
    4432:	13 06       	cpc	r1, r19
    4434:	14 06       	cpc	r1, r20
    4436:	05 06       	cpc	r0, r21
    4438:	08 95       	ret

0000443a <__fp_round>:
    443a:	09 2e       	mov	r0, r25
    443c:	03 94       	inc	r0
    443e:	00 0c       	add	r0, r0
    4440:	11 f4       	brne	.+4      	; 0x4446 <__fp_round+0xc>
    4442:	88 23       	and	r24, r24
    4444:	52 f0       	brmi	.+20     	; 0x445a <__fp_round+0x20>
    4446:	bb 0f       	add	r27, r27
    4448:	40 f4       	brcc	.+16     	; 0x445a <__fp_round+0x20>
    444a:	bf 2b       	or	r27, r31
    444c:	11 f4       	brne	.+4      	; 0x4452 <__fp_round+0x18>
    444e:	60 ff       	sbrs	r22, 0
    4450:	04 c0       	rjmp	.+8      	; 0x445a <__fp_round+0x20>
    4452:	6f 5f       	subi	r22, 0xFF	; 255
    4454:	7f 4f       	sbci	r23, 0xFF	; 255
    4456:	8f 4f       	sbci	r24, 0xFF	; 255
    4458:	9f 4f       	sbci	r25, 0xFF	; 255
    445a:	08 95       	ret

0000445c <__fp_split3>:
    445c:	57 fd       	sbrc	r21, 7
    445e:	90 58       	subi	r25, 0x80	; 128
    4460:	44 0f       	add	r20, r20
    4462:	55 1f       	adc	r21, r21
    4464:	59 f0       	breq	.+22     	; 0x447c <__fp_splitA+0x10>
    4466:	5f 3f       	cpi	r21, 0xFF	; 255
    4468:	71 f0       	breq	.+28     	; 0x4486 <__fp_splitA+0x1a>
    446a:	47 95       	ror	r20

0000446c <__fp_splitA>:
    446c:	88 0f       	add	r24, r24
    446e:	97 fb       	bst	r25, 7
    4470:	99 1f       	adc	r25, r25
    4472:	61 f0       	breq	.+24     	; 0x448c <__fp_splitA+0x20>
    4474:	9f 3f       	cpi	r25, 0xFF	; 255
    4476:	79 f0       	breq	.+30     	; 0x4496 <__fp_splitA+0x2a>
    4478:	87 95       	ror	r24
    447a:	08 95       	ret
    447c:	12 16       	cp	r1, r18
    447e:	13 06       	cpc	r1, r19
    4480:	14 06       	cpc	r1, r20
    4482:	55 1f       	adc	r21, r21
    4484:	f2 cf       	rjmp	.-28     	; 0x446a <__fp_split3+0xe>
    4486:	46 95       	lsr	r20
    4488:	f1 df       	rcall	.-30     	; 0x446c <__fp_splitA>
    448a:	08 c0       	rjmp	.+16     	; 0x449c <__fp_splitA+0x30>
    448c:	16 16       	cp	r1, r22
    448e:	17 06       	cpc	r1, r23
    4490:	18 06       	cpc	r1, r24
    4492:	99 1f       	adc	r25, r25
    4494:	f1 cf       	rjmp	.-30     	; 0x4478 <__fp_splitA+0xc>
    4496:	86 95       	lsr	r24
    4498:	71 05       	cpc	r23, r1
    449a:	61 05       	cpc	r22, r1
    449c:	08 94       	sec
    449e:	08 95       	ret

000044a0 <__fp_zero>:
    44a0:	e8 94       	clt

000044a2 <__fp_szero>:
    44a2:	bb 27       	eor	r27, r27
    44a4:	66 27       	eor	r22, r22
    44a6:	77 27       	eor	r23, r23
    44a8:	cb 01       	movw	r24, r22
    44aa:	97 f9       	bld	r25, 7
    44ac:	08 95       	ret

000044ae <__gesf2>:
    44ae:	0e 94 e2 21 	call	0x43c4	; 0x43c4 <__fp_cmp>
    44b2:	08 f4       	brcc	.+2      	; 0x44b6 <__gesf2+0x8>
    44b4:	8f ef       	ldi	r24, 0xFF	; 255
    44b6:	08 95       	ret

000044b8 <__mulsf3>:
    44b8:	0e 94 6f 22 	call	0x44de	; 0x44de <__mulsf3x>
    44bc:	0c 94 1d 22 	jmp	0x443a	; 0x443a <__fp_round>
    44c0:	0e 94 0f 22 	call	0x441e	; 0x441e <__fp_pscA>
    44c4:	38 f0       	brcs	.+14     	; 0x44d4 <__mulsf3+0x1c>
    44c6:	0e 94 16 22 	call	0x442c	; 0x442c <__fp_pscB>
    44ca:	20 f0       	brcs	.+8      	; 0x44d4 <__mulsf3+0x1c>
    44cc:	95 23       	and	r25, r21
    44ce:	11 f0       	breq	.+4      	; 0x44d4 <__mulsf3+0x1c>
    44d0:	0c 94 06 22 	jmp	0x440c	; 0x440c <__fp_inf>
    44d4:	0c 94 0c 22 	jmp	0x4418	; 0x4418 <__fp_nan>
    44d8:	11 24       	eor	r1, r1
    44da:	0c 94 51 22 	jmp	0x44a2	; 0x44a2 <__fp_szero>

000044de <__mulsf3x>:
    44de:	0e 94 2e 22 	call	0x445c	; 0x445c <__fp_split3>
    44e2:	70 f3       	brcs	.-36     	; 0x44c0 <__mulsf3+0x8>

000044e4 <__mulsf3_pse>:
    44e4:	95 9f       	mul	r25, r21
    44e6:	c1 f3       	breq	.-16     	; 0x44d8 <__mulsf3+0x20>
    44e8:	95 0f       	add	r25, r21
    44ea:	50 e0       	ldi	r21, 0x00	; 0
    44ec:	55 1f       	adc	r21, r21
    44ee:	62 9f       	mul	r22, r18
    44f0:	f0 01       	movw	r30, r0
    44f2:	72 9f       	mul	r23, r18
    44f4:	bb 27       	eor	r27, r27
    44f6:	f0 0d       	add	r31, r0
    44f8:	b1 1d       	adc	r27, r1
    44fa:	63 9f       	mul	r22, r19
    44fc:	aa 27       	eor	r26, r26
    44fe:	f0 0d       	add	r31, r0
    4500:	b1 1d       	adc	r27, r1
    4502:	aa 1f       	adc	r26, r26
    4504:	64 9f       	mul	r22, r20
    4506:	66 27       	eor	r22, r22
    4508:	b0 0d       	add	r27, r0
    450a:	a1 1d       	adc	r26, r1
    450c:	66 1f       	adc	r22, r22
    450e:	82 9f       	mul	r24, r18
    4510:	22 27       	eor	r18, r18
    4512:	b0 0d       	add	r27, r0
    4514:	a1 1d       	adc	r26, r1
    4516:	62 1f       	adc	r22, r18
    4518:	73 9f       	mul	r23, r19
    451a:	b0 0d       	add	r27, r0
    451c:	a1 1d       	adc	r26, r1
    451e:	62 1f       	adc	r22, r18
    4520:	83 9f       	mul	r24, r19
    4522:	a0 0d       	add	r26, r0
    4524:	61 1d       	adc	r22, r1
    4526:	22 1f       	adc	r18, r18
    4528:	74 9f       	mul	r23, r20
    452a:	33 27       	eor	r19, r19
    452c:	a0 0d       	add	r26, r0
    452e:	61 1d       	adc	r22, r1
    4530:	23 1f       	adc	r18, r19
    4532:	84 9f       	mul	r24, r20
    4534:	60 0d       	add	r22, r0
    4536:	21 1d       	adc	r18, r1
    4538:	82 2f       	mov	r24, r18
    453a:	76 2f       	mov	r23, r22
    453c:	6a 2f       	mov	r22, r26
    453e:	11 24       	eor	r1, r1
    4540:	9f 57       	subi	r25, 0x7F	; 127
    4542:	50 40       	sbci	r21, 0x00	; 0
    4544:	9a f0       	brmi	.+38     	; 0x456c <__mulsf3_pse+0x88>
    4546:	f1 f0       	breq	.+60     	; 0x4584 <__mulsf3_pse+0xa0>
    4548:	88 23       	and	r24, r24
    454a:	4a f0       	brmi	.+18     	; 0x455e <__mulsf3_pse+0x7a>
    454c:	ee 0f       	add	r30, r30
    454e:	ff 1f       	adc	r31, r31
    4550:	bb 1f       	adc	r27, r27
    4552:	66 1f       	adc	r22, r22
    4554:	77 1f       	adc	r23, r23
    4556:	88 1f       	adc	r24, r24
    4558:	91 50       	subi	r25, 0x01	; 1
    455a:	50 40       	sbci	r21, 0x00	; 0
    455c:	a9 f7       	brne	.-22     	; 0x4548 <__mulsf3_pse+0x64>
    455e:	9e 3f       	cpi	r25, 0xFE	; 254
    4560:	51 05       	cpc	r21, r1
    4562:	80 f0       	brcs	.+32     	; 0x4584 <__mulsf3_pse+0xa0>
    4564:	0c 94 06 22 	jmp	0x440c	; 0x440c <__fp_inf>
    4568:	0c 94 51 22 	jmp	0x44a2	; 0x44a2 <__fp_szero>
    456c:	5f 3f       	cpi	r21, 0xFF	; 255
    456e:	e4 f3       	brlt	.-8      	; 0x4568 <__mulsf3_pse+0x84>
    4570:	98 3e       	cpi	r25, 0xE8	; 232
    4572:	d4 f3       	brlt	.-12     	; 0x4568 <__mulsf3_pse+0x84>
    4574:	86 95       	lsr	r24
    4576:	77 95       	ror	r23
    4578:	67 95       	ror	r22
    457a:	b7 95       	ror	r27
    457c:	f7 95       	ror	r31
    457e:	e7 95       	ror	r30
    4580:	9f 5f       	subi	r25, 0xFF	; 255
    4582:	c1 f7       	brne	.-16     	; 0x4574 <__mulsf3_pse+0x90>
    4584:	fe 2b       	or	r31, r30
    4586:	88 0f       	add	r24, r24
    4588:	91 1d       	adc	r25, r1
    458a:	96 95       	lsr	r25
    458c:	87 95       	ror	r24
    458e:	97 f9       	bld	r25, 7
    4590:	08 95       	ret

00004592 <__unordsf2>:
    4592:	0e 94 e2 21 	call	0x43c4	; 0x43c4 <__fp_cmp>
    4596:	88 0b       	sbc	r24, r24
    4598:	99 0b       	sbc	r25, r25
    459a:	08 95       	ret

0000459c <__divmodhi4>:
    459c:	97 fb       	bst	r25, 7
    459e:	07 2e       	mov	r0, r23
    45a0:	16 f4       	brtc	.+4      	; 0x45a6 <__divmodhi4+0xa>
    45a2:	00 94       	com	r0
    45a4:	07 d0       	rcall	.+14     	; 0x45b4 <__divmodhi4_neg1>
    45a6:	77 fd       	sbrc	r23, 7
    45a8:	09 d0       	rcall	.+18     	; 0x45bc <__divmodhi4_neg2>
    45aa:	0e 94 ab 23 	call	0x4756	; 0x4756 <__udivmodhi4>
    45ae:	07 fc       	sbrc	r0, 7
    45b0:	05 d0       	rcall	.+10     	; 0x45bc <__divmodhi4_neg2>
    45b2:	3e f4       	brtc	.+14     	; 0x45c2 <__divmodhi4_exit>

000045b4 <__divmodhi4_neg1>:
    45b4:	90 95       	com	r25
    45b6:	81 95       	neg	r24
    45b8:	9f 4f       	sbci	r25, 0xFF	; 255
    45ba:	08 95       	ret

000045bc <__divmodhi4_neg2>:
    45bc:	70 95       	com	r23
    45be:	61 95       	neg	r22
    45c0:	7f 4f       	sbci	r23, 0xFF	; 255

000045c2 <__divmodhi4_exit>:
    45c2:	08 95       	ret

000045c4 <__udivmodsi4>:
    45c4:	a1 e2       	ldi	r26, 0x21	; 33
    45c6:	1a 2e       	mov	r1, r26
    45c8:	aa 1b       	sub	r26, r26
    45ca:	bb 1b       	sub	r27, r27
    45cc:	fd 01       	movw	r30, r26
    45ce:	0d c0       	rjmp	.+26     	; 0x45ea <__udivmodsi4_ep>

000045d0 <__udivmodsi4_loop>:
    45d0:	aa 1f       	adc	r26, r26
    45d2:	bb 1f       	adc	r27, r27
    45d4:	ee 1f       	adc	r30, r30
    45d6:	ff 1f       	adc	r31, r31
    45d8:	a2 17       	cp	r26, r18
    45da:	b3 07       	cpc	r27, r19
    45dc:	e4 07       	cpc	r30, r20
    45de:	f5 07       	cpc	r31, r21
    45e0:	20 f0       	brcs	.+8      	; 0x45ea <__udivmodsi4_ep>
    45e2:	a2 1b       	sub	r26, r18
    45e4:	b3 0b       	sbc	r27, r19
    45e6:	e4 0b       	sbc	r30, r20
    45e8:	f5 0b       	sbc	r31, r21

000045ea <__udivmodsi4_ep>:
    45ea:	66 1f       	adc	r22, r22
    45ec:	77 1f       	adc	r23, r23
    45ee:	88 1f       	adc	r24, r24
    45f0:	99 1f       	adc	r25, r25
    45f2:	1a 94       	dec	r1
    45f4:	69 f7       	brne	.-38     	; 0x45d0 <__udivmodsi4_loop>
    45f6:	60 95       	com	r22
    45f8:	70 95       	com	r23
    45fa:	80 95       	com	r24
    45fc:	90 95       	com	r25
    45fe:	9b 01       	movw	r18, r22
    4600:	ac 01       	movw	r20, r24
    4602:	bd 01       	movw	r22, r26
    4604:	cf 01       	movw	r24, r30
    4606:	08 95       	ret

00004608 <__tablejump2__>:
    4608:	ee 0f       	add	r30, r30
    460a:	ff 1f       	adc	r31, r31
    460c:	05 90       	lpm	r0, Z+
    460e:	f4 91       	lpm	r31, Z
    4610:	e0 2d       	mov	r30, r0
    4612:	09 94       	ijmp

00004614 <__muluhisi3>:
    4614:	0e 94 bf 23 	call	0x477e	; 0x477e <__umulhisi3>
    4618:	a5 9f       	mul	r26, r21
    461a:	90 0d       	add	r25, r0
    461c:	b4 9f       	mul	r27, r20
    461e:	90 0d       	add	r25, r0
    4620:	a4 9f       	mul	r26, r20
    4622:	80 0d       	add	r24, r0
    4624:	91 1d       	adc	r25, r1
    4626:	11 24       	eor	r1, r1
    4628:	08 95       	ret

0000462a <__umoddi3>:
    462a:	68 94       	set
    462c:	01 c0       	rjmp	.+2      	; 0x4630 <__udivdi3_umoddi3>

0000462e <__udivdi3>:
    462e:	e8 94       	clt

00004630 <__udivdi3_umoddi3>:
    4630:	8f 92       	push	r8
    4632:	9f 92       	push	r9
    4634:	cf 93       	push	r28
    4636:	df 93       	push	r29
    4638:	0e 94 23 23 	call	0x4646	; 0x4646 <__udivmod64>
    463c:	df 91       	pop	r29
    463e:	cf 91       	pop	r28
    4640:	9f 90       	pop	r9
    4642:	8f 90       	pop	r8
    4644:	08 95       	ret

00004646 <__udivmod64>:
    4646:	88 24       	eor	r8, r8
    4648:	99 24       	eor	r9, r9
    464a:	f4 01       	movw	r30, r8
    464c:	e4 01       	movw	r28, r8
    464e:	b0 e4       	ldi	r27, 0x40	; 64
    4650:	9f 93       	push	r25
    4652:	aa 27       	eor	r26, r26
    4654:	9a 15       	cp	r25, r10
    4656:	8b 04       	cpc	r8, r11
    4658:	9c 04       	cpc	r9, r12
    465a:	ed 05       	cpc	r30, r13
    465c:	fe 05       	cpc	r31, r14
    465e:	cf 05       	cpc	r28, r15
    4660:	d0 07       	cpc	r29, r16
    4662:	a1 07       	cpc	r26, r17
    4664:	98 f4       	brcc	.+38     	; 0x468c <__udivmod64+0x46>
    4666:	ad 2f       	mov	r26, r29
    4668:	dc 2f       	mov	r29, r28
    466a:	cf 2f       	mov	r28, r31
    466c:	fe 2f       	mov	r31, r30
    466e:	e9 2d       	mov	r30, r9
    4670:	98 2c       	mov	r9, r8
    4672:	89 2e       	mov	r8, r25
    4674:	98 2f       	mov	r25, r24
    4676:	87 2f       	mov	r24, r23
    4678:	76 2f       	mov	r23, r22
    467a:	65 2f       	mov	r22, r21
    467c:	54 2f       	mov	r21, r20
    467e:	43 2f       	mov	r20, r19
    4680:	32 2f       	mov	r19, r18
    4682:	22 27       	eor	r18, r18
    4684:	b8 50       	subi	r27, 0x08	; 8
    4686:	31 f7       	brne	.-52     	; 0x4654 <__udivmod64+0xe>
    4688:	bf 91       	pop	r27
    468a:	27 c0       	rjmp	.+78     	; 0x46da <__udivmod64+0x94>
    468c:	1b 2e       	mov	r1, r27
    468e:	bf 91       	pop	r27
    4690:	bb 27       	eor	r27, r27
    4692:	22 0f       	add	r18, r18
    4694:	33 1f       	adc	r19, r19
    4696:	44 1f       	adc	r20, r20
    4698:	55 1f       	adc	r21, r21
    469a:	66 1f       	adc	r22, r22
    469c:	77 1f       	adc	r23, r23
    469e:	88 1f       	adc	r24, r24
    46a0:	99 1f       	adc	r25, r25
    46a2:	88 1c       	adc	r8, r8
    46a4:	99 1c       	adc	r9, r9
    46a6:	ee 1f       	adc	r30, r30
    46a8:	ff 1f       	adc	r31, r31
    46aa:	cc 1f       	adc	r28, r28
    46ac:	dd 1f       	adc	r29, r29
    46ae:	aa 1f       	adc	r26, r26
    46b0:	bb 1f       	adc	r27, r27
    46b2:	8a 14       	cp	r8, r10
    46b4:	9b 04       	cpc	r9, r11
    46b6:	ec 05       	cpc	r30, r12
    46b8:	fd 05       	cpc	r31, r13
    46ba:	ce 05       	cpc	r28, r14
    46bc:	df 05       	cpc	r29, r15
    46be:	a0 07       	cpc	r26, r16
    46c0:	b1 07       	cpc	r27, r17
    46c2:	48 f0       	brcs	.+18     	; 0x46d6 <__udivmod64+0x90>
    46c4:	8a 18       	sub	r8, r10
    46c6:	9b 08       	sbc	r9, r11
    46c8:	ec 09       	sbc	r30, r12
    46ca:	fd 09       	sbc	r31, r13
    46cc:	ce 09       	sbc	r28, r14
    46ce:	df 09       	sbc	r29, r15
    46d0:	a0 0b       	sbc	r26, r16
    46d2:	b1 0b       	sbc	r27, r17
    46d4:	21 60       	ori	r18, 0x01	; 1
    46d6:	1a 94       	dec	r1
    46d8:	e1 f6       	brne	.-72     	; 0x4692 <__udivmod64+0x4c>
    46da:	2e f4       	brtc	.+10     	; 0x46e6 <__udivmod64+0xa0>
    46dc:	94 01       	movw	r18, r8
    46de:	af 01       	movw	r20, r30
    46e0:	be 01       	movw	r22, r28
    46e2:	cd 01       	movw	r24, r26
    46e4:	00 0c       	add	r0, r0
    46e6:	08 95       	ret

000046e8 <__ashldi3>:
    46e8:	0f 93       	push	r16
    46ea:	08 30       	cpi	r16, 0x08	; 8
    46ec:	90 f0       	brcs	.+36     	; 0x4712 <__ashldi3+0x2a>
    46ee:	98 2f       	mov	r25, r24
    46f0:	87 2f       	mov	r24, r23
    46f2:	76 2f       	mov	r23, r22
    46f4:	65 2f       	mov	r22, r21
    46f6:	54 2f       	mov	r21, r20
    46f8:	43 2f       	mov	r20, r19
    46fa:	32 2f       	mov	r19, r18
    46fc:	22 27       	eor	r18, r18
    46fe:	08 50       	subi	r16, 0x08	; 8
    4700:	f4 cf       	rjmp	.-24     	; 0x46ea <__ashldi3+0x2>
    4702:	22 0f       	add	r18, r18
    4704:	33 1f       	adc	r19, r19
    4706:	44 1f       	adc	r20, r20
    4708:	55 1f       	adc	r21, r21
    470a:	66 1f       	adc	r22, r22
    470c:	77 1f       	adc	r23, r23
    470e:	88 1f       	adc	r24, r24
    4710:	99 1f       	adc	r25, r25
    4712:	0a 95       	dec	r16
    4714:	b2 f7       	brpl	.-20     	; 0x4702 <__ashldi3+0x1a>
    4716:	0f 91       	pop	r16
    4718:	08 95       	ret

0000471a <__ashrdi3>:
    471a:	97 fb       	bst	r25, 7
    471c:	10 f8       	bld	r1, 0

0000471e <__lshrdi3>:
    471e:	16 94       	lsr	r1
    4720:	00 08       	sbc	r0, r0
    4722:	0f 93       	push	r16
    4724:	08 30       	cpi	r16, 0x08	; 8
    4726:	98 f0       	brcs	.+38     	; 0x474e <__lshrdi3+0x30>
    4728:	08 50       	subi	r16, 0x08	; 8
    472a:	23 2f       	mov	r18, r19
    472c:	34 2f       	mov	r19, r20
    472e:	45 2f       	mov	r20, r21
    4730:	56 2f       	mov	r21, r22
    4732:	67 2f       	mov	r22, r23
    4734:	78 2f       	mov	r23, r24
    4736:	89 2f       	mov	r24, r25
    4738:	90 2d       	mov	r25, r0
    473a:	f4 cf       	rjmp	.-24     	; 0x4724 <__lshrdi3+0x6>
    473c:	05 94       	asr	r0
    473e:	97 95       	ror	r25
    4740:	87 95       	ror	r24
    4742:	77 95       	ror	r23
    4744:	67 95       	ror	r22
    4746:	57 95       	ror	r21
    4748:	47 95       	ror	r20
    474a:	37 95       	ror	r19
    474c:	27 95       	ror	r18
    474e:	0a 95       	dec	r16
    4750:	aa f7       	brpl	.-22     	; 0x473c <__lshrdi3+0x1e>
    4752:	0f 91       	pop	r16
    4754:	08 95       	ret

00004756 <__udivmodhi4>:
    4756:	aa 1b       	sub	r26, r26
    4758:	bb 1b       	sub	r27, r27
    475a:	51 e1       	ldi	r21, 0x11	; 17
    475c:	07 c0       	rjmp	.+14     	; 0x476c <__udivmodhi4_ep>

0000475e <__udivmodhi4_loop>:
    475e:	aa 1f       	adc	r26, r26
    4760:	bb 1f       	adc	r27, r27
    4762:	a6 17       	cp	r26, r22
    4764:	b7 07       	cpc	r27, r23
    4766:	10 f0       	brcs	.+4      	; 0x476c <__udivmodhi4_ep>
    4768:	a6 1b       	sub	r26, r22
    476a:	b7 0b       	sbc	r27, r23

0000476c <__udivmodhi4_ep>:
    476c:	88 1f       	adc	r24, r24
    476e:	99 1f       	adc	r25, r25
    4770:	5a 95       	dec	r21
    4772:	a9 f7       	brne	.-22     	; 0x475e <__udivmodhi4_loop>
    4774:	80 95       	com	r24
    4776:	90 95       	com	r25
    4778:	bc 01       	movw	r22, r24
    477a:	cd 01       	movw	r24, r26
    477c:	08 95       	ret

0000477e <__umulhisi3>:
    477e:	a2 9f       	mul	r26, r18
    4780:	b0 01       	movw	r22, r0
    4782:	b3 9f       	mul	r27, r19
    4784:	c0 01       	movw	r24, r0
    4786:	a3 9f       	mul	r26, r19
    4788:	70 0d       	add	r23, r0
    478a:	81 1d       	adc	r24, r1
    478c:	11 24       	eor	r1, r1
    478e:	91 1d       	adc	r25, r1
    4790:	b2 9f       	mul	r27, r18
    4792:	70 0d       	add	r23, r0
    4794:	81 1d       	adc	r24, r1
    4796:	11 24       	eor	r1, r1
    4798:	91 1d       	adc	r25, r1
    479a:	08 95       	ret

0000479c <atof>:
    479c:	66 27       	eor	r22, r22
    479e:	77 27       	eor	r23, r23
    47a0:	0c 94 13 29 	jmp	0x5226	; 0x5226 <strtod>

000047a4 <strtok>:
    47a4:	46 ed       	ldi	r20, 0xD6	; 214
    47a6:	52 e0       	ldi	r21, 0x02	; 2
    47a8:	0e 94 0d 24 	call	0x481a	; 0x481a <strtok_r>
    47ac:	08 95       	ret

000047ae <memcmp>:
    47ae:	fb 01       	movw	r30, r22
    47b0:	dc 01       	movw	r26, r24
    47b2:	04 c0       	rjmp	.+8      	; 0x47bc <memcmp+0xe>
    47b4:	8d 91       	ld	r24, X+
    47b6:	01 90       	ld	r0, Z+
    47b8:	80 19       	sub	r24, r0
    47ba:	21 f4       	brne	.+8      	; 0x47c4 <memcmp+0x16>
    47bc:	41 50       	subi	r20, 0x01	; 1
    47be:	50 40       	sbci	r21, 0x00	; 0
    47c0:	c8 f7       	brcc	.-14     	; 0x47b4 <memcmp+0x6>
    47c2:	88 1b       	sub	r24, r24
    47c4:	99 0b       	sbc	r25, r25
    47c6:	08 95       	ret

000047c8 <memcpy>:
    47c8:	fb 01       	movw	r30, r22
    47ca:	dc 01       	movw	r26, r24
    47cc:	02 c0       	rjmp	.+4      	; 0x47d2 <memcpy+0xa>
    47ce:	01 90       	ld	r0, Z+
    47d0:	0d 92       	st	X+, r0
    47d2:	41 50       	subi	r20, 0x01	; 1
    47d4:	50 40       	sbci	r21, 0x00	; 0
    47d6:	d8 f7       	brcc	.-10     	; 0x47ce <memcpy+0x6>
    47d8:	08 95       	ret

000047da <memset>:
    47da:	dc 01       	movw	r26, r24
    47dc:	01 c0       	rjmp	.+2      	; 0x47e0 <memset+0x6>
    47de:	6d 93       	st	X+, r22
    47e0:	41 50       	subi	r20, 0x01	; 1
    47e2:	50 40       	sbci	r21, 0x00	; 0
    47e4:	e0 f7       	brcc	.-8      	; 0x47de <memset+0x4>
    47e6:	08 95       	ret

000047e8 <strchr>:
    47e8:	fc 01       	movw	r30, r24
    47ea:	81 91       	ld	r24, Z+
    47ec:	86 17       	cp	r24, r22
    47ee:	21 f0       	breq	.+8      	; 0x47f8 <strchr+0x10>
    47f0:	88 23       	and	r24, r24
    47f2:	d9 f7       	brne	.-10     	; 0x47ea <strchr+0x2>
    47f4:	99 27       	eor	r25, r25
    47f6:	08 95       	ret
    47f8:	31 97       	sbiw	r30, 0x01	; 1
    47fa:	cf 01       	movw	r24, r30
    47fc:	08 95       	ret

000047fe <strncmp>:
    47fe:	fb 01       	movw	r30, r22
    4800:	dc 01       	movw	r26, r24
    4802:	41 50       	subi	r20, 0x01	; 1
    4804:	50 40       	sbci	r21, 0x00	; 0
    4806:	30 f0       	brcs	.+12     	; 0x4814 <strncmp+0x16>
    4808:	8d 91       	ld	r24, X+
    480a:	01 90       	ld	r0, Z+
    480c:	80 19       	sub	r24, r0
    480e:	19 f4       	brne	.+6      	; 0x4816 <strncmp+0x18>
    4810:	00 20       	and	r0, r0
    4812:	b9 f7       	brne	.-18     	; 0x4802 <strncmp+0x4>
    4814:	88 1b       	sub	r24, r24
    4816:	99 0b       	sbc	r25, r25
    4818:	08 95       	ret

0000481a <strtok_r>:
    481a:	fa 01       	movw	r30, r20
    481c:	a1 91       	ld	r26, Z+
    481e:	b0 81       	ld	r27, Z
    4820:	00 97       	sbiw	r24, 0x00	; 0
    4822:	19 f4       	brne	.+6      	; 0x482a <strtok_r+0x10>
    4824:	10 97       	sbiw	r26, 0x00	; 0
    4826:	e1 f0       	breq	.+56     	; 0x4860 <strtok_r+0x46>
    4828:	cd 01       	movw	r24, r26
    482a:	dc 01       	movw	r26, r24
    482c:	cd 01       	movw	r24, r26
    482e:	0d 90       	ld	r0, X+
    4830:	00 20       	and	r0, r0
    4832:	11 f4       	brne	.+4      	; 0x4838 <strtok_r+0x1e>
    4834:	c0 01       	movw	r24, r0
    4836:	13 c0       	rjmp	.+38     	; 0x485e <strtok_r+0x44>
    4838:	fb 01       	movw	r30, r22
    483a:	21 91       	ld	r18, Z+
    483c:	22 23       	and	r18, r18
    483e:	19 f0       	breq	.+6      	; 0x4846 <strtok_r+0x2c>
    4840:	20 15       	cp	r18, r0
    4842:	d9 f7       	brne	.-10     	; 0x483a <strtok_r+0x20>
    4844:	f3 cf       	rjmp	.-26     	; 0x482c <strtok_r+0x12>
    4846:	fb 01       	movw	r30, r22
    4848:	21 91       	ld	r18, Z+
    484a:	20 15       	cp	r18, r0
    484c:	19 f4       	brne	.+6      	; 0x4854 <strtok_r+0x3a>
    484e:	1e 92       	st	-X, r1
    4850:	11 96       	adiw	r26, 0x01	; 1
    4852:	06 c0       	rjmp	.+12     	; 0x4860 <strtok_r+0x46>
    4854:	22 23       	and	r18, r18
    4856:	c1 f7       	brne	.-16     	; 0x4848 <strtok_r+0x2e>
    4858:	0d 90       	ld	r0, X+
    485a:	00 20       	and	r0, r0
    485c:	a1 f7       	brne	.-24     	; 0x4846 <strtok_r+0x2c>
    485e:	d0 01       	movw	r26, r0
    4860:	fa 01       	movw	r30, r20
    4862:	a1 93       	st	Z+, r26
    4864:	b0 83       	st	Z, r27
    4866:	08 95       	ret

00004868 <printf>:
    4868:	a0 e0       	ldi	r26, 0x00	; 0
    486a:	b0 e0       	ldi	r27, 0x00	; 0
    486c:	ea e3       	ldi	r30, 0x3A	; 58
    486e:	f4 e2       	ldi	r31, 0x24	; 36
    4870:	0c 94 a7 2b 	jmp	0x574e	; 0x574e <__prologue_saves__+0x20>
    4874:	ae 01       	movw	r20, r28
    4876:	4b 5f       	subi	r20, 0xFB	; 251
    4878:	5f 4f       	sbci	r21, 0xFF	; 255
    487a:	fa 01       	movw	r30, r20
    487c:	61 91       	ld	r22, Z+
    487e:	71 91       	ld	r23, Z+
    4880:	af 01       	movw	r20, r30
    4882:	80 91 31 07 	lds	r24, 0x0731	; 0x800731 <__iob+0x2>
    4886:	90 91 32 07 	lds	r25, 0x0732	; 0x800732 <__iob+0x3>
    488a:	0e 94 85 24 	call	0x490a	; 0x490a <vfprintf>
    488e:	e2 e0       	ldi	r30, 0x02	; 2
    4890:	0c 94 c3 2b 	jmp	0x5786	; 0x5786 <__epilogue_restores__+0x20>

00004894 <sprintf>:
    4894:	ae e0       	ldi	r26, 0x0E	; 14
    4896:	b0 e0       	ldi	r27, 0x00	; 0
    4898:	e0 e5       	ldi	r30, 0x50	; 80
    489a:	f4 e2       	ldi	r31, 0x24	; 36
    489c:	0c 94 a5 2b 	jmp	0x574a	; 0x574a <__prologue_saves__+0x1c>
    48a0:	0d 89       	ldd	r16, Y+21	; 0x15
    48a2:	1e 89       	ldd	r17, Y+22	; 0x16
    48a4:	86 e0       	ldi	r24, 0x06	; 6
    48a6:	8c 83       	std	Y+4, r24	; 0x04
    48a8:	1a 83       	std	Y+2, r17	; 0x02
    48aa:	09 83       	std	Y+1, r16	; 0x01
    48ac:	8f ef       	ldi	r24, 0xFF	; 255
    48ae:	9f e7       	ldi	r25, 0x7F	; 127
    48b0:	9e 83       	std	Y+6, r25	; 0x06
    48b2:	8d 83       	std	Y+5, r24	; 0x05
    48b4:	ae 01       	movw	r20, r28
    48b6:	47 5e       	subi	r20, 0xE7	; 231
    48b8:	5f 4f       	sbci	r21, 0xFF	; 255
    48ba:	6f 89       	ldd	r22, Y+23	; 0x17
    48bc:	78 8d       	ldd	r23, Y+24	; 0x18
    48be:	ce 01       	movw	r24, r28
    48c0:	01 96       	adiw	r24, 0x01	; 1
    48c2:	0e 94 85 24 	call	0x490a	; 0x490a <vfprintf>
    48c6:	ef 81       	ldd	r30, Y+7	; 0x07
    48c8:	f8 85       	ldd	r31, Y+8	; 0x08
    48ca:	e0 0f       	add	r30, r16
    48cc:	f1 1f       	adc	r31, r17
    48ce:	10 82       	st	Z, r1
    48d0:	2e 96       	adiw	r28, 0x0e	; 14
    48d2:	e4 e0       	ldi	r30, 0x04	; 4
    48d4:	0c 94 c1 2b 	jmp	0x5782	; 0x5782 <__epilogue_restores__+0x1c>

000048d8 <sscanf>:
    48d8:	ae e0       	ldi	r26, 0x0E	; 14
    48da:	b0 e0       	ldi	r27, 0x00	; 0
    48dc:	e2 e7       	ldi	r30, 0x72	; 114
    48de:	f4 e2       	ldi	r31, 0x24	; 36
    48e0:	0c 94 a7 2b 	jmp	0x574e	; 0x574e <__prologue_saves__+0x20>
    48e4:	85 e0       	ldi	r24, 0x05	; 5
    48e6:	8c 83       	std	Y+4, r24	; 0x04
    48e8:	8b 89       	ldd	r24, Y+19	; 0x13
    48ea:	9c 89       	ldd	r25, Y+20	; 0x14
    48ec:	9a 83       	std	Y+2, r25	; 0x02
    48ee:	89 83       	std	Y+1, r24	; 0x01
    48f0:	ae 01       	movw	r20, r28
    48f2:	49 5e       	subi	r20, 0xE9	; 233
    48f4:	5f 4f       	sbci	r21, 0xFF	; 255
    48f6:	6d 89       	ldd	r22, Y+21	; 0x15
    48f8:	7e 89       	ldd	r23, Y+22	; 0x16
    48fa:	ce 01       	movw	r24, r28
    48fc:	01 96       	adiw	r24, 0x01	; 1
    48fe:	0e 94 02 28 	call	0x5004	; 0x5004 <vfscanf>
    4902:	2e 96       	adiw	r28, 0x0e	; 14
    4904:	e2 e0       	ldi	r30, 0x02	; 2
    4906:	0c 94 c3 2b 	jmp	0x5786	; 0x5786 <__epilogue_restores__+0x20>

0000490a <vfprintf>:
    490a:	ab e0       	ldi	r26, 0x0B	; 11
    490c:	b0 e0       	ldi	r27, 0x00	; 0
    490e:	eb e8       	ldi	r30, 0x8B	; 139
    4910:	f4 e2       	ldi	r31, 0x24	; 36
    4912:	0c 94 97 2b 	jmp	0x572e	; 0x572e <__prologue_saves__>
    4916:	6c 01       	movw	r12, r24
    4918:	7b 01       	movw	r14, r22
    491a:	8a 01       	movw	r16, r20
    491c:	fc 01       	movw	r30, r24
    491e:	17 82       	std	Z+7, r1	; 0x07
    4920:	16 82       	std	Z+6, r1	; 0x06
    4922:	83 81       	ldd	r24, Z+3	; 0x03
    4924:	81 ff       	sbrs	r24, 1
    4926:	cc c1       	rjmp	.+920    	; 0x4cc0 <vfprintf+0x3b6>
    4928:	ce 01       	movw	r24, r28
    492a:	01 96       	adiw	r24, 0x01	; 1
    492c:	3c 01       	movw	r6, r24
    492e:	f6 01       	movw	r30, r12
    4930:	93 81       	ldd	r25, Z+3	; 0x03
    4932:	f7 01       	movw	r30, r14
    4934:	93 fd       	sbrc	r25, 3
    4936:	85 91       	lpm	r24, Z+
    4938:	93 ff       	sbrs	r25, 3
    493a:	81 91       	ld	r24, Z+
    493c:	7f 01       	movw	r14, r30
    493e:	88 23       	and	r24, r24
    4940:	09 f4       	brne	.+2      	; 0x4944 <vfprintf+0x3a>
    4942:	ba c1       	rjmp	.+884    	; 0x4cb8 <vfprintf+0x3ae>
    4944:	85 32       	cpi	r24, 0x25	; 37
    4946:	39 f4       	brne	.+14     	; 0x4956 <vfprintf+0x4c>
    4948:	93 fd       	sbrc	r25, 3
    494a:	85 91       	lpm	r24, Z+
    494c:	93 ff       	sbrs	r25, 3
    494e:	81 91       	ld	r24, Z+
    4950:	7f 01       	movw	r14, r30
    4952:	85 32       	cpi	r24, 0x25	; 37
    4954:	29 f4       	brne	.+10     	; 0x4960 <vfprintf+0x56>
    4956:	b6 01       	movw	r22, r12
    4958:	90 e0       	ldi	r25, 0x00	; 0
    495a:	0e 94 e1 2a 	call	0x55c2	; 0x55c2 <fputc>
    495e:	e7 cf       	rjmp	.-50     	; 0x492e <vfprintf+0x24>
    4960:	91 2c       	mov	r9, r1
    4962:	21 2c       	mov	r2, r1
    4964:	31 2c       	mov	r3, r1
    4966:	ff e1       	ldi	r31, 0x1F	; 31
    4968:	f3 15       	cp	r31, r3
    496a:	d8 f0       	brcs	.+54     	; 0x49a2 <vfprintf+0x98>
    496c:	8b 32       	cpi	r24, 0x2B	; 43
    496e:	79 f0       	breq	.+30     	; 0x498e <vfprintf+0x84>
    4970:	38 f4       	brcc	.+14     	; 0x4980 <vfprintf+0x76>
    4972:	80 32       	cpi	r24, 0x20	; 32
    4974:	79 f0       	breq	.+30     	; 0x4994 <vfprintf+0x8a>
    4976:	83 32       	cpi	r24, 0x23	; 35
    4978:	a1 f4       	brne	.+40     	; 0x49a2 <vfprintf+0x98>
    497a:	23 2d       	mov	r18, r3
    497c:	20 61       	ori	r18, 0x10	; 16
    497e:	1d c0       	rjmp	.+58     	; 0x49ba <vfprintf+0xb0>
    4980:	8d 32       	cpi	r24, 0x2D	; 45
    4982:	61 f0       	breq	.+24     	; 0x499c <vfprintf+0x92>
    4984:	80 33       	cpi	r24, 0x30	; 48
    4986:	69 f4       	brne	.+26     	; 0x49a2 <vfprintf+0x98>
    4988:	23 2d       	mov	r18, r3
    498a:	21 60       	ori	r18, 0x01	; 1
    498c:	16 c0       	rjmp	.+44     	; 0x49ba <vfprintf+0xb0>
    498e:	83 2d       	mov	r24, r3
    4990:	82 60       	ori	r24, 0x02	; 2
    4992:	38 2e       	mov	r3, r24
    4994:	e3 2d       	mov	r30, r3
    4996:	e4 60       	ori	r30, 0x04	; 4
    4998:	3e 2e       	mov	r3, r30
    499a:	2a c0       	rjmp	.+84     	; 0x49f0 <vfprintf+0xe6>
    499c:	f3 2d       	mov	r31, r3
    499e:	f8 60       	ori	r31, 0x08	; 8
    49a0:	1d c0       	rjmp	.+58     	; 0x49dc <vfprintf+0xd2>
    49a2:	37 fc       	sbrc	r3, 7
    49a4:	2d c0       	rjmp	.+90     	; 0x4a00 <vfprintf+0xf6>
    49a6:	20 ed       	ldi	r18, 0xD0	; 208
    49a8:	28 0f       	add	r18, r24
    49aa:	2a 30       	cpi	r18, 0x0A	; 10
    49ac:	40 f0       	brcs	.+16     	; 0x49be <vfprintf+0xb4>
    49ae:	8e 32       	cpi	r24, 0x2E	; 46
    49b0:	b9 f4       	brne	.+46     	; 0x49e0 <vfprintf+0xd6>
    49b2:	36 fc       	sbrc	r3, 6
    49b4:	81 c1       	rjmp	.+770    	; 0x4cb8 <vfprintf+0x3ae>
    49b6:	23 2d       	mov	r18, r3
    49b8:	20 64       	ori	r18, 0x40	; 64
    49ba:	32 2e       	mov	r3, r18
    49bc:	19 c0       	rjmp	.+50     	; 0x49f0 <vfprintf+0xe6>
    49be:	36 fe       	sbrs	r3, 6
    49c0:	06 c0       	rjmp	.+12     	; 0x49ce <vfprintf+0xc4>
    49c2:	8a e0       	ldi	r24, 0x0A	; 10
    49c4:	98 9e       	mul	r9, r24
    49c6:	20 0d       	add	r18, r0
    49c8:	11 24       	eor	r1, r1
    49ca:	92 2e       	mov	r9, r18
    49cc:	11 c0       	rjmp	.+34     	; 0x49f0 <vfprintf+0xe6>
    49ce:	ea e0       	ldi	r30, 0x0A	; 10
    49d0:	2e 9e       	mul	r2, r30
    49d2:	20 0d       	add	r18, r0
    49d4:	11 24       	eor	r1, r1
    49d6:	22 2e       	mov	r2, r18
    49d8:	f3 2d       	mov	r31, r3
    49da:	f0 62       	ori	r31, 0x20	; 32
    49dc:	3f 2e       	mov	r3, r31
    49de:	08 c0       	rjmp	.+16     	; 0x49f0 <vfprintf+0xe6>
    49e0:	8c 36       	cpi	r24, 0x6C	; 108
    49e2:	21 f4       	brne	.+8      	; 0x49ec <vfprintf+0xe2>
    49e4:	83 2d       	mov	r24, r3
    49e6:	80 68       	ori	r24, 0x80	; 128
    49e8:	38 2e       	mov	r3, r24
    49ea:	02 c0       	rjmp	.+4      	; 0x49f0 <vfprintf+0xe6>
    49ec:	88 36       	cpi	r24, 0x68	; 104
    49ee:	41 f4       	brne	.+16     	; 0x4a00 <vfprintf+0xf6>
    49f0:	f7 01       	movw	r30, r14
    49f2:	93 fd       	sbrc	r25, 3
    49f4:	85 91       	lpm	r24, Z+
    49f6:	93 ff       	sbrs	r25, 3
    49f8:	81 91       	ld	r24, Z+
    49fa:	7f 01       	movw	r14, r30
    49fc:	81 11       	cpse	r24, r1
    49fe:	b3 cf       	rjmp	.-154    	; 0x4966 <vfprintf+0x5c>
    4a00:	98 2f       	mov	r25, r24
    4a02:	9f 7d       	andi	r25, 0xDF	; 223
    4a04:	95 54       	subi	r25, 0x45	; 69
    4a06:	93 30       	cpi	r25, 0x03	; 3
    4a08:	28 f4       	brcc	.+10     	; 0x4a14 <vfprintf+0x10a>
    4a0a:	0c 5f       	subi	r16, 0xFC	; 252
    4a0c:	1f 4f       	sbci	r17, 0xFF	; 255
    4a0e:	9f e3       	ldi	r25, 0x3F	; 63
    4a10:	99 83       	std	Y+1, r25	; 0x01
    4a12:	0d c0       	rjmp	.+26     	; 0x4a2e <vfprintf+0x124>
    4a14:	83 36       	cpi	r24, 0x63	; 99
    4a16:	31 f0       	breq	.+12     	; 0x4a24 <vfprintf+0x11a>
    4a18:	83 37       	cpi	r24, 0x73	; 115
    4a1a:	71 f0       	breq	.+28     	; 0x4a38 <vfprintf+0x12e>
    4a1c:	83 35       	cpi	r24, 0x53	; 83
    4a1e:	09 f0       	breq	.+2      	; 0x4a22 <vfprintf+0x118>
    4a20:	59 c0       	rjmp	.+178    	; 0x4ad4 <vfprintf+0x1ca>
    4a22:	21 c0       	rjmp	.+66     	; 0x4a66 <vfprintf+0x15c>
    4a24:	f8 01       	movw	r30, r16
    4a26:	80 81       	ld	r24, Z
    4a28:	89 83       	std	Y+1, r24	; 0x01
    4a2a:	0e 5f       	subi	r16, 0xFE	; 254
    4a2c:	1f 4f       	sbci	r17, 0xFF	; 255
    4a2e:	88 24       	eor	r8, r8
    4a30:	83 94       	inc	r8
    4a32:	91 2c       	mov	r9, r1
    4a34:	53 01       	movw	r10, r6
    4a36:	13 c0       	rjmp	.+38     	; 0x4a5e <vfprintf+0x154>
    4a38:	28 01       	movw	r4, r16
    4a3a:	f2 e0       	ldi	r31, 0x02	; 2
    4a3c:	4f 0e       	add	r4, r31
    4a3e:	51 1c       	adc	r5, r1
    4a40:	f8 01       	movw	r30, r16
    4a42:	a0 80       	ld	r10, Z
    4a44:	b1 80       	ldd	r11, Z+1	; 0x01
    4a46:	36 fe       	sbrs	r3, 6
    4a48:	03 c0       	rjmp	.+6      	; 0x4a50 <vfprintf+0x146>
    4a4a:	69 2d       	mov	r22, r9
    4a4c:	70 e0       	ldi	r23, 0x00	; 0
    4a4e:	02 c0       	rjmp	.+4      	; 0x4a54 <vfprintf+0x14a>
    4a50:	6f ef       	ldi	r22, 0xFF	; 255
    4a52:	7f ef       	ldi	r23, 0xFF	; 255
    4a54:	c5 01       	movw	r24, r10
    4a56:	0e 94 98 2a 	call	0x5530	; 0x5530 <strnlen>
    4a5a:	4c 01       	movw	r8, r24
    4a5c:	82 01       	movw	r16, r4
    4a5e:	f3 2d       	mov	r31, r3
    4a60:	ff 77       	andi	r31, 0x7F	; 127
    4a62:	3f 2e       	mov	r3, r31
    4a64:	16 c0       	rjmp	.+44     	; 0x4a92 <vfprintf+0x188>
    4a66:	28 01       	movw	r4, r16
    4a68:	22 e0       	ldi	r18, 0x02	; 2
    4a6a:	42 0e       	add	r4, r18
    4a6c:	51 1c       	adc	r5, r1
    4a6e:	f8 01       	movw	r30, r16
    4a70:	a0 80       	ld	r10, Z
    4a72:	b1 80       	ldd	r11, Z+1	; 0x01
    4a74:	36 fe       	sbrs	r3, 6
    4a76:	03 c0       	rjmp	.+6      	; 0x4a7e <vfprintf+0x174>
    4a78:	69 2d       	mov	r22, r9
    4a7a:	70 e0       	ldi	r23, 0x00	; 0
    4a7c:	02 c0       	rjmp	.+4      	; 0x4a82 <vfprintf+0x178>
    4a7e:	6f ef       	ldi	r22, 0xFF	; 255
    4a80:	7f ef       	ldi	r23, 0xFF	; 255
    4a82:	c5 01       	movw	r24, r10
    4a84:	0e 94 8d 2a 	call	0x551a	; 0x551a <strnlen_P>
    4a88:	4c 01       	movw	r8, r24
    4a8a:	f3 2d       	mov	r31, r3
    4a8c:	f0 68       	ori	r31, 0x80	; 128
    4a8e:	3f 2e       	mov	r3, r31
    4a90:	82 01       	movw	r16, r4
    4a92:	33 fc       	sbrc	r3, 3
    4a94:	1b c0       	rjmp	.+54     	; 0x4acc <vfprintf+0x1c2>
    4a96:	82 2d       	mov	r24, r2
    4a98:	90 e0       	ldi	r25, 0x00	; 0
    4a9a:	88 16       	cp	r8, r24
    4a9c:	99 06       	cpc	r9, r25
    4a9e:	b0 f4       	brcc	.+44     	; 0x4acc <vfprintf+0x1c2>
    4aa0:	b6 01       	movw	r22, r12
    4aa2:	80 e2       	ldi	r24, 0x20	; 32
    4aa4:	90 e0       	ldi	r25, 0x00	; 0
    4aa6:	0e 94 e1 2a 	call	0x55c2	; 0x55c2 <fputc>
    4aaa:	2a 94       	dec	r2
    4aac:	f4 cf       	rjmp	.-24     	; 0x4a96 <vfprintf+0x18c>
    4aae:	f5 01       	movw	r30, r10
    4ab0:	37 fc       	sbrc	r3, 7
    4ab2:	85 91       	lpm	r24, Z+
    4ab4:	37 fe       	sbrs	r3, 7
    4ab6:	81 91       	ld	r24, Z+
    4ab8:	5f 01       	movw	r10, r30
    4aba:	b6 01       	movw	r22, r12
    4abc:	90 e0       	ldi	r25, 0x00	; 0
    4abe:	0e 94 e1 2a 	call	0x55c2	; 0x55c2 <fputc>
    4ac2:	21 10       	cpse	r2, r1
    4ac4:	2a 94       	dec	r2
    4ac6:	21 e0       	ldi	r18, 0x01	; 1
    4ac8:	82 1a       	sub	r8, r18
    4aca:	91 08       	sbc	r9, r1
    4acc:	81 14       	cp	r8, r1
    4ace:	91 04       	cpc	r9, r1
    4ad0:	71 f7       	brne	.-36     	; 0x4aae <vfprintf+0x1a4>
    4ad2:	e8 c0       	rjmp	.+464    	; 0x4ca4 <vfprintf+0x39a>
    4ad4:	84 36       	cpi	r24, 0x64	; 100
    4ad6:	11 f0       	breq	.+4      	; 0x4adc <vfprintf+0x1d2>
    4ad8:	89 36       	cpi	r24, 0x69	; 105
    4ada:	41 f5       	brne	.+80     	; 0x4b2c <vfprintf+0x222>
    4adc:	f8 01       	movw	r30, r16
    4ade:	37 fe       	sbrs	r3, 7
    4ae0:	07 c0       	rjmp	.+14     	; 0x4af0 <vfprintf+0x1e6>
    4ae2:	60 81       	ld	r22, Z
    4ae4:	71 81       	ldd	r23, Z+1	; 0x01
    4ae6:	82 81       	ldd	r24, Z+2	; 0x02
    4ae8:	93 81       	ldd	r25, Z+3	; 0x03
    4aea:	0c 5f       	subi	r16, 0xFC	; 252
    4aec:	1f 4f       	sbci	r17, 0xFF	; 255
    4aee:	08 c0       	rjmp	.+16     	; 0x4b00 <vfprintf+0x1f6>
    4af0:	60 81       	ld	r22, Z
    4af2:	71 81       	ldd	r23, Z+1	; 0x01
    4af4:	07 2e       	mov	r0, r23
    4af6:	00 0c       	add	r0, r0
    4af8:	88 0b       	sbc	r24, r24
    4afa:	99 0b       	sbc	r25, r25
    4afc:	0e 5f       	subi	r16, 0xFE	; 254
    4afe:	1f 4f       	sbci	r17, 0xFF	; 255
    4b00:	f3 2d       	mov	r31, r3
    4b02:	ff 76       	andi	r31, 0x6F	; 111
    4b04:	3f 2e       	mov	r3, r31
    4b06:	97 ff       	sbrs	r25, 7
    4b08:	09 c0       	rjmp	.+18     	; 0x4b1c <vfprintf+0x212>
    4b0a:	90 95       	com	r25
    4b0c:	80 95       	com	r24
    4b0e:	70 95       	com	r23
    4b10:	61 95       	neg	r22
    4b12:	7f 4f       	sbci	r23, 0xFF	; 255
    4b14:	8f 4f       	sbci	r24, 0xFF	; 255
    4b16:	9f 4f       	sbci	r25, 0xFF	; 255
    4b18:	f0 68       	ori	r31, 0x80	; 128
    4b1a:	3f 2e       	mov	r3, r31
    4b1c:	2a e0       	ldi	r18, 0x0A	; 10
    4b1e:	30 e0       	ldi	r19, 0x00	; 0
    4b20:	a3 01       	movw	r20, r6
    4b22:	0e 94 36 2b 	call	0x566c	; 0x566c <__ultoa_invert>
    4b26:	88 2e       	mov	r8, r24
    4b28:	86 18       	sub	r8, r6
    4b2a:	45 c0       	rjmp	.+138    	; 0x4bb6 <vfprintf+0x2ac>
    4b2c:	85 37       	cpi	r24, 0x75	; 117
    4b2e:	31 f4       	brne	.+12     	; 0x4b3c <vfprintf+0x232>
    4b30:	23 2d       	mov	r18, r3
    4b32:	2f 7e       	andi	r18, 0xEF	; 239
    4b34:	b2 2e       	mov	r11, r18
    4b36:	2a e0       	ldi	r18, 0x0A	; 10
    4b38:	30 e0       	ldi	r19, 0x00	; 0
    4b3a:	25 c0       	rjmp	.+74     	; 0x4b86 <vfprintf+0x27c>
    4b3c:	93 2d       	mov	r25, r3
    4b3e:	99 7f       	andi	r25, 0xF9	; 249
    4b40:	b9 2e       	mov	r11, r25
    4b42:	8f 36       	cpi	r24, 0x6F	; 111
    4b44:	c1 f0       	breq	.+48     	; 0x4b76 <vfprintf+0x26c>
    4b46:	18 f4       	brcc	.+6      	; 0x4b4e <vfprintf+0x244>
    4b48:	88 35       	cpi	r24, 0x58	; 88
    4b4a:	79 f0       	breq	.+30     	; 0x4b6a <vfprintf+0x260>
    4b4c:	b5 c0       	rjmp	.+362    	; 0x4cb8 <vfprintf+0x3ae>
    4b4e:	80 37       	cpi	r24, 0x70	; 112
    4b50:	19 f0       	breq	.+6      	; 0x4b58 <vfprintf+0x24e>
    4b52:	88 37       	cpi	r24, 0x78	; 120
    4b54:	21 f0       	breq	.+8      	; 0x4b5e <vfprintf+0x254>
    4b56:	b0 c0       	rjmp	.+352    	; 0x4cb8 <vfprintf+0x3ae>
    4b58:	e9 2f       	mov	r30, r25
    4b5a:	e0 61       	ori	r30, 0x10	; 16
    4b5c:	be 2e       	mov	r11, r30
    4b5e:	b4 fe       	sbrs	r11, 4
    4b60:	0d c0       	rjmp	.+26     	; 0x4b7c <vfprintf+0x272>
    4b62:	fb 2d       	mov	r31, r11
    4b64:	f4 60       	ori	r31, 0x04	; 4
    4b66:	bf 2e       	mov	r11, r31
    4b68:	09 c0       	rjmp	.+18     	; 0x4b7c <vfprintf+0x272>
    4b6a:	34 fe       	sbrs	r3, 4
    4b6c:	0a c0       	rjmp	.+20     	; 0x4b82 <vfprintf+0x278>
    4b6e:	29 2f       	mov	r18, r25
    4b70:	26 60       	ori	r18, 0x06	; 6
    4b72:	b2 2e       	mov	r11, r18
    4b74:	06 c0       	rjmp	.+12     	; 0x4b82 <vfprintf+0x278>
    4b76:	28 e0       	ldi	r18, 0x08	; 8
    4b78:	30 e0       	ldi	r19, 0x00	; 0
    4b7a:	05 c0       	rjmp	.+10     	; 0x4b86 <vfprintf+0x27c>
    4b7c:	20 e1       	ldi	r18, 0x10	; 16
    4b7e:	30 e0       	ldi	r19, 0x00	; 0
    4b80:	02 c0       	rjmp	.+4      	; 0x4b86 <vfprintf+0x27c>
    4b82:	20 e1       	ldi	r18, 0x10	; 16
    4b84:	32 e0       	ldi	r19, 0x02	; 2
    4b86:	f8 01       	movw	r30, r16
    4b88:	b7 fe       	sbrs	r11, 7
    4b8a:	07 c0       	rjmp	.+14     	; 0x4b9a <vfprintf+0x290>
    4b8c:	60 81       	ld	r22, Z
    4b8e:	71 81       	ldd	r23, Z+1	; 0x01
    4b90:	82 81       	ldd	r24, Z+2	; 0x02
    4b92:	93 81       	ldd	r25, Z+3	; 0x03
    4b94:	0c 5f       	subi	r16, 0xFC	; 252
    4b96:	1f 4f       	sbci	r17, 0xFF	; 255
    4b98:	06 c0       	rjmp	.+12     	; 0x4ba6 <vfprintf+0x29c>
    4b9a:	60 81       	ld	r22, Z
    4b9c:	71 81       	ldd	r23, Z+1	; 0x01
    4b9e:	80 e0       	ldi	r24, 0x00	; 0
    4ba0:	90 e0       	ldi	r25, 0x00	; 0
    4ba2:	0e 5f       	subi	r16, 0xFE	; 254
    4ba4:	1f 4f       	sbci	r17, 0xFF	; 255
    4ba6:	a3 01       	movw	r20, r6
    4ba8:	0e 94 36 2b 	call	0x566c	; 0x566c <__ultoa_invert>
    4bac:	88 2e       	mov	r8, r24
    4bae:	86 18       	sub	r8, r6
    4bb0:	fb 2d       	mov	r31, r11
    4bb2:	ff 77       	andi	r31, 0x7F	; 127
    4bb4:	3f 2e       	mov	r3, r31
    4bb6:	36 fe       	sbrs	r3, 6
    4bb8:	0d c0       	rjmp	.+26     	; 0x4bd4 <vfprintf+0x2ca>
    4bba:	23 2d       	mov	r18, r3
    4bbc:	2e 7f       	andi	r18, 0xFE	; 254
    4bbe:	a2 2e       	mov	r10, r18
    4bc0:	89 14       	cp	r8, r9
    4bc2:	58 f4       	brcc	.+22     	; 0x4bda <vfprintf+0x2d0>
    4bc4:	34 fe       	sbrs	r3, 4
    4bc6:	0b c0       	rjmp	.+22     	; 0x4bde <vfprintf+0x2d4>
    4bc8:	32 fc       	sbrc	r3, 2
    4bca:	09 c0       	rjmp	.+18     	; 0x4bde <vfprintf+0x2d4>
    4bcc:	83 2d       	mov	r24, r3
    4bce:	8e 7e       	andi	r24, 0xEE	; 238
    4bd0:	a8 2e       	mov	r10, r24
    4bd2:	05 c0       	rjmp	.+10     	; 0x4bde <vfprintf+0x2d4>
    4bd4:	b8 2c       	mov	r11, r8
    4bd6:	a3 2c       	mov	r10, r3
    4bd8:	03 c0       	rjmp	.+6      	; 0x4be0 <vfprintf+0x2d6>
    4bda:	b8 2c       	mov	r11, r8
    4bdc:	01 c0       	rjmp	.+2      	; 0x4be0 <vfprintf+0x2d6>
    4bde:	b9 2c       	mov	r11, r9
    4be0:	a4 fe       	sbrs	r10, 4
    4be2:	0f c0       	rjmp	.+30     	; 0x4c02 <vfprintf+0x2f8>
    4be4:	fe 01       	movw	r30, r28
    4be6:	e8 0d       	add	r30, r8
    4be8:	f1 1d       	adc	r31, r1
    4bea:	80 81       	ld	r24, Z
    4bec:	80 33       	cpi	r24, 0x30	; 48
    4bee:	21 f4       	brne	.+8      	; 0x4bf8 <vfprintf+0x2ee>
    4bf0:	9a 2d       	mov	r25, r10
    4bf2:	99 7e       	andi	r25, 0xE9	; 233
    4bf4:	a9 2e       	mov	r10, r25
    4bf6:	09 c0       	rjmp	.+18     	; 0x4c0a <vfprintf+0x300>
    4bf8:	a2 fe       	sbrs	r10, 2
    4bfa:	06 c0       	rjmp	.+12     	; 0x4c08 <vfprintf+0x2fe>
    4bfc:	b3 94       	inc	r11
    4bfe:	b3 94       	inc	r11
    4c00:	04 c0       	rjmp	.+8      	; 0x4c0a <vfprintf+0x300>
    4c02:	8a 2d       	mov	r24, r10
    4c04:	86 78       	andi	r24, 0x86	; 134
    4c06:	09 f0       	breq	.+2      	; 0x4c0a <vfprintf+0x300>
    4c08:	b3 94       	inc	r11
    4c0a:	a3 fc       	sbrc	r10, 3
    4c0c:	11 c0       	rjmp	.+34     	; 0x4c30 <vfprintf+0x326>
    4c0e:	a0 fe       	sbrs	r10, 0
    4c10:	06 c0       	rjmp	.+12     	; 0x4c1e <vfprintf+0x314>
    4c12:	b2 14       	cp	r11, r2
    4c14:	88 f4       	brcc	.+34     	; 0x4c38 <vfprintf+0x32e>
    4c16:	28 0c       	add	r2, r8
    4c18:	92 2c       	mov	r9, r2
    4c1a:	9b 18       	sub	r9, r11
    4c1c:	0e c0       	rjmp	.+28     	; 0x4c3a <vfprintf+0x330>
    4c1e:	b2 14       	cp	r11, r2
    4c20:	60 f4       	brcc	.+24     	; 0x4c3a <vfprintf+0x330>
    4c22:	b6 01       	movw	r22, r12
    4c24:	80 e2       	ldi	r24, 0x20	; 32
    4c26:	90 e0       	ldi	r25, 0x00	; 0
    4c28:	0e 94 e1 2a 	call	0x55c2	; 0x55c2 <fputc>
    4c2c:	b3 94       	inc	r11
    4c2e:	f7 cf       	rjmp	.-18     	; 0x4c1e <vfprintf+0x314>
    4c30:	b2 14       	cp	r11, r2
    4c32:	18 f4       	brcc	.+6      	; 0x4c3a <vfprintf+0x330>
    4c34:	2b 18       	sub	r2, r11
    4c36:	02 c0       	rjmp	.+4      	; 0x4c3c <vfprintf+0x332>
    4c38:	98 2c       	mov	r9, r8
    4c3a:	21 2c       	mov	r2, r1
    4c3c:	a4 fe       	sbrs	r10, 4
    4c3e:	10 c0       	rjmp	.+32     	; 0x4c60 <vfprintf+0x356>
    4c40:	b6 01       	movw	r22, r12
    4c42:	80 e3       	ldi	r24, 0x30	; 48
    4c44:	90 e0       	ldi	r25, 0x00	; 0
    4c46:	0e 94 e1 2a 	call	0x55c2	; 0x55c2 <fputc>
    4c4a:	a2 fe       	sbrs	r10, 2
    4c4c:	17 c0       	rjmp	.+46     	; 0x4c7c <vfprintf+0x372>
    4c4e:	a1 fc       	sbrc	r10, 1
    4c50:	03 c0       	rjmp	.+6      	; 0x4c58 <vfprintf+0x34e>
    4c52:	88 e7       	ldi	r24, 0x78	; 120
    4c54:	90 e0       	ldi	r25, 0x00	; 0
    4c56:	02 c0       	rjmp	.+4      	; 0x4c5c <vfprintf+0x352>
    4c58:	88 e5       	ldi	r24, 0x58	; 88
    4c5a:	90 e0       	ldi	r25, 0x00	; 0
    4c5c:	b6 01       	movw	r22, r12
    4c5e:	0c c0       	rjmp	.+24     	; 0x4c78 <vfprintf+0x36e>
    4c60:	8a 2d       	mov	r24, r10
    4c62:	86 78       	andi	r24, 0x86	; 134
    4c64:	59 f0       	breq	.+22     	; 0x4c7c <vfprintf+0x372>
    4c66:	a1 fe       	sbrs	r10, 1
    4c68:	02 c0       	rjmp	.+4      	; 0x4c6e <vfprintf+0x364>
    4c6a:	8b e2       	ldi	r24, 0x2B	; 43
    4c6c:	01 c0       	rjmp	.+2      	; 0x4c70 <vfprintf+0x366>
    4c6e:	80 e2       	ldi	r24, 0x20	; 32
    4c70:	a7 fc       	sbrc	r10, 7
    4c72:	8d e2       	ldi	r24, 0x2D	; 45
    4c74:	b6 01       	movw	r22, r12
    4c76:	90 e0       	ldi	r25, 0x00	; 0
    4c78:	0e 94 e1 2a 	call	0x55c2	; 0x55c2 <fputc>
    4c7c:	89 14       	cp	r8, r9
    4c7e:	38 f4       	brcc	.+14     	; 0x4c8e <vfprintf+0x384>
    4c80:	b6 01       	movw	r22, r12
    4c82:	80 e3       	ldi	r24, 0x30	; 48
    4c84:	90 e0       	ldi	r25, 0x00	; 0
    4c86:	0e 94 e1 2a 	call	0x55c2	; 0x55c2 <fputc>
    4c8a:	9a 94       	dec	r9
    4c8c:	f7 cf       	rjmp	.-18     	; 0x4c7c <vfprintf+0x372>
    4c8e:	8a 94       	dec	r8
    4c90:	f3 01       	movw	r30, r6
    4c92:	e8 0d       	add	r30, r8
    4c94:	f1 1d       	adc	r31, r1
    4c96:	80 81       	ld	r24, Z
    4c98:	b6 01       	movw	r22, r12
    4c9a:	90 e0       	ldi	r25, 0x00	; 0
    4c9c:	0e 94 e1 2a 	call	0x55c2	; 0x55c2 <fputc>
    4ca0:	81 10       	cpse	r8, r1
    4ca2:	f5 cf       	rjmp	.-22     	; 0x4c8e <vfprintf+0x384>
    4ca4:	22 20       	and	r2, r2
    4ca6:	09 f4       	brne	.+2      	; 0x4caa <vfprintf+0x3a0>
    4ca8:	42 ce       	rjmp	.-892    	; 0x492e <vfprintf+0x24>
    4caa:	b6 01       	movw	r22, r12
    4cac:	80 e2       	ldi	r24, 0x20	; 32
    4cae:	90 e0       	ldi	r25, 0x00	; 0
    4cb0:	0e 94 e1 2a 	call	0x55c2	; 0x55c2 <fputc>
    4cb4:	2a 94       	dec	r2
    4cb6:	f6 cf       	rjmp	.-20     	; 0x4ca4 <vfprintf+0x39a>
    4cb8:	f6 01       	movw	r30, r12
    4cba:	86 81       	ldd	r24, Z+6	; 0x06
    4cbc:	97 81       	ldd	r25, Z+7	; 0x07
    4cbe:	02 c0       	rjmp	.+4      	; 0x4cc4 <vfprintf+0x3ba>
    4cc0:	8f ef       	ldi	r24, 0xFF	; 255
    4cc2:	9f ef       	ldi	r25, 0xFF	; 255
    4cc4:	2b 96       	adiw	r28, 0x0b	; 11
    4cc6:	e2 e1       	ldi	r30, 0x12	; 18
    4cc8:	0c 94 b3 2b 	jmp	0x5766	; 0x5766 <__epilogue_restores__>

00004ccc <putval>:
    4ccc:	20 fd       	sbrc	r18, 0
    4cce:	09 c0       	rjmp	.+18     	; 0x4ce2 <putval+0x16>
    4cd0:	fc 01       	movw	r30, r24
    4cd2:	23 fd       	sbrc	r18, 3
    4cd4:	05 c0       	rjmp	.+10     	; 0x4ce0 <putval+0x14>
    4cd6:	22 ff       	sbrs	r18, 2
    4cd8:	02 c0       	rjmp	.+4      	; 0x4cde <putval+0x12>
    4cda:	73 83       	std	Z+3, r23	; 0x03
    4cdc:	62 83       	std	Z+2, r22	; 0x02
    4cde:	51 83       	std	Z+1, r21	; 0x01
    4ce0:	40 83       	st	Z, r20
    4ce2:	08 95       	ret

00004ce4 <mulacc>:
    4ce4:	44 fd       	sbrc	r20, 4
    4ce6:	17 c0       	rjmp	.+46     	; 0x4d16 <mulacc+0x32>
    4ce8:	46 fd       	sbrc	r20, 6
    4cea:	17 c0       	rjmp	.+46     	; 0x4d1a <mulacc+0x36>
    4cec:	ab 01       	movw	r20, r22
    4cee:	bc 01       	movw	r22, r24
    4cf0:	da 01       	movw	r26, r20
    4cf2:	fb 01       	movw	r30, r22
    4cf4:	aa 0f       	add	r26, r26
    4cf6:	bb 1f       	adc	r27, r27
    4cf8:	ee 1f       	adc	r30, r30
    4cfa:	ff 1f       	adc	r31, r31
    4cfc:	10 94       	com	r1
    4cfe:	d1 f7       	brne	.-12     	; 0x4cf4 <mulacc+0x10>
    4d00:	4a 0f       	add	r20, r26
    4d02:	5b 1f       	adc	r21, r27
    4d04:	6e 1f       	adc	r22, r30
    4d06:	7f 1f       	adc	r23, r31
    4d08:	cb 01       	movw	r24, r22
    4d0a:	ba 01       	movw	r22, r20
    4d0c:	66 0f       	add	r22, r22
    4d0e:	77 1f       	adc	r23, r23
    4d10:	88 1f       	adc	r24, r24
    4d12:	99 1f       	adc	r25, r25
    4d14:	09 c0       	rjmp	.+18     	; 0x4d28 <mulacc+0x44>
    4d16:	33 e0       	ldi	r19, 0x03	; 3
    4d18:	01 c0       	rjmp	.+2      	; 0x4d1c <mulacc+0x38>
    4d1a:	34 e0       	ldi	r19, 0x04	; 4
    4d1c:	66 0f       	add	r22, r22
    4d1e:	77 1f       	adc	r23, r23
    4d20:	88 1f       	adc	r24, r24
    4d22:	99 1f       	adc	r25, r25
    4d24:	31 50       	subi	r19, 0x01	; 1
    4d26:	d1 f7       	brne	.-12     	; 0x4d1c <mulacc+0x38>
    4d28:	62 0f       	add	r22, r18
    4d2a:	71 1d       	adc	r23, r1
    4d2c:	81 1d       	adc	r24, r1
    4d2e:	91 1d       	adc	r25, r1
    4d30:	08 95       	ret

00004d32 <skip_spaces>:
    4d32:	0f 93       	push	r16
    4d34:	1f 93       	push	r17
    4d36:	cf 93       	push	r28
    4d38:	df 93       	push	r29
    4d3a:	8c 01       	movw	r16, r24
    4d3c:	c8 01       	movw	r24, r16
    4d3e:	0e 94 a3 2a 	call	0x5546	; 0x5546 <fgetc>
    4d42:	ec 01       	movw	r28, r24
    4d44:	97 fd       	sbrc	r25, 7
    4d46:	08 c0       	rjmp	.+16     	; 0x4d58 <skip_spaces+0x26>
    4d48:	0e 94 61 2a 	call	0x54c2	; 0x54c2 <isspace>
    4d4c:	89 2b       	or	r24, r25
    4d4e:	b1 f7       	brne	.-20     	; 0x4d3c <skip_spaces+0xa>
    4d50:	b8 01       	movw	r22, r16
    4d52:	ce 01       	movw	r24, r28
    4d54:	0e 94 1d 2b 	call	0x563a	; 0x563a <ungetc>
    4d58:	ce 01       	movw	r24, r28
    4d5a:	df 91       	pop	r29
    4d5c:	cf 91       	pop	r28
    4d5e:	1f 91       	pop	r17
    4d60:	0f 91       	pop	r16
    4d62:	08 95       	ret

00004d64 <conv_int>:
    4d64:	8f 92       	push	r8
    4d66:	9f 92       	push	r9
    4d68:	af 92       	push	r10
    4d6a:	bf 92       	push	r11
    4d6c:	ef 92       	push	r14
    4d6e:	ff 92       	push	r15
    4d70:	0f 93       	push	r16
    4d72:	1f 93       	push	r17
    4d74:	cf 93       	push	r28
    4d76:	df 93       	push	r29
    4d78:	8c 01       	movw	r16, r24
    4d7a:	d6 2f       	mov	r29, r22
    4d7c:	7a 01       	movw	r14, r20
    4d7e:	b2 2e       	mov	r11, r18
    4d80:	0e 94 a3 2a 	call	0x5546	; 0x5546 <fgetc>
    4d84:	9c 01       	movw	r18, r24
    4d86:	33 27       	eor	r19, r19
    4d88:	2b 32       	cpi	r18, 0x2B	; 43
    4d8a:	31 05       	cpc	r19, r1
    4d8c:	31 f0       	breq	.+12     	; 0x4d9a <conv_int+0x36>
    4d8e:	2d 32       	cpi	r18, 0x2D	; 45
    4d90:	31 05       	cpc	r19, r1
    4d92:	61 f4       	brne	.+24     	; 0x4dac <conv_int+0x48>
    4d94:	8b 2d       	mov	r24, r11
    4d96:	80 68       	ori	r24, 0x80	; 128
    4d98:	b8 2e       	mov	r11, r24
    4d9a:	d1 50       	subi	r29, 0x01	; 1
    4d9c:	11 f4       	brne	.+4      	; 0x4da2 <conv_int+0x3e>
    4d9e:	80 e0       	ldi	r24, 0x00	; 0
    4da0:	68 c0       	rjmp	.+208    	; 0x4e72 <conv_int+0x10e>
    4da2:	c8 01       	movw	r24, r16
    4da4:	0e 94 a3 2a 	call	0x5546	; 0x5546 <fgetc>
    4da8:	97 fd       	sbrc	r25, 7
    4daa:	f9 cf       	rjmp	.-14     	; 0x4d9e <conv_int+0x3a>
    4dac:	cb 2d       	mov	r28, r11
    4dae:	cd 7f       	andi	r28, 0xFD	; 253
    4db0:	2b 2d       	mov	r18, r11
    4db2:	20 73       	andi	r18, 0x30	; 48
    4db4:	09 f5       	brne	.+66     	; 0x4df8 <conv_int+0x94>
    4db6:	80 33       	cpi	r24, 0x30	; 48
    4db8:	f9 f4       	brne	.+62     	; 0x4df8 <conv_int+0x94>
    4dba:	aa 24       	eor	r10, r10
    4dbc:	aa 94       	dec	r10
    4dbe:	ad 0e       	add	r10, r29
    4dc0:	09 f4       	brne	.+2      	; 0x4dc4 <conv_int+0x60>
    4dc2:	43 c0       	rjmp	.+134    	; 0x4e4a <conv_int+0xe6>
    4dc4:	c8 01       	movw	r24, r16
    4dc6:	0e 94 a3 2a 	call	0x5546	; 0x5546 <fgetc>
    4dca:	97 fd       	sbrc	r25, 7
    4dcc:	3e c0       	rjmp	.+124    	; 0x4e4a <conv_int+0xe6>
    4dce:	9c 01       	movw	r18, r24
    4dd0:	2f 7d       	andi	r18, 0xDF	; 223
    4dd2:	33 27       	eor	r19, r19
    4dd4:	28 35       	cpi	r18, 0x58	; 88
    4dd6:	31 05       	cpc	r19, r1
    4dd8:	49 f4       	brne	.+18     	; 0x4dec <conv_int+0x88>
    4dda:	c2 64       	ori	r28, 0x42	; 66
    4ddc:	d2 50       	subi	r29, 0x02	; 2
    4dde:	a9 f1       	breq	.+106    	; 0x4e4a <conv_int+0xe6>
    4de0:	c8 01       	movw	r24, r16
    4de2:	0e 94 a3 2a 	call	0x5546	; 0x5546 <fgetc>
    4de6:	97 ff       	sbrs	r25, 7
    4de8:	07 c0       	rjmp	.+14     	; 0x4df8 <conv_int+0x94>
    4dea:	2f c0       	rjmp	.+94     	; 0x4e4a <conv_int+0xe6>
    4dec:	b6 fe       	sbrs	r11, 6
    4dee:	02 c0       	rjmp	.+4      	; 0x4df4 <conv_int+0x90>
    4df0:	c2 60       	ori	r28, 0x02	; 2
    4df2:	01 c0       	rjmp	.+2      	; 0x4df6 <conv_int+0x92>
    4df4:	c2 61       	ori	r28, 0x12	; 18
    4df6:	da 2d       	mov	r29, r10
    4df8:	81 2c       	mov	r8, r1
    4dfa:	91 2c       	mov	r9, r1
    4dfc:	54 01       	movw	r10, r8
    4dfe:	20 ed       	ldi	r18, 0xD0	; 208
    4e00:	28 0f       	add	r18, r24
    4e02:	28 30       	cpi	r18, 0x08	; 8
    4e04:	80 f0       	brcs	.+32     	; 0x4e26 <conv_int+0xc2>
    4e06:	c4 ff       	sbrs	r28, 4
    4e08:	04 c0       	rjmp	.+8      	; 0x4e12 <conv_int+0xae>
    4e0a:	b8 01       	movw	r22, r16
    4e0c:	0e 94 1d 2b 	call	0x563a	; 0x563a <ungetc>
    4e10:	19 c0       	rjmp	.+50     	; 0x4e44 <conv_int+0xe0>
    4e12:	2a 30       	cpi	r18, 0x0A	; 10
    4e14:	40 f0       	brcs	.+16     	; 0x4e26 <conv_int+0xc2>
    4e16:	c6 ff       	sbrs	r28, 6
    4e18:	f8 cf       	rjmp	.-16     	; 0x4e0a <conv_int+0xa6>
    4e1a:	2f 7d       	andi	r18, 0xDF	; 223
    4e1c:	3f ee       	ldi	r19, 0xEF	; 239
    4e1e:	32 0f       	add	r19, r18
    4e20:	36 30       	cpi	r19, 0x06	; 6
    4e22:	98 f7       	brcc	.-26     	; 0x4e0a <conv_int+0xa6>
    4e24:	27 50       	subi	r18, 0x07	; 7
    4e26:	4c 2f       	mov	r20, r28
    4e28:	c5 01       	movw	r24, r10
    4e2a:	b4 01       	movw	r22, r8
    4e2c:	0e 94 72 26 	call	0x4ce4	; 0x4ce4 <mulacc>
    4e30:	4b 01       	movw	r8, r22
    4e32:	5c 01       	movw	r10, r24
    4e34:	c2 60       	ori	r28, 0x02	; 2
    4e36:	d1 50       	subi	r29, 0x01	; 1
    4e38:	59 f0       	breq	.+22     	; 0x4e50 <conv_int+0xec>
    4e3a:	c8 01       	movw	r24, r16
    4e3c:	0e 94 a3 2a 	call	0x5546	; 0x5546 <fgetc>
    4e40:	97 ff       	sbrs	r25, 7
    4e42:	dd cf       	rjmp	.-70     	; 0x4dfe <conv_int+0x9a>
    4e44:	c1 fd       	sbrc	r28, 1
    4e46:	04 c0       	rjmp	.+8      	; 0x4e50 <conv_int+0xec>
    4e48:	aa cf       	rjmp	.-172    	; 0x4d9e <conv_int+0x3a>
    4e4a:	81 2c       	mov	r8, r1
    4e4c:	91 2c       	mov	r9, r1
    4e4e:	54 01       	movw	r10, r8
    4e50:	c7 ff       	sbrs	r28, 7
    4e52:	08 c0       	rjmp	.+16     	; 0x4e64 <conv_int+0x100>
    4e54:	b0 94       	com	r11
    4e56:	a0 94       	com	r10
    4e58:	90 94       	com	r9
    4e5a:	80 94       	com	r8
    4e5c:	81 1c       	adc	r8, r1
    4e5e:	91 1c       	adc	r9, r1
    4e60:	a1 1c       	adc	r10, r1
    4e62:	b1 1c       	adc	r11, r1
    4e64:	2c 2f       	mov	r18, r28
    4e66:	b5 01       	movw	r22, r10
    4e68:	a4 01       	movw	r20, r8
    4e6a:	c7 01       	movw	r24, r14
    4e6c:	0e 94 66 26 	call	0x4ccc	; 0x4ccc <putval>
    4e70:	81 e0       	ldi	r24, 0x01	; 1
    4e72:	df 91       	pop	r29
    4e74:	cf 91       	pop	r28
    4e76:	1f 91       	pop	r17
    4e78:	0f 91       	pop	r16
    4e7a:	ff 90       	pop	r15
    4e7c:	ef 90       	pop	r14
    4e7e:	bf 90       	pop	r11
    4e80:	af 90       	pop	r10
    4e82:	9f 90       	pop	r9
    4e84:	8f 90       	pop	r8
    4e86:	08 95       	ret

00004e88 <conv_brk>:
    4e88:	a0 e2       	ldi	r26, 0x20	; 32
    4e8a:	b0 e0       	ldi	r27, 0x00	; 0
    4e8c:	ea e4       	ldi	r30, 0x4A	; 74
    4e8e:	f7 e2       	ldi	r31, 0x27	; 39
    4e90:	0c 94 9a 2b 	jmp	0x5734	; 0x5734 <__prologue_saves__+0x6>
    4e94:	5c 01       	movw	r10, r24
    4e96:	96 2e       	mov	r9, r22
    4e98:	7a 01       	movw	r14, r20
    4e9a:	f9 01       	movw	r30, r18
    4e9c:	8e 01       	movw	r16, r28
    4e9e:	0f 5f       	subi	r16, 0xFF	; 255
    4ea0:	1f 4f       	sbci	r17, 0xFF	; 255
    4ea2:	68 01       	movw	r12, r16
    4ea4:	80 e2       	ldi	r24, 0x20	; 32
    4ea6:	d8 01       	movw	r26, r16
    4ea8:	1d 92       	st	X+, r1
    4eaa:	8a 95       	dec	r24
    4eac:	e9 f7       	brne	.-6      	; 0x4ea8 <conv_brk+0x20>
    4eae:	d5 01       	movw	r26, r10
    4eb0:	13 96       	adiw	r26, 0x03	; 3
    4eb2:	8c 90       	ld	r8, X
    4eb4:	80 e0       	ldi	r24, 0x00	; 0
    4eb6:	90 e0       	ldi	r25, 0x00	; 0
    4eb8:	61 2c       	mov	r6, r1
    4eba:	71 2c       	mov	r7, r1
    4ebc:	30 e0       	ldi	r19, 0x00	; 0
    4ebe:	61 e0       	ldi	r22, 0x01	; 1
    4ec0:	70 e0       	ldi	r23, 0x00	; 0
    4ec2:	83 fc       	sbrc	r8, 3
    4ec4:	25 91       	lpm	r18, Z+
    4ec6:	83 fe       	sbrs	r8, 3
    4ec8:	21 91       	ld	r18, Z+
    4eca:	8f 01       	movw	r16, r30
    4ecc:	52 2e       	mov	r5, r18
    4ece:	21 11       	cpse	r18, r1
    4ed0:	03 c0       	rjmp	.+6      	; 0x4ed8 <conv_brk+0x50>
    4ed2:	80 e0       	ldi	r24, 0x00	; 0
    4ed4:	90 e0       	ldi	r25, 0x00	; 0
    4ed6:	92 c0       	rjmp	.+292    	; 0x4ffc <conv_brk+0x174>
    4ed8:	2e 35       	cpi	r18, 0x5E	; 94
    4eda:	11 f4       	brne	.+4      	; 0x4ee0 <conv_brk+0x58>
    4edc:	00 97       	sbiw	r24, 0x00	; 0
    4ede:	51 f1       	breq	.+84     	; 0x4f34 <conv_brk+0xac>
    4ee0:	43 2f       	mov	r20, r19
    4ee2:	50 e0       	ldi	r21, 0x00	; 0
    4ee4:	48 17       	cp	r20, r24
    4ee6:	59 07       	cpc	r21, r25
    4ee8:	3c f4       	brge	.+14     	; 0x4ef8 <conv_brk+0x70>
    4eea:	2d 35       	cpi	r18, 0x5D	; 93
    4eec:	59 f1       	breq	.+86     	; 0x4f44 <conv_brk+0xbc>
    4eee:	2d 32       	cpi	r18, 0x2D	; 45
    4ef0:	19 f4       	brne	.+6      	; 0x4ef8 <conv_brk+0x70>
    4ef2:	77 20       	and	r7, r7
    4ef4:	09 f1       	breq	.+66     	; 0x4f38 <conv_brk+0xb0>
    4ef6:	03 c0       	rjmp	.+6      	; 0x4efe <conv_brk+0x76>
    4ef8:	77 20       	and	r7, r7
    4efa:	09 f4       	brne	.+2      	; 0x4efe <conv_brk+0x76>
    4efc:	6a c0       	rjmp	.+212    	; 0x4fd2 <conv_brk+0x14a>
    4efe:	45 2d       	mov	r20, r5
    4f00:	46 95       	lsr	r20
    4f02:	46 95       	lsr	r20
    4f04:	46 95       	lsr	r20
    4f06:	d6 01       	movw	r26, r12
    4f08:	a4 0f       	add	r26, r20
    4f0a:	b1 1d       	adc	r27, r1
    4f0c:	45 2d       	mov	r20, r5
    4f0e:	47 70       	andi	r20, 0x07	; 7
    4f10:	8b 01       	movw	r16, r22
    4f12:	02 c0       	rjmp	.+4      	; 0x4f18 <conv_brk+0x90>
    4f14:	00 0f       	add	r16, r16
    4f16:	11 1f       	adc	r17, r17
    4f18:	4a 95       	dec	r20
    4f1a:	e2 f7       	brpl	.-8      	; 0x4f14 <conv_brk+0x8c>
    4f1c:	a8 01       	movw	r20, r16
    4f1e:	5c 91       	ld	r21, X
    4f20:	45 2b       	or	r20, r21
    4f22:	4c 93       	st	X, r20
    4f24:	65 14       	cp	r6, r5
    4f26:	59 f0       	breq	.+22     	; 0x4f3e <conv_brk+0xb6>
    4f28:	56 14       	cp	r5, r6
    4f2a:	10 f4       	brcc	.+4      	; 0x4f30 <conv_brk+0xa8>
    4f2c:	53 94       	inc	r5
    4f2e:	e7 cf       	rjmp	.-50     	; 0x4efe <conv_brk+0x76>
    4f30:	5a 94       	dec	r5
    4f32:	e5 cf       	rjmp	.-54     	; 0x4efe <conv_brk+0x76>
    4f34:	31 e0       	ldi	r19, 0x01	; 1
    4f36:	04 c0       	rjmp	.+8      	; 0x4f40 <conv_brk+0xb8>
    4f38:	77 24       	eor	r7, r7
    4f3a:	73 94       	inc	r7
    4f3c:	01 c0       	rjmp	.+2      	; 0x4f40 <conv_brk+0xb8>
    4f3e:	71 2c       	mov	r7, r1
    4f40:	01 96       	adiw	r24, 0x01	; 1
    4f42:	bf cf       	rjmp	.-130    	; 0x4ec2 <conv_brk+0x3a>
    4f44:	77 20       	and	r7, r7
    4f46:	19 f0       	breq	.+6      	; 0x4f4e <conv_brk+0xc6>
    4f48:	8e 81       	ldd	r24, Y+6	; 0x06
    4f4a:	80 62       	ori	r24, 0x20	; 32
    4f4c:	8e 83       	std	Y+6, r24	; 0x06
    4f4e:	31 11       	cpse	r19, r1
    4f50:	03 c0       	rjmp	.+6      	; 0x4f58 <conv_brk+0xd0>
    4f52:	88 24       	eor	r8, r8
    4f54:	83 94       	inc	r8
    4f56:	17 c0       	rjmp	.+46     	; 0x4f86 <conv_brk+0xfe>
    4f58:	f6 01       	movw	r30, r12
    4f5a:	9e 01       	movw	r18, r28
    4f5c:	2f 5d       	subi	r18, 0xDF	; 223
    4f5e:	3f 4f       	sbci	r19, 0xFF	; 255
    4f60:	80 81       	ld	r24, Z
    4f62:	80 95       	com	r24
    4f64:	81 93       	st	Z+, r24
    4f66:	2e 17       	cp	r18, r30
    4f68:	3f 07       	cpc	r19, r31
    4f6a:	d1 f7       	brne	.-12     	; 0x4f60 <conv_brk+0xd8>
    4f6c:	f2 cf       	rjmp	.-28     	; 0x4f52 <conv_brk+0xca>
    4f6e:	e1 14       	cp	r14, r1
    4f70:	f1 04       	cpc	r15, r1
    4f72:	29 f0       	breq	.+10     	; 0x4f7e <conv_brk+0xf6>
    4f74:	d7 01       	movw	r26, r14
    4f76:	8c 93       	st	X, r24
    4f78:	f7 01       	movw	r30, r14
    4f7a:	31 96       	adiw	r30, 0x01	; 1
    4f7c:	7f 01       	movw	r14, r30
    4f7e:	9a 94       	dec	r9
    4f80:	81 2c       	mov	r8, r1
    4f82:	99 20       	and	r9, r9
    4f84:	f9 f0       	breq	.+62     	; 0x4fc4 <conv_brk+0x13c>
    4f86:	c5 01       	movw	r24, r10
    4f88:	0e 94 a3 2a 	call	0x5546	; 0x5546 <fgetc>
    4f8c:	97 fd       	sbrc	r25, 7
    4f8e:	18 c0       	rjmp	.+48     	; 0x4fc0 <conv_brk+0x138>
    4f90:	fc 01       	movw	r30, r24
    4f92:	ff 27       	eor	r31, r31
    4f94:	23 e0       	ldi	r18, 0x03	; 3
    4f96:	f5 95       	asr	r31
    4f98:	e7 95       	ror	r30
    4f9a:	2a 95       	dec	r18
    4f9c:	e1 f7       	brne	.-8      	; 0x4f96 <conv_brk+0x10e>
    4f9e:	ec 0d       	add	r30, r12
    4fa0:	fd 1d       	adc	r31, r13
    4fa2:	20 81       	ld	r18, Z
    4fa4:	30 e0       	ldi	r19, 0x00	; 0
    4fa6:	ac 01       	movw	r20, r24
    4fa8:	47 70       	andi	r20, 0x07	; 7
    4faa:	55 27       	eor	r21, r21
    4fac:	02 c0       	rjmp	.+4      	; 0x4fb2 <conv_brk+0x12a>
    4fae:	35 95       	asr	r19
    4fb0:	27 95       	ror	r18
    4fb2:	4a 95       	dec	r20
    4fb4:	e2 f7       	brpl	.-8      	; 0x4fae <conv_brk+0x126>
    4fb6:	20 fd       	sbrc	r18, 0
    4fb8:	da cf       	rjmp	.-76     	; 0x4f6e <conv_brk+0xe6>
    4fba:	b5 01       	movw	r22, r10
    4fbc:	0e 94 1d 2b 	call	0x563a	; 0x563a <ungetc>
    4fc0:	81 10       	cpse	r8, r1
    4fc2:	87 cf       	rjmp	.-242    	; 0x4ed2 <conv_brk+0x4a>
    4fc4:	e1 14       	cp	r14, r1
    4fc6:	f1 04       	cpc	r15, r1
    4fc8:	11 f0       	breq	.+4      	; 0x4fce <conv_brk+0x146>
    4fca:	d7 01       	movw	r26, r14
    4fcc:	1c 92       	st	X, r1
    4fce:	c8 01       	movw	r24, r16
    4fd0:	15 c0       	rjmp	.+42     	; 0x4ffc <conv_brk+0x174>
    4fd2:	42 2f       	mov	r20, r18
    4fd4:	46 95       	lsr	r20
    4fd6:	46 95       	lsr	r20
    4fd8:	46 95       	lsr	r20
    4fda:	d6 01       	movw	r26, r12
    4fdc:	a4 0f       	add	r26, r20
    4fde:	b1 1d       	adc	r27, r1
    4fe0:	42 2f       	mov	r20, r18
    4fe2:	47 70       	andi	r20, 0x07	; 7
    4fe4:	8b 01       	movw	r16, r22
    4fe6:	02 c0       	rjmp	.+4      	; 0x4fec <conv_brk+0x164>
    4fe8:	00 0f       	add	r16, r16
    4fea:	11 1f       	adc	r17, r17
    4fec:	4a 95       	dec	r20
    4fee:	e2 f7       	brpl	.-8      	; 0x4fe8 <conv_brk+0x160>
    4ff0:	a8 01       	movw	r20, r16
    4ff2:	5c 91       	ld	r21, X
    4ff4:	45 2b       	or	r20, r21
    4ff6:	4c 93       	st	X, r20
    4ff8:	62 2e       	mov	r6, r18
    4ffa:	a2 cf       	rjmp	.-188    	; 0x4f40 <conv_brk+0xb8>
    4ffc:	a0 96       	adiw	r28, 0x20	; 32
    4ffe:	ef e0       	ldi	r30, 0x0F	; 15
    5000:	0c 94 b6 2b 	jmp	0x576c	; 0x576c <__epilogue_restores__+0x6>

00005004 <vfscanf>:
    5004:	a0 e0       	ldi	r26, 0x00	; 0
    5006:	b0 e0       	ldi	r27, 0x00	; 0
    5008:	e8 e0       	ldi	r30, 0x08	; 8
    500a:	f8 e2       	ldi	r31, 0x28	; 40
    500c:	0c 94 9a 2b 	jmp	0x5734	; 0x5734 <__prologue_saves__+0x6>
    5010:	6c 01       	movw	r12, r24
    5012:	eb 01       	movw	r28, r22
    5014:	5a 01       	movw	r10, r20
    5016:	fc 01       	movw	r30, r24
    5018:	17 82       	std	Z+7, r1	; 0x07
    501a:	16 82       	std	Z+6, r1	; 0x06
    501c:	51 2c       	mov	r5, r1
    501e:	f6 01       	movw	r30, r12
    5020:	e3 80       	ldd	r14, Z+3	; 0x03
    5022:	fe 01       	movw	r30, r28
    5024:	e3 fc       	sbrc	r14, 3
    5026:	85 91       	lpm	r24, Z+
    5028:	e3 fe       	sbrs	r14, 3
    502a:	81 91       	ld	r24, Z+
    502c:	18 2f       	mov	r17, r24
    502e:	ef 01       	movw	r28, r30
    5030:	88 23       	and	r24, r24
    5032:	09 f4       	brne	.+2      	; 0x5036 <vfscanf+0x32>
    5034:	ee c0       	rjmp	.+476    	; 0x5212 <vfscanf+0x20e>
    5036:	90 e0       	ldi	r25, 0x00	; 0
    5038:	0e 94 61 2a 	call	0x54c2	; 0x54c2 <isspace>
    503c:	89 2b       	or	r24, r25
    503e:	21 f0       	breq	.+8      	; 0x5048 <vfscanf+0x44>
    5040:	c6 01       	movw	r24, r12
    5042:	0e 94 99 26 	call	0x4d32	; 0x4d32 <skip_spaces>
    5046:	eb cf       	rjmp	.-42     	; 0x501e <vfscanf+0x1a>
    5048:	15 32       	cpi	r17, 0x25	; 37
    504a:	41 f4       	brne	.+16     	; 0x505c <vfscanf+0x58>
    504c:	fe 01       	movw	r30, r28
    504e:	e3 fc       	sbrc	r14, 3
    5050:	15 91       	lpm	r17, Z+
    5052:	e3 fe       	sbrs	r14, 3
    5054:	11 91       	ld	r17, Z+
    5056:	ef 01       	movw	r28, r30
    5058:	15 32       	cpi	r17, 0x25	; 37
    505a:	81 f4       	brne	.+32     	; 0x507c <vfscanf+0x78>
    505c:	c6 01       	movw	r24, r12
    505e:	0e 94 a3 2a 	call	0x5546	; 0x5546 <fgetc>
    5062:	97 fd       	sbrc	r25, 7
    5064:	d4 c0       	rjmp	.+424    	; 0x520e <vfscanf+0x20a>
    5066:	41 2f       	mov	r20, r17
    5068:	50 e0       	ldi	r21, 0x00	; 0
    506a:	9c 01       	movw	r18, r24
    506c:	33 27       	eor	r19, r19
    506e:	24 17       	cp	r18, r20
    5070:	35 07       	cpc	r19, r21
    5072:	a9 f2       	breq	.-86     	; 0x501e <vfscanf+0x1a>
    5074:	b6 01       	movw	r22, r12
    5076:	0e 94 1d 2b 	call	0x563a	; 0x563a <ungetc>
    507a:	cb c0       	rjmp	.+406    	; 0x5212 <vfscanf+0x20e>
    507c:	1a 32       	cpi	r17, 0x2A	; 42
    507e:	39 f4       	brne	.+14     	; 0x508e <vfscanf+0x8a>
    5080:	e3 fc       	sbrc	r14, 3
    5082:	15 91       	lpm	r17, Z+
    5084:	e3 fe       	sbrs	r14, 3
    5086:	11 91       	ld	r17, Z+
    5088:	ef 01       	movw	r28, r30
    508a:	01 e0       	ldi	r16, 0x01	; 1
    508c:	01 c0       	rjmp	.+2      	; 0x5090 <vfscanf+0x8c>
    508e:	00 e0       	ldi	r16, 0x00	; 0
    5090:	f1 2c       	mov	r15, r1
    5092:	20 ed       	ldi	r18, 0xD0	; 208
    5094:	21 0f       	add	r18, r17
    5096:	2a 30       	cpi	r18, 0x0A	; 10
    5098:	80 f4       	brcc	.+32     	; 0x50ba <vfscanf+0xb6>
    509a:	02 60       	ori	r16, 0x02	; 2
    509c:	6f 2d       	mov	r22, r15
    509e:	70 e0       	ldi	r23, 0x00	; 0
    50a0:	80 e0       	ldi	r24, 0x00	; 0
    50a2:	90 e0       	ldi	r25, 0x00	; 0
    50a4:	40 e2       	ldi	r20, 0x20	; 32
    50a6:	0e 94 72 26 	call	0x4ce4	; 0x4ce4 <mulacc>
    50aa:	f6 2e       	mov	r15, r22
    50ac:	fe 01       	movw	r30, r28
    50ae:	e3 fc       	sbrc	r14, 3
    50b0:	15 91       	lpm	r17, Z+
    50b2:	e3 fe       	sbrs	r14, 3
    50b4:	11 91       	ld	r17, Z+
    50b6:	ef 01       	movw	r28, r30
    50b8:	ec cf       	rjmp	.-40     	; 0x5092 <vfscanf+0x8e>
    50ba:	01 ff       	sbrs	r16, 1
    50bc:	03 c0       	rjmp	.+6      	; 0x50c4 <vfscanf+0xc0>
    50be:	f1 10       	cpse	r15, r1
    50c0:	03 c0       	rjmp	.+6      	; 0x50c8 <vfscanf+0xc4>
    50c2:	a7 c0       	rjmp	.+334    	; 0x5212 <vfscanf+0x20e>
    50c4:	ff 24       	eor	r15, r15
    50c6:	fa 94       	dec	r15
    50c8:	18 36       	cpi	r17, 0x68	; 104
    50ca:	19 f0       	breq	.+6      	; 0x50d2 <vfscanf+0xce>
    50cc:	1c 36       	cpi	r17, 0x6C	; 108
    50ce:	51 f0       	breq	.+20     	; 0x50e4 <vfscanf+0xe0>
    50d0:	10 c0       	rjmp	.+32     	; 0x50f2 <vfscanf+0xee>
    50d2:	fe 01       	movw	r30, r28
    50d4:	e3 fc       	sbrc	r14, 3
    50d6:	15 91       	lpm	r17, Z+
    50d8:	e3 fe       	sbrs	r14, 3
    50da:	11 91       	ld	r17, Z+
    50dc:	ef 01       	movw	r28, r30
    50de:	18 36       	cpi	r17, 0x68	; 104
    50e0:	41 f4       	brne	.+16     	; 0x50f2 <vfscanf+0xee>
    50e2:	08 60       	ori	r16, 0x08	; 8
    50e4:	04 60       	ori	r16, 0x04	; 4
    50e6:	fe 01       	movw	r30, r28
    50e8:	e3 fc       	sbrc	r14, 3
    50ea:	15 91       	lpm	r17, Z+
    50ec:	e3 fe       	sbrs	r14, 3
    50ee:	11 91       	ld	r17, Z+
    50f0:	ef 01       	movw	r28, r30
    50f2:	11 23       	and	r17, r17
    50f4:	09 f4       	brne	.+2      	; 0x50f8 <vfscanf+0xf4>
    50f6:	8d c0       	rjmp	.+282    	; 0x5212 <vfscanf+0x20e>
    50f8:	61 2f       	mov	r22, r17
    50fa:	70 e0       	ldi	r23, 0x00	; 0
    50fc:	88 ef       	ldi	r24, 0xF8	; 248
    50fe:	90 e0       	ldi	r25, 0x00	; 0
    5100:	0e 94 6a 2a 	call	0x54d4	; 0x54d4 <strchr_P>
    5104:	89 2b       	or	r24, r25
    5106:	09 f4       	brne	.+2      	; 0x510a <vfscanf+0x106>
    5108:	84 c0       	rjmp	.+264    	; 0x5212 <vfscanf+0x20e>
    510a:	00 fd       	sbrc	r16, 0
    510c:	07 c0       	rjmp	.+14     	; 0x511c <vfscanf+0x118>
    510e:	f5 01       	movw	r30, r10
    5110:	80 80       	ld	r8, Z
    5112:	91 80       	ldd	r9, Z+1	; 0x01
    5114:	c5 01       	movw	r24, r10
    5116:	02 96       	adiw	r24, 0x02	; 2
    5118:	5c 01       	movw	r10, r24
    511a:	02 c0       	rjmp	.+4      	; 0x5120 <vfscanf+0x11c>
    511c:	81 2c       	mov	r8, r1
    511e:	91 2c       	mov	r9, r1
    5120:	1e 36       	cpi	r17, 0x6E	; 110
    5122:	51 f4       	brne	.+20     	; 0x5138 <vfscanf+0x134>
    5124:	f6 01       	movw	r30, r12
    5126:	46 81       	ldd	r20, Z+6	; 0x06
    5128:	57 81       	ldd	r21, Z+7	; 0x07
    512a:	60 e0       	ldi	r22, 0x00	; 0
    512c:	70 e0       	ldi	r23, 0x00	; 0
    512e:	20 2f       	mov	r18, r16
    5130:	c4 01       	movw	r24, r8
    5132:	0e 94 66 26 	call	0x4ccc	; 0x4ccc <putval>
    5136:	73 cf       	rjmp	.-282    	; 0x501e <vfscanf+0x1a>
    5138:	13 36       	cpi	r17, 0x63	; 99
    513a:	a9 f4       	brne	.+42     	; 0x5166 <vfscanf+0x162>
    513c:	01 fd       	sbrc	r16, 1
    513e:	02 c0       	rjmp	.+4      	; 0x5144 <vfscanf+0x140>
    5140:	ff 24       	eor	r15, r15
    5142:	f3 94       	inc	r15
    5144:	c6 01       	movw	r24, r12
    5146:	0e 94 a3 2a 	call	0x5546	; 0x5546 <fgetc>
    514a:	97 fd       	sbrc	r25, 7
    514c:	60 c0       	rjmp	.+192    	; 0x520e <vfscanf+0x20a>
    514e:	81 14       	cp	r8, r1
    5150:	91 04       	cpc	r9, r1
    5152:	29 f0       	breq	.+10     	; 0x515e <vfscanf+0x15a>
    5154:	f4 01       	movw	r30, r8
    5156:	80 83       	st	Z, r24
    5158:	c4 01       	movw	r24, r8
    515a:	01 96       	adiw	r24, 0x01	; 1
    515c:	4c 01       	movw	r8, r24
    515e:	fa 94       	dec	r15
    5160:	f1 10       	cpse	r15, r1
    5162:	f0 cf       	rjmp	.-32     	; 0x5144 <vfscanf+0x140>
    5164:	50 c0       	rjmp	.+160    	; 0x5206 <vfscanf+0x202>
    5166:	1b 35       	cpi	r17, 0x5B	; 91
    5168:	59 f4       	brne	.+22     	; 0x5180 <vfscanf+0x17c>
    516a:	9e 01       	movw	r18, r28
    516c:	a4 01       	movw	r20, r8
    516e:	6f 2d       	mov	r22, r15
    5170:	c6 01       	movw	r24, r12
    5172:	0e 94 44 27 	call	0x4e88	; 0x4e88 <conv_brk>
    5176:	ec 01       	movw	r28, r24
    5178:	89 2b       	or	r24, r25
    517a:	09 f0       	breq	.+2      	; 0x517e <vfscanf+0x17a>
    517c:	44 c0       	rjmp	.+136    	; 0x5206 <vfscanf+0x202>
    517e:	3e c0       	rjmp	.+124    	; 0x51fc <vfscanf+0x1f8>
    5180:	c6 01       	movw	r24, r12
    5182:	0e 94 99 26 	call	0x4d32	; 0x4d32 <skip_spaces>
    5186:	97 fd       	sbrc	r25, 7
    5188:	42 c0       	rjmp	.+132    	; 0x520e <vfscanf+0x20a>
    518a:	1f 36       	cpi	r17, 0x6F	; 111
    518c:	61 f1       	breq	.+88     	; 0x51e6 <vfscanf+0x1e2>
    518e:	28 f4       	brcc	.+10     	; 0x519a <vfscanf+0x196>
    5190:	14 36       	cpi	r17, 0x64	; 100
    5192:	39 f1       	breq	.+78     	; 0x51e2 <vfscanf+0x1de>
    5194:	19 36       	cpi	r17, 0x69	; 105
    5196:	51 f1       	breq	.+84     	; 0x51ec <vfscanf+0x1e8>
    5198:	28 c0       	rjmp	.+80     	; 0x51ea <vfscanf+0x1e6>
    519a:	13 37       	cpi	r17, 0x73	; 115
    519c:	71 f0       	breq	.+28     	; 0x51ba <vfscanf+0x1b6>
    519e:	15 37       	cpi	r17, 0x75	; 117
    51a0:	01 f1       	breq	.+64     	; 0x51e2 <vfscanf+0x1de>
    51a2:	23 c0       	rjmp	.+70     	; 0x51ea <vfscanf+0x1e6>
    51a4:	81 14       	cp	r8, r1
    51a6:	91 04       	cpc	r9, r1
    51a8:	29 f0       	breq	.+10     	; 0x51b4 <vfscanf+0x1b0>
    51aa:	f4 01       	movw	r30, r8
    51ac:	60 82       	st	Z, r6
    51ae:	c4 01       	movw	r24, r8
    51b0:	01 96       	adiw	r24, 0x01	; 1
    51b2:	4c 01       	movw	r8, r24
    51b4:	fa 94       	dec	r15
    51b6:	ff 20       	and	r15, r15
    51b8:	71 f0       	breq	.+28     	; 0x51d6 <vfscanf+0x1d2>
    51ba:	c6 01       	movw	r24, r12
    51bc:	0e 94 a3 2a 	call	0x5546	; 0x5546 <fgetc>
    51c0:	3c 01       	movw	r6, r24
    51c2:	97 fd       	sbrc	r25, 7
    51c4:	08 c0       	rjmp	.+16     	; 0x51d6 <vfscanf+0x1d2>
    51c6:	0e 94 61 2a 	call	0x54c2	; 0x54c2 <isspace>
    51ca:	89 2b       	or	r24, r25
    51cc:	59 f3       	breq	.-42     	; 0x51a4 <vfscanf+0x1a0>
    51ce:	b6 01       	movw	r22, r12
    51d0:	c3 01       	movw	r24, r6
    51d2:	0e 94 1d 2b 	call	0x563a	; 0x563a <ungetc>
    51d6:	81 14       	cp	r8, r1
    51d8:	91 04       	cpc	r9, r1
    51da:	a9 f0       	breq	.+42     	; 0x5206 <vfscanf+0x202>
    51dc:	f4 01       	movw	r30, r8
    51de:	10 82       	st	Z, r1
    51e0:	12 c0       	rjmp	.+36     	; 0x5206 <vfscanf+0x202>
    51e2:	00 62       	ori	r16, 0x20	; 32
    51e4:	03 c0       	rjmp	.+6      	; 0x51ec <vfscanf+0x1e8>
    51e6:	00 61       	ori	r16, 0x10	; 16
    51e8:	01 c0       	rjmp	.+2      	; 0x51ec <vfscanf+0x1e8>
    51ea:	00 64       	ori	r16, 0x40	; 64
    51ec:	20 2f       	mov	r18, r16
    51ee:	a4 01       	movw	r20, r8
    51f0:	6f 2d       	mov	r22, r15
    51f2:	c6 01       	movw	r24, r12
    51f4:	0e 94 b2 26 	call	0x4d64	; 0x4d64 <conv_int>
    51f8:	81 11       	cpse	r24, r1
    51fa:	05 c0       	rjmp	.+10     	; 0x5206 <vfscanf+0x202>
    51fc:	f6 01       	movw	r30, r12
    51fe:	83 81       	ldd	r24, Z+3	; 0x03
    5200:	80 73       	andi	r24, 0x30	; 48
    5202:	29 f4       	brne	.+10     	; 0x520e <vfscanf+0x20a>
    5204:	06 c0       	rjmp	.+12     	; 0x5212 <vfscanf+0x20e>
    5206:	00 fd       	sbrc	r16, 0
    5208:	0a cf       	rjmp	.-492    	; 0x501e <vfscanf+0x1a>
    520a:	53 94       	inc	r5
    520c:	08 cf       	rjmp	.-496    	; 0x501e <vfscanf+0x1a>
    520e:	55 20       	and	r5, r5
    5210:	19 f0       	breq	.+6      	; 0x5218 <vfscanf+0x214>
    5212:	85 2d       	mov	r24, r5
    5214:	90 e0       	ldi	r25, 0x00	; 0
    5216:	02 c0       	rjmp	.+4      	; 0x521c <vfscanf+0x218>
    5218:	8f ef       	ldi	r24, 0xFF	; 255
    521a:	9f ef       	ldi	r25, 0xFF	; 255
    521c:	cd b7       	in	r28, 0x3d	; 61
    521e:	de b7       	in	r29, 0x3e	; 62
    5220:	ef e0       	ldi	r30, 0x0F	; 15
    5222:	0c 94 b6 2b 	jmp	0x576c	; 0x576c <__epilogue_restores__+0x6>

00005226 <strtod>:
    5226:	a0 e0       	ldi	r26, 0x00	; 0
    5228:	b0 e0       	ldi	r27, 0x00	; 0
    522a:	e9 e1       	ldi	r30, 0x19	; 25
    522c:	f9 e2       	ldi	r31, 0x29	; 41
    522e:	0c 94 9d 2b 	jmp	0x573a	; 0x573a <__prologue_saves__+0xc>
    5232:	ec 01       	movw	r28, r24
    5234:	6b 01       	movw	r12, r22
    5236:	61 15       	cp	r22, r1
    5238:	71 05       	cpc	r23, r1
    523a:	19 f0       	breq	.+6      	; 0x5242 <strtod+0x1c>
    523c:	fb 01       	movw	r30, r22
    523e:	91 83       	std	Z+1, r25	; 0x01
    5240:	80 83       	st	Z, r24
    5242:	7e 01       	movw	r14, r28
    5244:	ff ef       	ldi	r31, 0xFF	; 255
    5246:	ef 1a       	sub	r14, r31
    5248:	ff 0a       	sbc	r15, r31
    524a:	08 81       	ld	r16, Y
    524c:	80 2f       	mov	r24, r16
    524e:	90 e0       	ldi	r25, 0x00	; 0
    5250:	0e 94 61 2a 	call	0x54c2	; 0x54c2 <isspace>
    5254:	89 2b       	or	r24, r25
    5256:	11 f0       	breq	.+4      	; 0x525c <strtod+0x36>
    5258:	e7 01       	movw	r28, r14
    525a:	f3 cf       	rjmp	.-26     	; 0x5242 <strtod+0x1c>
    525c:	0d 32       	cpi	r16, 0x2D	; 45
    525e:	39 f4       	brne	.+14     	; 0x526e <strtod+0x48>
    5260:	7e 01       	movw	r14, r28
    5262:	82 e0       	ldi	r24, 0x02	; 2
    5264:	e8 0e       	add	r14, r24
    5266:	f1 1c       	adc	r15, r1
    5268:	09 81       	ldd	r16, Y+1	; 0x01
    526a:	11 e0       	ldi	r17, 0x01	; 1
    526c:	08 c0       	rjmp	.+16     	; 0x527e <strtod+0x58>
    526e:	0b 32       	cpi	r16, 0x2B	; 43
    5270:	29 f4       	brne	.+10     	; 0x527c <strtod+0x56>
    5272:	7e 01       	movw	r14, r28
    5274:	92 e0       	ldi	r25, 0x02	; 2
    5276:	e9 0e       	add	r14, r25
    5278:	f1 1c       	adc	r15, r1
    527a:	09 81       	ldd	r16, Y+1	; 0x01
    527c:	10 e0       	ldi	r17, 0x00	; 0
    527e:	e7 01       	movw	r28, r14
    5280:	21 97       	sbiw	r28, 0x01	; 1
    5282:	43 e0       	ldi	r20, 0x03	; 3
    5284:	50 e0       	ldi	r21, 0x00	; 0
    5286:	6c e0       	ldi	r22, 0x0C	; 12
    5288:	71 e0       	ldi	r23, 0x01	; 1
    528a:	ce 01       	movw	r24, r28
    528c:	0e 94 75 2a 	call	0x54ea	; 0x54ea <strncasecmp_P>
    5290:	89 2b       	or	r24, r25
    5292:	c1 f4       	brne	.+48     	; 0x52c4 <strtod+0x9e>
    5294:	23 96       	adiw	r28, 0x03	; 3
    5296:	45 e0       	ldi	r20, 0x05	; 5
    5298:	50 e0       	ldi	r21, 0x00	; 0
    529a:	67 e0       	ldi	r22, 0x07	; 7
    529c:	71 e0       	ldi	r23, 0x01	; 1
    529e:	ce 01       	movw	r24, r28
    52a0:	0e 94 75 2a 	call	0x54ea	; 0x54ea <strncasecmp_P>
    52a4:	89 2b       	or	r24, r25
    52a6:	09 f4       	brne	.+2      	; 0x52aa <strtod+0x84>
    52a8:	25 96       	adiw	r28, 0x05	; 5
    52aa:	c1 14       	cp	r12, r1
    52ac:	d1 04       	cpc	r13, r1
    52ae:	19 f0       	breq	.+6      	; 0x52b6 <strtod+0x90>
    52b0:	f6 01       	movw	r30, r12
    52b2:	d1 83       	std	Z+1, r29	; 0x01
    52b4:	c0 83       	st	Z, r28
    52b6:	11 11       	cpse	r17, r1
    52b8:	f6 c0       	rjmp	.+492    	; 0x54a6 <strtod+0x280>
    52ba:	60 e0       	ldi	r22, 0x00	; 0
    52bc:	70 e0       	ldi	r23, 0x00	; 0
    52be:	80 e8       	ldi	r24, 0x80	; 128
    52c0:	9f e7       	ldi	r25, 0x7F	; 127
    52c2:	fa c0       	rjmp	.+500    	; 0x54b8 <strtod+0x292>
    52c4:	43 e0       	ldi	r20, 0x03	; 3
    52c6:	50 e0       	ldi	r21, 0x00	; 0
    52c8:	64 e0       	ldi	r22, 0x04	; 4
    52ca:	71 e0       	ldi	r23, 0x01	; 1
    52cc:	ce 01       	movw	r24, r28
    52ce:	0e 94 75 2a 	call	0x54ea	; 0x54ea <strncasecmp_P>
    52d2:	89 2b       	or	r24, r25
    52d4:	59 f4       	brne	.+22     	; 0x52ec <strtod+0xc6>
    52d6:	c1 14       	cp	r12, r1
    52d8:	d1 04       	cpc	r13, r1
    52da:	09 f4       	brne	.+2      	; 0x52de <strtod+0xb8>
    52dc:	e9 c0       	rjmp	.+466    	; 0x54b0 <strtod+0x28a>
    52de:	f2 e0       	ldi	r31, 0x02	; 2
    52e0:	ef 0e       	add	r14, r31
    52e2:	f1 1c       	adc	r15, r1
    52e4:	f6 01       	movw	r30, r12
    52e6:	f1 82       	std	Z+1, r15	; 0x01
    52e8:	e0 82       	st	Z, r14
    52ea:	e2 c0       	rjmp	.+452    	; 0x54b0 <strtod+0x28a>
    52ec:	20 e0       	ldi	r18, 0x00	; 0
    52ee:	30 e0       	ldi	r19, 0x00	; 0
    52f0:	a9 01       	movw	r20, r18
    52f2:	c0 e0       	ldi	r28, 0x00	; 0
    52f4:	d0 e0       	ldi	r29, 0x00	; 0
    52f6:	f7 01       	movw	r30, r14
    52f8:	80 ed       	ldi	r24, 0xD0	; 208
    52fa:	a8 2e       	mov	r10, r24
    52fc:	a0 0e       	add	r10, r16
    52fe:	89 e0       	ldi	r24, 0x09	; 9
    5300:	8a 15       	cp	r24, r10
    5302:	30 f1       	brcs	.+76     	; 0x5350 <strtod+0x12a>
    5304:	91 2f       	mov	r25, r17
    5306:	92 60       	ori	r25, 0x02	; 2
    5308:	b9 2e       	mov	r11, r25
    530a:	81 2f       	mov	r24, r17
    530c:	88 70       	andi	r24, 0x08	; 8
    530e:	12 ff       	sbrs	r17, 2
    5310:	04 c0       	rjmp	.+8      	; 0x531a <strtod+0xf4>
    5312:	81 11       	cpse	r24, r1
    5314:	24 c0       	rjmp	.+72     	; 0x535e <strtod+0x138>
    5316:	21 96       	adiw	r28, 0x01	; 1
    5318:	22 c0       	rjmp	.+68     	; 0x535e <strtod+0x138>
    531a:	81 11       	cpse	r24, r1
    531c:	21 97       	sbiw	r28, 0x01	; 1
    531e:	a5 e0       	ldi	r26, 0x05	; 5
    5320:	b0 e0       	ldi	r27, 0x00	; 0
    5322:	0e 94 0a 23 	call	0x4614	; 0x4614 <__muluhisi3>
    5326:	dc 01       	movw	r26, r24
    5328:	cb 01       	movw	r24, r22
    532a:	88 0f       	add	r24, r24
    532c:	99 1f       	adc	r25, r25
    532e:	aa 1f       	adc	r26, r26
    5330:	bb 1f       	adc	r27, r27
    5332:	9c 01       	movw	r18, r24
    5334:	ad 01       	movw	r20, r26
    5336:	2a 0d       	add	r18, r10
    5338:	31 1d       	adc	r19, r1
    533a:	41 1d       	adc	r20, r1
    533c:	51 1d       	adc	r21, r1
    533e:	28 39       	cpi	r18, 0x98	; 152
    5340:	89 e9       	ldi	r24, 0x99	; 153
    5342:	38 07       	cpc	r19, r24
    5344:	48 07       	cpc	r20, r24
    5346:	89 e1       	ldi	r24, 0x19	; 25
    5348:	58 07       	cpc	r21, r24
    534a:	48 f0       	brcs	.+18     	; 0x535e <strtod+0x138>
    534c:	16 60       	ori	r17, 0x06	; 6
    534e:	06 c0       	rjmp	.+12     	; 0x535c <strtod+0x136>
    5350:	9e ef       	ldi	r25, 0xFE	; 254
    5352:	a9 12       	cpse	r10, r25
    5354:	0a c0       	rjmp	.+20     	; 0x536a <strtod+0x144>
    5356:	13 fd       	sbrc	r17, 3
    5358:	40 c0       	rjmp	.+128    	; 0x53da <strtod+0x1b4>
    535a:	18 60       	ori	r17, 0x08	; 8
    535c:	b1 2e       	mov	r11, r17
    535e:	8f ef       	ldi	r24, 0xFF	; 255
    5360:	e8 1a       	sub	r14, r24
    5362:	f8 0a       	sbc	r15, r24
    5364:	00 81       	ld	r16, Z
    5366:	1b 2d       	mov	r17, r11
    5368:	c6 cf       	rjmp	.-116    	; 0x52f6 <strtod+0xd0>
    536a:	80 2f       	mov	r24, r16
    536c:	8f 7d       	andi	r24, 0xDF	; 223
    536e:	85 34       	cpi	r24, 0x45	; 69
    5370:	a1 f5       	brne	.+104    	; 0x53da <strtod+0x1b4>
    5372:	80 81       	ld	r24, Z
    5374:	8d 32       	cpi	r24, 0x2D	; 45
    5376:	11 f4       	brne	.+4      	; 0x537c <strtod+0x156>
    5378:	10 61       	ori	r17, 0x10	; 16
    537a:	06 c0       	rjmp	.+12     	; 0x5388 <strtod+0x162>
    537c:	8b 32       	cpi	r24, 0x2B	; 43
    537e:	21 f0       	breq	.+8      	; 0x5388 <strtod+0x162>
    5380:	31 96       	adiw	r30, 0x01	; 1
    5382:	61 e0       	ldi	r22, 0x01	; 1
    5384:	70 e0       	ldi	r23, 0x00	; 0
    5386:	04 c0       	rjmp	.+8      	; 0x5390 <strtod+0x16a>
    5388:	81 81       	ldd	r24, Z+1	; 0x01
    538a:	32 96       	adiw	r30, 0x02	; 2
    538c:	62 e0       	ldi	r22, 0x02	; 2
    538e:	70 e0       	ldi	r23, 0x00	; 0
    5390:	80 53       	subi	r24, 0x30	; 48
    5392:	8a 30       	cpi	r24, 0x0A	; 10
    5394:	18 f0       	brcs	.+6      	; 0x539c <strtod+0x176>
    5396:	e6 1b       	sub	r30, r22
    5398:	f7 0b       	sbc	r31, r23
    539a:	1f c0       	rjmp	.+62     	; 0x53da <strtod+0x1b4>
    539c:	60 e0       	ldi	r22, 0x00	; 0
    539e:	70 e0       	ldi	r23, 0x00	; 0
    53a0:	60 38       	cpi	r22, 0x80	; 128
    53a2:	9c e0       	ldi	r25, 0x0C	; 12
    53a4:	79 07       	cpc	r23, r25
    53a6:	5c f4       	brge	.+22     	; 0x53be <strtod+0x198>
    53a8:	db 01       	movw	r26, r22
    53aa:	aa 0f       	add	r26, r26
    53ac:	bb 1f       	adc	r27, r27
    53ae:	aa 0f       	add	r26, r26
    53b0:	bb 1f       	adc	r27, r27
    53b2:	6a 0f       	add	r22, r26
    53b4:	7b 1f       	adc	r23, r27
    53b6:	66 0f       	add	r22, r22
    53b8:	77 1f       	adc	r23, r23
    53ba:	68 0f       	add	r22, r24
    53bc:	71 1d       	adc	r23, r1
    53be:	31 96       	adiw	r30, 0x01	; 1
    53c0:	df 01       	movw	r26, r30
    53c2:	11 97       	sbiw	r26, 0x01	; 1
    53c4:	8c 91       	ld	r24, X
    53c6:	80 53       	subi	r24, 0x30	; 48
    53c8:	8a 30       	cpi	r24, 0x0A	; 10
    53ca:	50 f3       	brcs	.-44     	; 0x53a0 <strtod+0x17a>
    53cc:	14 ff       	sbrs	r17, 4
    53ce:	03 c0       	rjmp	.+6      	; 0x53d6 <strtod+0x1b0>
    53d0:	71 95       	neg	r23
    53d2:	61 95       	neg	r22
    53d4:	71 09       	sbc	r23, r1
    53d6:	c6 0f       	add	r28, r22
    53d8:	d7 1f       	adc	r29, r23
    53da:	11 ff       	sbrs	r17, 1
    53dc:	08 c0       	rjmp	.+16     	; 0x53ee <strtod+0x1c8>
    53de:	c1 14       	cp	r12, r1
    53e0:	d1 04       	cpc	r13, r1
    53e2:	29 f0       	breq	.+10     	; 0x53ee <strtod+0x1c8>
    53e4:	cf 01       	movw	r24, r30
    53e6:	01 97       	sbiw	r24, 0x01	; 1
    53e8:	f6 01       	movw	r30, r12
    53ea:	91 83       	std	Z+1, r25	; 0x01
    53ec:	80 83       	st	Z, r24
    53ee:	ca 01       	movw	r24, r20
    53f0:	b9 01       	movw	r22, r18
    53f2:	0e 94 a5 21 	call	0x434a	; 0x434a <__floatunsisf>
    53f6:	21 2f       	mov	r18, r17
    53f8:	23 70       	andi	r18, 0x03	; 3
    53fa:	23 30       	cpi	r18, 0x03	; 3
    53fc:	19 f0       	breq	.+6      	; 0x5404 <strtod+0x1de>
    53fe:	4b 01       	movw	r8, r22
    5400:	5c 01       	movw	r10, r24
    5402:	06 c0       	rjmp	.+12     	; 0x5410 <strtod+0x1ea>
    5404:	4b 01       	movw	r8, r22
    5406:	5c 01       	movw	r10, r24
    5408:	b7 fa       	bst	r11, 7
    540a:	b0 94       	com	r11
    540c:	b7 f8       	bld	r11, 7
    540e:	b0 94       	com	r11
    5410:	20 e0       	ldi	r18, 0x00	; 0
    5412:	30 e0       	ldi	r19, 0x00	; 0
    5414:	a9 01       	movw	r20, r18
    5416:	c5 01       	movw	r24, r10
    5418:	b4 01       	movw	r22, r8
    541a:	0e 94 f8 20 	call	0x41f0	; 0x41f0 <__cmpsf2>
    541e:	88 23       	and	r24, r24
    5420:	09 f4       	brne	.+2      	; 0x5424 <strtod+0x1fe>
    5422:	3e c0       	rjmp	.+124    	; 0x54a0 <strtod+0x27a>
    5424:	d7 ff       	sbrs	r29, 7
    5426:	06 c0       	rjmp	.+12     	; 0x5434 <strtod+0x20e>
    5428:	d1 95       	neg	r29
    542a:	c1 95       	neg	r28
    542c:	d1 09       	sbc	r29, r1
    542e:	03 e2       	ldi	r16, 0x23	; 35
    5430:	11 e0       	ldi	r17, 0x01	; 1
    5432:	02 c0       	rjmp	.+4      	; 0x5438 <strtod+0x212>
    5434:	0b e3       	ldi	r16, 0x3B	; 59
    5436:	11 e0       	ldi	r17, 0x01	; 1
    5438:	68 01       	movw	r12, r16
    543a:	f8 e1       	ldi	r31, 0x18	; 24
    543c:	cf 1a       	sub	r12, r31
    543e:	d1 08       	sbc	r13, r1
    5440:	90 e2       	ldi	r25, 0x20	; 32
    5442:	e9 2e       	mov	r14, r25
    5444:	f1 2c       	mov	r15, r1
    5446:	ce 15       	cp	r28, r14
    5448:	df 05       	cpc	r29, r15
    544a:	74 f0       	brlt	.+28     	; 0x5468 <strtod+0x242>
    544c:	f8 01       	movw	r30, r16
    544e:	25 91       	lpm	r18, Z+
    5450:	35 91       	lpm	r19, Z+
    5452:	45 91       	lpm	r20, Z+
    5454:	54 91       	lpm	r21, Z
    5456:	c5 01       	movw	r24, r10
    5458:	b4 01       	movw	r22, r8
    545a:	0e 94 5c 22 	call	0x44b8	; 0x44b8 <__mulsf3>
    545e:	4b 01       	movw	r8, r22
    5460:	5c 01       	movw	r10, r24
    5462:	ce 19       	sub	r28, r14
    5464:	df 09       	sbc	r29, r15
    5466:	ef cf       	rjmp	.-34     	; 0x5446 <strtod+0x220>
    5468:	04 50       	subi	r16, 0x04	; 4
    546a:	11 09       	sbc	r17, r1
    546c:	f5 94       	asr	r15
    546e:	e7 94       	ror	r14
    5470:	0c 15       	cp	r16, r12
    5472:	1d 05       	cpc	r17, r13
    5474:	41 f7       	brne	.-48     	; 0x5446 <strtod+0x220>
    5476:	8a 2d       	mov	r24, r10
    5478:	88 0f       	add	r24, r24
    547a:	8b 2d       	mov	r24, r11
    547c:	88 1f       	adc	r24, r24
    547e:	8f 3f       	cpi	r24, 0xFF	; 255
    5480:	49 f0       	breq	.+18     	; 0x5494 <strtod+0x26e>
    5482:	20 e0       	ldi	r18, 0x00	; 0
    5484:	30 e0       	ldi	r19, 0x00	; 0
    5486:	a9 01       	movw	r20, r18
    5488:	c5 01       	movw	r24, r10
    548a:	b4 01       	movw	r22, r8
    548c:	0e 94 f8 20 	call	0x41f0	; 0x41f0 <__cmpsf2>
    5490:	81 11       	cpse	r24, r1
    5492:	06 c0       	rjmp	.+12     	; 0x54a0 <strtod+0x27a>
    5494:	82 e2       	ldi	r24, 0x22	; 34
    5496:	90 e0       	ldi	r25, 0x00	; 0
    5498:	90 93 36 07 	sts	0x0736, r25	; 0x800736 <errno+0x1>
    549c:	80 93 35 07 	sts	0x0735, r24	; 0x800735 <errno>
    54a0:	c5 01       	movw	r24, r10
    54a2:	b4 01       	movw	r22, r8
    54a4:	09 c0       	rjmp	.+18     	; 0x54b8 <strtod+0x292>
    54a6:	60 e0       	ldi	r22, 0x00	; 0
    54a8:	70 e0       	ldi	r23, 0x00	; 0
    54aa:	80 e8       	ldi	r24, 0x80	; 128
    54ac:	9f ef       	ldi	r25, 0xFF	; 255
    54ae:	04 c0       	rjmp	.+8      	; 0x54b8 <strtod+0x292>
    54b0:	60 e0       	ldi	r22, 0x00	; 0
    54b2:	70 e0       	ldi	r23, 0x00	; 0
    54b4:	80 ec       	ldi	r24, 0xC0	; 192
    54b6:	9f e7       	ldi	r25, 0x7F	; 127
    54b8:	cd b7       	in	r28, 0x3d	; 61
    54ba:	de b7       	in	r29, 0x3e	; 62
    54bc:	ec e0       	ldi	r30, 0x0C	; 12
    54be:	0c 94 b9 2b 	jmp	0x5772	; 0x5772 <__epilogue_restores__+0xc>

000054c2 <isspace>:
    54c2:	91 11       	cpse	r25, r1
    54c4:	0c 94 94 2b 	jmp	0x5728	; 0x5728 <__ctype_isfalse>
    54c8:	80 32       	cpi	r24, 0x20	; 32
    54ca:	19 f0       	breq	.+6      	; 0x54d2 <isspace+0x10>
    54cc:	89 50       	subi	r24, 0x09	; 9
    54ce:	85 50       	subi	r24, 0x05	; 5
    54d0:	c8 f7       	brcc	.-14     	; 0x54c4 <isspace+0x2>
    54d2:	08 95       	ret

000054d4 <strchr_P>:
    54d4:	fc 01       	movw	r30, r24
    54d6:	05 90       	lpm	r0, Z+
    54d8:	06 16       	cp	r0, r22
    54da:	21 f0       	breq	.+8      	; 0x54e4 <strchr_P+0x10>
    54dc:	00 20       	and	r0, r0
    54de:	d9 f7       	brne	.-10     	; 0x54d6 <strchr_P+0x2>
    54e0:	c0 01       	movw	r24, r0
    54e2:	08 95       	ret
    54e4:	31 97       	sbiw	r30, 0x01	; 1
    54e6:	cf 01       	movw	r24, r30
    54e8:	08 95       	ret

000054ea <strncasecmp_P>:
    54ea:	fb 01       	movw	r30, r22
    54ec:	dc 01       	movw	r26, r24
    54ee:	41 50       	subi	r20, 0x01	; 1
    54f0:	50 40       	sbci	r21, 0x00	; 0
    54f2:	88 f0       	brcs	.+34     	; 0x5516 <strncasecmp_P+0x2c>
    54f4:	8d 91       	ld	r24, X+
    54f6:	81 34       	cpi	r24, 0x41	; 65
    54f8:	1c f0       	brlt	.+6      	; 0x5500 <strncasecmp_P+0x16>
    54fa:	8b 35       	cpi	r24, 0x5B	; 91
    54fc:	0c f4       	brge	.+2      	; 0x5500 <strncasecmp_P+0x16>
    54fe:	80 5e       	subi	r24, 0xE0	; 224
    5500:	65 91       	lpm	r22, Z+
    5502:	61 34       	cpi	r22, 0x41	; 65
    5504:	1c f0       	brlt	.+6      	; 0x550c <strncasecmp_P+0x22>
    5506:	6b 35       	cpi	r22, 0x5B	; 91
    5508:	0c f4       	brge	.+2      	; 0x550c <strncasecmp_P+0x22>
    550a:	60 5e       	subi	r22, 0xE0	; 224
    550c:	86 1b       	sub	r24, r22
    550e:	61 11       	cpse	r22, r1
    5510:	71 f3       	breq	.-36     	; 0x54ee <strncasecmp_P+0x4>
    5512:	99 0b       	sbc	r25, r25
    5514:	08 95       	ret
    5516:	88 1b       	sub	r24, r24
    5518:	fc cf       	rjmp	.-8      	; 0x5512 <strncasecmp_P+0x28>

0000551a <strnlen_P>:
    551a:	fc 01       	movw	r30, r24
    551c:	05 90       	lpm	r0, Z+
    551e:	61 50       	subi	r22, 0x01	; 1
    5520:	70 40       	sbci	r23, 0x00	; 0
    5522:	01 10       	cpse	r0, r1
    5524:	d8 f7       	brcc	.-10     	; 0x551c <strnlen_P+0x2>
    5526:	80 95       	com	r24
    5528:	90 95       	com	r25
    552a:	8e 0f       	add	r24, r30
    552c:	9f 1f       	adc	r25, r31
    552e:	08 95       	ret

00005530 <strnlen>:
    5530:	fc 01       	movw	r30, r24
    5532:	61 50       	subi	r22, 0x01	; 1
    5534:	70 40       	sbci	r23, 0x00	; 0
    5536:	01 90       	ld	r0, Z+
    5538:	01 10       	cpse	r0, r1
    553a:	d8 f7       	brcc	.-10     	; 0x5532 <strnlen+0x2>
    553c:	80 95       	com	r24
    553e:	90 95       	com	r25
    5540:	8e 0f       	add	r24, r30
    5542:	9f 1f       	adc	r25, r31
    5544:	08 95       	ret

00005546 <fgetc>:
    5546:	cf 93       	push	r28
    5548:	df 93       	push	r29
    554a:	ec 01       	movw	r28, r24
    554c:	2b 81       	ldd	r18, Y+3	; 0x03
    554e:	20 ff       	sbrs	r18, 0
    5550:	33 c0       	rjmp	.+102    	; 0x55b8 <fgetc+0x72>
    5552:	26 ff       	sbrs	r18, 6
    5554:	0a c0       	rjmp	.+20     	; 0x556a <fgetc+0x24>
    5556:	2f 7b       	andi	r18, 0xBF	; 191
    5558:	2b 83       	std	Y+3, r18	; 0x03
    555a:	8e 81       	ldd	r24, Y+6	; 0x06
    555c:	9f 81       	ldd	r25, Y+7	; 0x07
    555e:	01 96       	adiw	r24, 0x01	; 1
    5560:	9f 83       	std	Y+7, r25	; 0x07
    5562:	8e 83       	std	Y+6, r24	; 0x06
    5564:	8a 81       	ldd	r24, Y+2	; 0x02
    5566:	90 e0       	ldi	r25, 0x00	; 0
    5568:	29 c0       	rjmp	.+82     	; 0x55bc <fgetc+0x76>
    556a:	22 ff       	sbrs	r18, 2
    556c:	0f c0       	rjmp	.+30     	; 0x558c <fgetc+0x46>
    556e:	e8 81       	ld	r30, Y
    5570:	f9 81       	ldd	r31, Y+1	; 0x01
    5572:	80 81       	ld	r24, Z
    5574:	08 2e       	mov	r0, r24
    5576:	00 0c       	add	r0, r0
    5578:	99 0b       	sbc	r25, r25
    557a:	00 97       	sbiw	r24, 0x00	; 0
    557c:	19 f4       	brne	.+6      	; 0x5584 <fgetc+0x3e>
    557e:	20 62       	ori	r18, 0x20	; 32
    5580:	2b 83       	std	Y+3, r18	; 0x03
    5582:	1a c0       	rjmp	.+52     	; 0x55b8 <fgetc+0x72>
    5584:	31 96       	adiw	r30, 0x01	; 1
    5586:	f9 83       	std	Y+1, r31	; 0x01
    5588:	e8 83       	st	Y, r30
    558a:	0e c0       	rjmp	.+28     	; 0x55a8 <fgetc+0x62>
    558c:	ea 85       	ldd	r30, Y+10	; 0x0a
    558e:	fb 85       	ldd	r31, Y+11	; 0x0b
    5590:	09 95       	icall
    5592:	97 ff       	sbrs	r25, 7
    5594:	09 c0       	rjmp	.+18     	; 0x55a8 <fgetc+0x62>
    5596:	2b 81       	ldd	r18, Y+3	; 0x03
    5598:	01 96       	adiw	r24, 0x01	; 1
    559a:	11 f0       	breq	.+4      	; 0x55a0 <fgetc+0x5a>
    559c:	80 e2       	ldi	r24, 0x20	; 32
    559e:	01 c0       	rjmp	.+2      	; 0x55a2 <fgetc+0x5c>
    55a0:	80 e1       	ldi	r24, 0x10	; 16
    55a2:	82 2b       	or	r24, r18
    55a4:	8b 83       	std	Y+3, r24	; 0x03
    55a6:	08 c0       	rjmp	.+16     	; 0x55b8 <fgetc+0x72>
    55a8:	2e 81       	ldd	r18, Y+6	; 0x06
    55aa:	3f 81       	ldd	r19, Y+7	; 0x07
    55ac:	2f 5f       	subi	r18, 0xFF	; 255
    55ae:	3f 4f       	sbci	r19, 0xFF	; 255
    55b0:	3f 83       	std	Y+7, r19	; 0x07
    55b2:	2e 83       	std	Y+6, r18	; 0x06
    55b4:	99 27       	eor	r25, r25
    55b6:	02 c0       	rjmp	.+4      	; 0x55bc <fgetc+0x76>
    55b8:	8f ef       	ldi	r24, 0xFF	; 255
    55ba:	9f ef       	ldi	r25, 0xFF	; 255
    55bc:	df 91       	pop	r29
    55be:	cf 91       	pop	r28
    55c0:	08 95       	ret

000055c2 <fputc>:
    55c2:	0f 93       	push	r16
    55c4:	1f 93       	push	r17
    55c6:	cf 93       	push	r28
    55c8:	df 93       	push	r29
    55ca:	fb 01       	movw	r30, r22
    55cc:	23 81       	ldd	r18, Z+3	; 0x03
    55ce:	21 fd       	sbrc	r18, 1
    55d0:	03 c0       	rjmp	.+6      	; 0x55d8 <fputc+0x16>
    55d2:	8f ef       	ldi	r24, 0xFF	; 255
    55d4:	9f ef       	ldi	r25, 0xFF	; 255
    55d6:	2c c0       	rjmp	.+88     	; 0x5630 <fputc+0x6e>
    55d8:	22 ff       	sbrs	r18, 2
    55da:	16 c0       	rjmp	.+44     	; 0x5608 <fputc+0x46>
    55dc:	46 81       	ldd	r20, Z+6	; 0x06
    55de:	57 81       	ldd	r21, Z+7	; 0x07
    55e0:	24 81       	ldd	r18, Z+4	; 0x04
    55e2:	35 81       	ldd	r19, Z+5	; 0x05
    55e4:	42 17       	cp	r20, r18
    55e6:	53 07       	cpc	r21, r19
    55e8:	44 f4       	brge	.+16     	; 0x55fa <fputc+0x38>
    55ea:	a0 81       	ld	r26, Z
    55ec:	b1 81       	ldd	r27, Z+1	; 0x01
    55ee:	9d 01       	movw	r18, r26
    55f0:	2f 5f       	subi	r18, 0xFF	; 255
    55f2:	3f 4f       	sbci	r19, 0xFF	; 255
    55f4:	31 83       	std	Z+1, r19	; 0x01
    55f6:	20 83       	st	Z, r18
    55f8:	8c 93       	st	X, r24
    55fa:	26 81       	ldd	r18, Z+6	; 0x06
    55fc:	37 81       	ldd	r19, Z+7	; 0x07
    55fe:	2f 5f       	subi	r18, 0xFF	; 255
    5600:	3f 4f       	sbci	r19, 0xFF	; 255
    5602:	37 83       	std	Z+7, r19	; 0x07
    5604:	26 83       	std	Z+6, r18	; 0x06
    5606:	14 c0       	rjmp	.+40     	; 0x5630 <fputc+0x6e>
    5608:	8b 01       	movw	r16, r22
    560a:	ec 01       	movw	r28, r24
    560c:	fb 01       	movw	r30, r22
    560e:	00 84       	ldd	r0, Z+8	; 0x08
    5610:	f1 85       	ldd	r31, Z+9	; 0x09
    5612:	e0 2d       	mov	r30, r0
    5614:	09 95       	icall
    5616:	89 2b       	or	r24, r25
    5618:	e1 f6       	brne	.-72     	; 0x55d2 <fputc+0x10>
    561a:	d8 01       	movw	r26, r16
    561c:	16 96       	adiw	r26, 0x06	; 6
    561e:	8d 91       	ld	r24, X+
    5620:	9c 91       	ld	r25, X
    5622:	17 97       	sbiw	r26, 0x07	; 7
    5624:	01 96       	adiw	r24, 0x01	; 1
    5626:	17 96       	adiw	r26, 0x07	; 7
    5628:	9c 93       	st	X, r25
    562a:	8e 93       	st	-X, r24
    562c:	16 97       	sbiw	r26, 0x06	; 6
    562e:	ce 01       	movw	r24, r28
    5630:	df 91       	pop	r29
    5632:	cf 91       	pop	r28
    5634:	1f 91       	pop	r17
    5636:	0f 91       	pop	r16
    5638:	08 95       	ret

0000563a <ungetc>:
    563a:	fb 01       	movw	r30, r22
    563c:	23 81       	ldd	r18, Z+3	; 0x03
    563e:	20 ff       	sbrs	r18, 0
    5640:	12 c0       	rjmp	.+36     	; 0x5666 <ungetc+0x2c>
    5642:	26 fd       	sbrc	r18, 6
    5644:	10 c0       	rjmp	.+32     	; 0x5666 <ungetc+0x2c>
    5646:	8f 3f       	cpi	r24, 0xFF	; 255
    5648:	3f ef       	ldi	r19, 0xFF	; 255
    564a:	93 07       	cpc	r25, r19
    564c:	61 f0       	breq	.+24     	; 0x5666 <ungetc+0x2c>
    564e:	82 83       	std	Z+2, r24	; 0x02
    5650:	2f 7d       	andi	r18, 0xDF	; 223
    5652:	20 64       	ori	r18, 0x40	; 64
    5654:	23 83       	std	Z+3, r18	; 0x03
    5656:	26 81       	ldd	r18, Z+6	; 0x06
    5658:	37 81       	ldd	r19, Z+7	; 0x07
    565a:	21 50       	subi	r18, 0x01	; 1
    565c:	31 09       	sbc	r19, r1
    565e:	37 83       	std	Z+7, r19	; 0x07
    5660:	26 83       	std	Z+6, r18	; 0x06
    5662:	99 27       	eor	r25, r25
    5664:	08 95       	ret
    5666:	8f ef       	ldi	r24, 0xFF	; 255
    5668:	9f ef       	ldi	r25, 0xFF	; 255
    566a:	08 95       	ret

0000566c <__ultoa_invert>:
    566c:	fa 01       	movw	r30, r20
    566e:	aa 27       	eor	r26, r26
    5670:	28 30       	cpi	r18, 0x08	; 8
    5672:	51 f1       	breq	.+84     	; 0x56c8 <__ultoa_invert+0x5c>
    5674:	20 31       	cpi	r18, 0x10	; 16
    5676:	81 f1       	breq	.+96     	; 0x56d8 <__ultoa_invert+0x6c>
    5678:	e8 94       	clt
    567a:	6f 93       	push	r22
    567c:	6e 7f       	andi	r22, 0xFE	; 254
    567e:	6e 5f       	subi	r22, 0xFE	; 254
    5680:	7f 4f       	sbci	r23, 0xFF	; 255
    5682:	8f 4f       	sbci	r24, 0xFF	; 255
    5684:	9f 4f       	sbci	r25, 0xFF	; 255
    5686:	af 4f       	sbci	r26, 0xFF	; 255
    5688:	b1 e0       	ldi	r27, 0x01	; 1
    568a:	3e d0       	rcall	.+124    	; 0x5708 <__ultoa_invert+0x9c>
    568c:	b4 e0       	ldi	r27, 0x04	; 4
    568e:	3c d0       	rcall	.+120    	; 0x5708 <__ultoa_invert+0x9c>
    5690:	67 0f       	add	r22, r23
    5692:	78 1f       	adc	r23, r24
    5694:	89 1f       	adc	r24, r25
    5696:	9a 1f       	adc	r25, r26
    5698:	a1 1d       	adc	r26, r1
    569a:	68 0f       	add	r22, r24
    569c:	79 1f       	adc	r23, r25
    569e:	8a 1f       	adc	r24, r26
    56a0:	91 1d       	adc	r25, r1
    56a2:	a1 1d       	adc	r26, r1
    56a4:	6a 0f       	add	r22, r26
    56a6:	71 1d       	adc	r23, r1
    56a8:	81 1d       	adc	r24, r1
    56aa:	91 1d       	adc	r25, r1
    56ac:	a1 1d       	adc	r26, r1
    56ae:	20 d0       	rcall	.+64     	; 0x56f0 <__ultoa_invert+0x84>
    56b0:	09 f4       	brne	.+2      	; 0x56b4 <__ultoa_invert+0x48>
    56b2:	68 94       	set
    56b4:	3f 91       	pop	r19
    56b6:	2a e0       	ldi	r18, 0x0A	; 10
    56b8:	26 9f       	mul	r18, r22
    56ba:	11 24       	eor	r1, r1
    56bc:	30 19       	sub	r19, r0
    56be:	30 5d       	subi	r19, 0xD0	; 208
    56c0:	31 93       	st	Z+, r19
    56c2:	de f6       	brtc	.-74     	; 0x567a <__ultoa_invert+0xe>
    56c4:	cf 01       	movw	r24, r30
    56c6:	08 95       	ret
    56c8:	46 2f       	mov	r20, r22
    56ca:	47 70       	andi	r20, 0x07	; 7
    56cc:	40 5d       	subi	r20, 0xD0	; 208
    56ce:	41 93       	st	Z+, r20
    56d0:	b3 e0       	ldi	r27, 0x03	; 3
    56d2:	0f d0       	rcall	.+30     	; 0x56f2 <__ultoa_invert+0x86>
    56d4:	c9 f7       	brne	.-14     	; 0x56c8 <__ultoa_invert+0x5c>
    56d6:	f6 cf       	rjmp	.-20     	; 0x56c4 <__ultoa_invert+0x58>
    56d8:	46 2f       	mov	r20, r22
    56da:	4f 70       	andi	r20, 0x0F	; 15
    56dc:	40 5d       	subi	r20, 0xD0	; 208
    56de:	4a 33       	cpi	r20, 0x3A	; 58
    56e0:	18 f0       	brcs	.+6      	; 0x56e8 <__ultoa_invert+0x7c>
    56e2:	49 5d       	subi	r20, 0xD9	; 217
    56e4:	31 fd       	sbrc	r19, 1
    56e6:	40 52       	subi	r20, 0x20	; 32
    56e8:	41 93       	st	Z+, r20
    56ea:	02 d0       	rcall	.+4      	; 0x56f0 <__ultoa_invert+0x84>
    56ec:	a9 f7       	brne	.-22     	; 0x56d8 <__ultoa_invert+0x6c>
    56ee:	ea cf       	rjmp	.-44     	; 0x56c4 <__ultoa_invert+0x58>
    56f0:	b4 e0       	ldi	r27, 0x04	; 4
    56f2:	a6 95       	lsr	r26
    56f4:	97 95       	ror	r25
    56f6:	87 95       	ror	r24
    56f8:	77 95       	ror	r23
    56fa:	67 95       	ror	r22
    56fc:	ba 95       	dec	r27
    56fe:	c9 f7       	brne	.-14     	; 0x56f2 <__ultoa_invert+0x86>
    5700:	00 97       	sbiw	r24, 0x00	; 0
    5702:	61 05       	cpc	r22, r1
    5704:	71 05       	cpc	r23, r1
    5706:	08 95       	ret
    5708:	9b 01       	movw	r18, r22
    570a:	ac 01       	movw	r20, r24
    570c:	0a 2e       	mov	r0, r26
    570e:	06 94       	lsr	r0
    5710:	57 95       	ror	r21
    5712:	47 95       	ror	r20
    5714:	37 95       	ror	r19
    5716:	27 95       	ror	r18
    5718:	ba 95       	dec	r27
    571a:	c9 f7       	brne	.-14     	; 0x570e <__ultoa_invert+0xa2>
    571c:	62 0f       	add	r22, r18
    571e:	73 1f       	adc	r23, r19
    5720:	84 1f       	adc	r24, r20
    5722:	95 1f       	adc	r25, r21
    5724:	a0 1d       	adc	r26, r0
    5726:	08 95       	ret

00005728 <__ctype_isfalse>:
    5728:	99 27       	eor	r25, r25
    572a:	88 27       	eor	r24, r24

0000572c <__ctype_istrue>:
    572c:	08 95       	ret

0000572e <__prologue_saves__>:
    572e:	2f 92       	push	r2
    5730:	3f 92       	push	r3
    5732:	4f 92       	push	r4
    5734:	5f 92       	push	r5
    5736:	6f 92       	push	r6
    5738:	7f 92       	push	r7
    573a:	8f 92       	push	r8
    573c:	9f 92       	push	r9
    573e:	af 92       	push	r10
    5740:	bf 92       	push	r11
    5742:	cf 92       	push	r12
    5744:	df 92       	push	r13
    5746:	ef 92       	push	r14
    5748:	ff 92       	push	r15
    574a:	0f 93       	push	r16
    574c:	1f 93       	push	r17
    574e:	cf 93       	push	r28
    5750:	df 93       	push	r29
    5752:	cd b7       	in	r28, 0x3d	; 61
    5754:	de b7       	in	r29, 0x3e	; 62
    5756:	ca 1b       	sub	r28, r26
    5758:	db 0b       	sbc	r29, r27
    575a:	0f b6       	in	r0, 0x3f	; 63
    575c:	f8 94       	cli
    575e:	de bf       	out	0x3e, r29	; 62
    5760:	0f be       	out	0x3f, r0	; 63
    5762:	cd bf       	out	0x3d, r28	; 61
    5764:	09 94       	ijmp

00005766 <__epilogue_restores__>:
    5766:	2a 88       	ldd	r2, Y+18	; 0x12
    5768:	39 88       	ldd	r3, Y+17	; 0x11
    576a:	48 88       	ldd	r4, Y+16	; 0x10
    576c:	5f 84       	ldd	r5, Y+15	; 0x0f
    576e:	6e 84       	ldd	r6, Y+14	; 0x0e
    5770:	7d 84       	ldd	r7, Y+13	; 0x0d
    5772:	8c 84       	ldd	r8, Y+12	; 0x0c
    5774:	9b 84       	ldd	r9, Y+11	; 0x0b
    5776:	aa 84       	ldd	r10, Y+10	; 0x0a
    5778:	b9 84       	ldd	r11, Y+9	; 0x09
    577a:	c8 84       	ldd	r12, Y+8	; 0x08
    577c:	df 80       	ldd	r13, Y+7	; 0x07
    577e:	ee 80       	ldd	r14, Y+6	; 0x06
    5780:	fd 80       	ldd	r15, Y+5	; 0x05
    5782:	0c 81       	ldd	r16, Y+4	; 0x04
    5784:	1b 81       	ldd	r17, Y+3	; 0x03
    5786:	aa 81       	ldd	r26, Y+2	; 0x02
    5788:	b9 81       	ldd	r27, Y+1	; 0x01
    578a:	ce 0f       	add	r28, r30
    578c:	d1 1d       	adc	r29, r1
    578e:	0f b6       	in	r0, 0x3f	; 63
    5790:	f8 94       	cli
    5792:	de bf       	out	0x3e, r29	; 62
    5794:	0f be       	out	0x3f, r0	; 63
    5796:	cd bf       	out	0x3d, r28	; 61
    5798:	ed 01       	movw	r28, r26
    579a:	08 95       	ret

0000579c <_exit>:
    579c:	f8 94       	cli

0000579e <__stop_program>:
    579e:	ff cf       	rjmp	.-2      	; 0x579e <__stop_program>
